apply plugin: 'com.android.application'
apply plugin: "com.google.protobuf"
//apply plugin: 'bugly'


//bugly {
//    appId = 'cdd1cf248e' // 注册时分配的App ID
//    appKey = 'ad7d462f-58c4-41ff-b174-956ed8c1434c' // 注册时分配的App Key
//}


android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'

    defaultConfig {
//        ndk {
//            //设置支持的SO库架构
//            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
//        }
        applicationId rootProject.APPLICATION_ID
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.APPLICATION_VERSION_CODE as int
        versionName rootProject.APPLICATION_VERSION_NAME
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }



    buildTypes {
        //正式版本
        release {
            minifyEnabled true  //true表示混淆
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [
                    packagename: rootProject.APPLICATION_ID,
                    appname    : rootProject.APPLICATION_NAME
            ]
            buildConfigField("String", "PROTOCOL_VERSION", "\"${APPLICATION_PROTOCOLVERSION}\"")
        }
        //版本
        debug {
            applicationIdSuffix ".debug"
            minifyEnabled false     //是否混淆
            manifestPlaceholders = [
                    packagename: rootProject.APPLICATION_ID + ".debug",
                    appname    : rootProject.APPLICATION_NAME + "测试包"
            ]
            buildConfigField("String", "PROTOCOL_VERSION", "\"${APPLICATION_PROTOCOLVERSION}\"")
        }
    }

    //设置proto资源位置
    sourceSets {
        main {
            proto {
                srcDir 'src/main/proto'
            }
            java {
                srcDirs 'src/main/java', 'generated-sources/main/java'
            }
        }
    }

//    splits {
//        abi {
//            enable true
//            reset()
//            include 'x86', 'armeabi-v7a', 'x86_64'
//            universalApk true
//        }
//    }

    dexOptions {
        jumboMode true
    }

    lintOptions {
        checkReleaseBuilds false
    }
}

dependencies {
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile "com.android.support:appcompat-v7:$appcompatVersion"
    compile 'com.android.support:design:26.1.0'
    compile 'com.android.support:recyclerview-v7:26.1.0'
    compile 'com.android.support:cardview-v7:26.1.0'
    compile 'com.android.support:support-emoji-bundled:26.1.0'
    compile 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    testCompile 'junit:junit:4.12'
    compile project(':logger')
    compile 'com.google.protobuf:protobuf-lite:3.0.0'
    compile project(':xrecyclerview')
    compile 'org.greenrobot:eventbus:3.0.0'
    compile project(':zbar')
    compile project(':PhotoPicker')
    implementation 'com.google.zxing:core:3.2.1'
    implementation 'de.hdodenhof:circleimageview:2.2.0'
    implementation 'com.kyleduo.switchbutton:library:2.0.0'
    implementation 'com.belerweb:pinyin4j:2.5.0'
    implementation 'com.blankj:utilcode:1.17.2'
    //////调试工具，正式版需要注释掉
    //    compile 'com.facebook.stetho:stetho:1.5.0'
    //    compile 'com.facebook.stetho:stetho-okhttp3:1.5.0'
    //leak，正式版需要注释掉
    //    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    //    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    debugCompile 'com.amitshekhar.android:debug-db:1.0.0'
    compile project(':ucrop')
    compile 'commons-codec:commons-codec:1.10'
    compile 'org.bouncycastle:bcprov-jdk16:1.45'
    compile 'com.google.code.gson:gson:2.8.2'
    implementation files('libs/MiPush_SDK_Client_3_5_2.jar')
    implementation 'com.afollestad.material-dialogs:core:0.9.6.0'
    //PushSDK必须依赖基础组件库，所以需要加入对应依赖
    compile 'com.umeng.sdk:common:1.5.0'
    //PushSDK必须依赖utdid库，所以需要加入对应依赖
    compile 'com.umeng.sdk:utdid:1.1.5.3'
    //PushSDK
    compile 'com.umeng.sdk:push:4.1.0'
    compile 'com.tencent.bugly:crashreport_upgrade:1.3.5'
    //其中latest.release指代最新版本号，也可以指定明确的版本号，例如1.2.0

    compile 'com.tencent.bugly:nativecrashreport:latest.release'
    //其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.2.0

    implementation 'com.github.bumptech.glide:glide:4.7.1'

    annotationProcessor 'com.github.bumptech.glide:compiler:4.7.1'
}

//添加此段
protobuf {
    //配置protoc编译器
    protoc {
        artifact = 'com.google.protobuf:protoc:3.0.0-alpha-3'
    }
    plugins {
        javalite {
            artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.0'
        }
    }
    //这里配置生成目录，编译后会在build的目录下生成对应的java文件
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                javalite {}
            }
        }
    }
}
configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '26.1.0'
            }
        }
    }
}