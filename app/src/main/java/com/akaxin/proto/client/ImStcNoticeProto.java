// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client/im_stc_notice.proto

package com.akaxin.proto.client;

public final class ImStcNoticeProto {
  private ImStcNoticeProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * Protobuf enum {@code client.NoticeType}
   */
  public enum NoticeType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *断开TCP链接，下线通知
     * </pre>
     *
     * <code>OFFLINE = 0;</code>
     */
    OFFLINE(0),
    /**
     * <pre>
     *新好友申请通知
     * </pre>
     *
     * <code>APPLY_FRIEND = 1;</code>
     */
    APPLY_FRIEND(1),
    /**
     * <pre>
     *新好友添加通知
     * </pre>
     *
     * <code>NEW_FRIEND = 2;</code>
     */
    NEW_FRIEND(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *断开TCP链接，下线通知
     * </pre>
     *
     * <code>OFFLINE = 0;</code>
     */
    public static final int OFFLINE_VALUE = 0;
    /**
     * <pre>
     *新好友申请通知
     * </pre>
     *
     * <code>APPLY_FRIEND = 1;</code>
     */
    public static final int APPLY_FRIEND_VALUE = 1;
    /**
     * <pre>
     *新好友添加通知
     * </pre>
     *
     * <code>NEW_FRIEND = 2;</code>
     */
    public static final int NEW_FRIEND_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static NoticeType valueOf(int value) {
      return forNumber(value);
    }

    public static NoticeType forNumber(int value) {
      switch (value) {
        case 0: return OFFLINE;
        case 1: return APPLY_FRIEND;
        case 2: return NEW_FRIEND;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<NoticeType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        NoticeType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<NoticeType>() {
            public NoticeType findValueByNumber(int number) {
              return NoticeType.forNumber(number);
            }
          };

    private final int value;

    private NoticeType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:client.NoticeType)
  }

  public interface ImStcNoticeRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:client.ImStcNoticeRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .client.NoticeType type = 1;</code>
     */
    int getTypeValue();
    /**
     * <code>optional .client.NoticeType type = 1;</code>
     */
    com.akaxin.proto.client.ImStcNoticeProto.NoticeType getType();
  }
  /**
   * Protobuf type {@code client.ImStcNoticeRequest}
   */
  public  static final class ImStcNoticeRequest extends
      com.google.protobuf.GeneratedMessageLite<
          ImStcNoticeRequest, ImStcNoticeRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:client.ImStcNoticeRequest)
      ImStcNoticeRequestOrBuilder {
    private ImStcNoticeRequest() {
    }
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>optional .client.NoticeType type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>optional .client.NoticeType type = 1;</code>
     */
    public com.akaxin.proto.client.ImStcNoticeProto.NoticeType getType() {
      com.akaxin.proto.client.ImStcNoticeProto.NoticeType result = com.akaxin.proto.client.ImStcNoticeProto.NoticeType.forNumber(type_);
      return result == null ? com.akaxin.proto.client.ImStcNoticeProto.NoticeType.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .client.NoticeType type = 1;</code>
     */
    private void setTypeValue(int value) {
        type_ = value;
    }
    /**
     * <code>optional .client.NoticeType type = 1;</code>
     */
    private void setType(com.akaxin.proto.client.ImStcNoticeProto.NoticeType value) {
      if (value == null) {
        throw new NullPointerException();
      }

      type_ = value.getNumber();
    }
    /**
     * <code>optional .client.NoticeType type = 1;</code>
     */
    private void clearType() {

      type_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != com.akaxin.proto.client.ImStcNoticeProto.NoticeType.OFFLINE.getNumber()) {
        output.writeEnum(1, type_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != com.akaxin.proto.client.ImStcNoticeProto.NoticeType.OFFLINE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.akaxin.proto.client.ImStcNoticeProto.ImStcNoticeRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.akaxin.proto.client.ImStcNoticeProto.ImStcNoticeRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.akaxin.proto.client.ImStcNoticeProto.ImStcNoticeRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.akaxin.proto.client.ImStcNoticeProto.ImStcNoticeRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.akaxin.proto.client.ImStcNoticeProto.ImStcNoticeRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.client.ImStcNoticeProto.ImStcNoticeRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.akaxin.proto.client.ImStcNoticeProto.ImStcNoticeRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.client.ImStcNoticeProto.ImStcNoticeRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.akaxin.proto.client.ImStcNoticeProto.ImStcNoticeRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.client.ImStcNoticeProto.ImStcNoticeRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.akaxin.proto.client.ImStcNoticeProto.ImStcNoticeRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code client.ImStcNoticeRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          ImStcNoticeRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:client.ImStcNoticeRequest)
        com.akaxin.proto.client.ImStcNoticeProto.ImStcNoticeRequestOrBuilder {
      // Construct using com.akaxin.proto.client.ImStcNoticeProto.ImStcNoticeRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .client.NoticeType type = 1;</code>
       */
      public int getTypeValue() {
        return instance.getTypeValue();
      }
      /**
       * <code>optional .client.NoticeType type = 1;</code>
       */
      public Builder setTypeValue(int value) {
        copyOnWrite();
        instance.setTypeValue(value);
        return this;
      }
      /**
       * <code>optional .client.NoticeType type = 1;</code>
       */
      public com.akaxin.proto.client.ImStcNoticeProto.NoticeType getType() {
        return instance.getType();
      }
      /**
       * <code>optional .client.NoticeType type = 1;</code>
       */
      public Builder setType(com.akaxin.proto.client.ImStcNoticeProto.NoticeType value) {
        copyOnWrite();
        instance.setType(value);
        return this;
      }
      /**
       * <code>optional .client.NoticeType type = 1;</code>
       */
      public Builder clearType() {
        copyOnWrite();
        instance.clearType();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:client.ImStcNoticeRequest)
    }
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.akaxin.proto.client.ImStcNoticeProto.ImStcNoticeRequest();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.akaxin.proto.client.ImStcNoticeProto.ImStcNoticeRequest other = (com.akaxin.proto.client.ImStcNoticeProto.ImStcNoticeRequest) arg1;
          type_ = visitor.visitInt(type_ != 0, type_,    other.type_ != 0, other.type_);
          if (visitor == MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();

                  type_ = rawValue;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.akaxin.proto.client.ImStcNoticeProto.ImStcNoticeRequest.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:client.ImStcNoticeRequest)
    private static final com.akaxin.proto.client.ImStcNoticeProto.ImStcNoticeRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ImStcNoticeRequest();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.akaxin.proto.client.ImStcNoticeProto.ImStcNoticeRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ImStcNoticeRequest> PARSER;

    public static com.google.protobuf.Parser<ImStcNoticeRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
