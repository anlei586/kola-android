// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/config.proto

package com.akaxin.proto.core;

public final class ConfigProto {
  private ConfigProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * <pre>
   *实名枚举
   * </pre>
   *
   * Protobuf enum {@code core.RealNameConfig}
   */
  public enum RealNameConfig
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *匿名方式
     * </pre>
     *
     * <code>REALNAME_NO = 0;</code>
     */
    REALNAME_NO(0),
    /**
     * <pre>
     *实名方式,必须用户是实名
     * </pre>
     *
     * <code>REALNAME_YES = 1;</code>
     */
    REALNAME_YES(1),
    /**
     * <pre>
     *优先实名方式，其次接受非实名用户
     * </pre>
     *
     * <code>REALNAME_YES_NO = 2;</code>
     */
    REALNAME_YES_NO(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *匿名方式
     * </pre>
     *
     * <code>REALNAME_NO = 0;</code>
     */
    public static final int REALNAME_NO_VALUE = 0;
    /**
     * <pre>
     *实名方式,必须用户是实名
     * </pre>
     *
     * <code>REALNAME_YES = 1;</code>
     */
    public static final int REALNAME_YES_VALUE = 1;
    /**
     * <pre>
     *优先实名方式，其次接受非实名用户
     * </pre>
     *
     * <code>REALNAME_YES_NO = 2;</code>
     */
    public static final int REALNAME_YES_NO_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static RealNameConfig valueOf(int value) {
      return forNumber(value);
    }

    public static RealNameConfig forNumber(int value) {
      switch (value) {
        case 0: return REALNAME_NO;
        case 1: return REALNAME_YES;
        case 2: return REALNAME_YES_NO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RealNameConfig>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RealNameConfig> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RealNameConfig>() {
            public RealNameConfig findValueByNumber(int number) {
              return RealNameConfig.forNumber(number);
            }
          };

    private final int value;

    private RealNameConfig(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:core.RealNameConfig)
  }

  /**
   * <pre>
   *邀请码枚举
   * </pre>
   *
   * Protobuf enum {@code core.InviteCodeConfig}
   */
  public enum InviteCodeConfig
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *不需要
     * </pre>
     *
     * <code>UIC_NO = 0;</code>
     */
    UIC_NO(0),
    /**
     * <pre>
     *关闭邀请码
     * </pre>
     *
     * <code>UIC_YES = 1;</code>
     */
    UIC_YES(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *不需要
     * </pre>
     *
     * <code>UIC_NO = 0;</code>
     */
    public static final int UIC_NO_VALUE = 0;
    /**
     * <pre>
     *关闭邀请码
     * </pre>
     *
     * <code>UIC_YES = 1;</code>
     */
    public static final int UIC_YES_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static InviteCodeConfig valueOf(int value) {
      return forNumber(value);
    }

    public static InviteCodeConfig forNumber(int value) {
      switch (value) {
        case 0: return UIC_NO;
        case 1: return UIC_YES;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<InviteCodeConfig>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        InviteCodeConfig> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<InviteCodeConfig>() {
            public InviteCodeConfig findValueByNumber(int number) {
              return InviteCodeConfig.forNumber(number);
            }
          };

    private final int value;

    private InviteCodeConfig(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:core.InviteCodeConfig)
  }

  /**
   * <pre>
   *站点开启，关闭状态
   * </pre>
   *
   * Protobuf enum {@code core.SiteStatusConfig}
   */
  public enum SiteStatusConfig
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *站点关闭状态
     * </pre>
     *
     * <code>CLOSE = 0;</code>
     */
    CLOSE(0),
    /**
     * <pre>
     *站点开启状态
     * </pre>
     *
     * <code>OPEN = 1;</code>
     */
    OPEN(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *站点关闭状态
     * </pre>
     *
     * <code>CLOSE = 0;</code>
     */
    public static final int CLOSE_VALUE = 0;
    /**
     * <pre>
     *站点开启状态
     * </pre>
     *
     * <code>OPEN = 1;</code>
     */
    public static final int OPEN_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static SiteStatusConfig valueOf(int value) {
      return forNumber(value);
    }

    public static SiteStatusConfig forNumber(int value) {
      switch (value) {
        case 0: return CLOSE;
        case 1: return OPEN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SiteStatusConfig>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SiteStatusConfig> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SiteStatusConfig>() {
            public SiteStatusConfig findValueByNumber(int number) {
              return SiteStatusConfig.forNumber(number);
            }
          };

    private final int value;

    private SiteStatusConfig(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:core.SiteStatusConfig)
  }

  /**
   * <pre>
   *二人加密状态枚举
   * </pre>
   *
   * Protobuf enum {@code core.U2EncryptionConfig}
   */
  public enum U2EncryptionConfig
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *二人加密关闭
     * </pre>
     *
     * <code>U2_CLOSE = 0;</code>
     */
    U2_CLOSE(0),
    /**
     * <pre>
     *二人加密开启
     * </pre>
     *
     * <code>U2_OPEN = 1;</code>
     */
    U2_OPEN(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *二人加密关闭
     * </pre>
     *
     * <code>U2_CLOSE = 0;</code>
     */
    public static final int U2_CLOSE_VALUE = 0;
    /**
     * <pre>
     *二人加密开启
     * </pre>
     *
     * <code>U2_OPEN = 1;</code>
     */
    public static final int U2_OPEN_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static U2EncryptionConfig valueOf(int value) {
      return forNumber(value);
    }

    public static U2EncryptionConfig forNumber(int value) {
      switch (value) {
        case 0: return U2_CLOSE;
        case 1: return U2_OPEN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<U2EncryptionConfig>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        U2EncryptionConfig> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<U2EncryptionConfig>() {
            public U2EncryptionConfig findValueByNumber(int number) {
              return U2EncryptionConfig.forNumber(number);
            }
          };

    private final int value;

    private U2EncryptionConfig(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:core.U2EncryptionConfig)
  }

  /**
   * <pre>
   *站点后台管理配置key
   * </pre>
   *
   * Protobuf enum {@code core.ConfigKey}
   */
  public enum ConfigKey
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *站点地址
     * </pre>
     *
     * <code>SITE_ADDRESS = 0;</code>
     */
    SITE_ADDRESS(0),
    /**
     * <pre>
     *站点端口
     * </pre>
     *
     * <code>SITE_PORT = 1;</code>
     */
    SITE_PORT(1),
    /**
     * <pre>
     *站点名称
     * </pre>
     *
     * <code>SITE_NAME = 2;</code>
     */
    SITE_NAME(2),
    /**
     * <pre>
     *站点logo
     * </pre>
     *
     * <code>SITE_LOGO = 3;</code>
     */
    SITE_LOGO(3),
    /**
     * <pre>
     *站点版本
     * </pre>
     *
     * <code>SITE_VERSION = 4;</code>
     */
    SITE_VERSION(4),
    /**
     * <pre>
     *站点介绍
     * </pre>
     *
     * <code>SITE_INTRODUCTION = 5;</code>
     */
    SITE_INTRODUCTION(5),
    /**
     * <pre>
     *实名状态
     * </pre>
     *
     * <code>REALNAME_STATUS = 6;</code>
     */
    REALNAME_STATUS(6),
    /**
     * <pre>
     *站点支持群最大成员数
     * </pre>
     *
     * <code>GROUP_MEMBERS_COUNT = 7;</code>
     */
    GROUP_MEMBERS_COUNT(7),
    /**
     * <pre>
     *站点图片支持最大尺寸
     * </pre>
     *
     * <code>PIC_SIZE = 8;</code>
     */
    PIC_SIZE(8),
    /**
     * <pre>
     *站点图片存放位置
     * </pre>
     *
     * <code>PIC_PATH = 9;</code>
     */
    PIC_PATH(9),
    /**
     * <pre>
     *站点状态，站点关闭(status=0)/站点开启(status=1)
     * </pre>
     *
     * <code>SITE_STATUS = 10;</code>
     */
    SITE_STATUS(10),
    /**
     * <pre>
     *站点关闭情况下，需要一个说明
     * </pre>
     *
     * <code>SITE_STATUS_INFO = 11;</code>
     */
    SITE_STATUS_INFO(11),
    /**
     * <pre>
     *站点超级管理员，唯一一个用户
     * </pre>
     *
     * <code>SITE_ADMIN = 12;</code>
     */
    SITE_ADMIN(12),
    /**
     * <pre>
     *站点http服务地址
     * </pre>
     *
     * <code>SITE_HTTP_ADDRESS = 13;</code>
     */
    SITE_HTTP_ADDRESS(13),
    /**
     * <pre>
     *站点http服务地址ip
     * </pre>
     *
     * <code>SITE_HTTP_PORT = 14;</code>
     */
    SITE_HTTP_PORT(14),
    /**
     * <pre>
     *二人消息绝密功能是否开启
     * </pre>
     *
     * <code>U2_ENCRYPTION_STATUS = 15;</code>
     */
    U2_ENCRYPTION_STATUS(15),
    /**
     * <pre>
     *数据库路径
     * </pre>
     *
     * <code>DB_PATH = 16;</code>
     */
    DB_PATH(16),
    /**
     * <pre>
     *PushClientStatus
     * </pre>
     *
     * <code>PUSH_CLIENT_STATUS = 17;</code>
     */
    PUSH_CLIENT_STATUS(17),
    /**
     * <pre>
     *系统的日志级别 DEBUG/INFO/ERROR
     * </pre>
     *
     * <code>LOG_LEVEL = 18;</code>
     */
    LOG_LEVEL(18),
    /**
     * <pre>
     *站点管理员，多个用户，用“,”隔开
     * </pre>
     *
     * <code>SITE_MANAGER = 19;</code>
     */
    SITE_MANAGER(19),
    /**
     * <pre>
     *邀请码状态
     * </pre>
     *
     * <code>INVITE_CODE_STATUS = 20;</code>
     */
    INVITE_CODE_STATUS(20),
    /**
     * <pre>
     *默认添加的用户好友
     * </pre>
     *
     * <code>DEFAULT_USER_FRIENDS = 21;</code>
     */
    DEFAULT_USER_FRIENDS(21),
    /**
     * <pre>
     *默认添加的用户群组
     * </pre>
     *
     * <code>DEFAULT_USER_GROUPS = 22;</code>
     */
    DEFAULT_USER_GROUPS(22),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *站点地址
     * </pre>
     *
     * <code>SITE_ADDRESS = 0;</code>
     */
    public static final int SITE_ADDRESS_VALUE = 0;
    /**
     * <pre>
     *站点端口
     * </pre>
     *
     * <code>SITE_PORT = 1;</code>
     */
    public static final int SITE_PORT_VALUE = 1;
    /**
     * <pre>
     *站点名称
     * </pre>
     *
     * <code>SITE_NAME = 2;</code>
     */
    public static final int SITE_NAME_VALUE = 2;
    /**
     * <pre>
     *站点logo
     * </pre>
     *
     * <code>SITE_LOGO = 3;</code>
     */
    public static final int SITE_LOGO_VALUE = 3;
    /**
     * <pre>
     *站点版本
     * </pre>
     *
     * <code>SITE_VERSION = 4;</code>
     */
    public static final int SITE_VERSION_VALUE = 4;
    /**
     * <pre>
     *站点介绍
     * </pre>
     *
     * <code>SITE_INTRODUCTION = 5;</code>
     */
    public static final int SITE_INTRODUCTION_VALUE = 5;
    /**
     * <pre>
     *实名状态
     * </pre>
     *
     * <code>REALNAME_STATUS = 6;</code>
     */
    public static final int REALNAME_STATUS_VALUE = 6;
    /**
     * <pre>
     *站点支持群最大成员数
     * </pre>
     *
     * <code>GROUP_MEMBERS_COUNT = 7;</code>
     */
    public static final int GROUP_MEMBERS_COUNT_VALUE = 7;
    /**
     * <pre>
     *站点图片支持最大尺寸
     * </pre>
     *
     * <code>PIC_SIZE = 8;</code>
     */
    public static final int PIC_SIZE_VALUE = 8;
    /**
     * <pre>
     *站点图片存放位置
     * </pre>
     *
     * <code>PIC_PATH = 9;</code>
     */
    public static final int PIC_PATH_VALUE = 9;
    /**
     * <pre>
     *站点状态，站点关闭(status=0)/站点开启(status=1)
     * </pre>
     *
     * <code>SITE_STATUS = 10;</code>
     */
    public static final int SITE_STATUS_VALUE = 10;
    /**
     * <pre>
     *站点关闭情况下，需要一个说明
     * </pre>
     *
     * <code>SITE_STATUS_INFO = 11;</code>
     */
    public static final int SITE_STATUS_INFO_VALUE = 11;
    /**
     * <pre>
     *站点超级管理员，唯一一个用户
     * </pre>
     *
     * <code>SITE_ADMIN = 12;</code>
     */
    public static final int SITE_ADMIN_VALUE = 12;
    /**
     * <pre>
     *站点http服务地址
     * </pre>
     *
     * <code>SITE_HTTP_ADDRESS = 13;</code>
     */
    public static final int SITE_HTTP_ADDRESS_VALUE = 13;
    /**
     * <pre>
     *站点http服务地址ip
     * </pre>
     *
     * <code>SITE_HTTP_PORT = 14;</code>
     */
    public static final int SITE_HTTP_PORT_VALUE = 14;
    /**
     * <pre>
     *二人消息绝密功能是否开启
     * </pre>
     *
     * <code>U2_ENCRYPTION_STATUS = 15;</code>
     */
    public static final int U2_ENCRYPTION_STATUS_VALUE = 15;
    /**
     * <pre>
     *数据库路径
     * </pre>
     *
     * <code>DB_PATH = 16;</code>
     */
    public static final int DB_PATH_VALUE = 16;
    /**
     * <pre>
     *PushClientStatus
     * </pre>
     *
     * <code>PUSH_CLIENT_STATUS = 17;</code>
     */
    public static final int PUSH_CLIENT_STATUS_VALUE = 17;
    /**
     * <pre>
     *系统的日志级别 DEBUG/INFO/ERROR
     * </pre>
     *
     * <code>LOG_LEVEL = 18;</code>
     */
    public static final int LOG_LEVEL_VALUE = 18;
    /**
     * <pre>
     *站点管理员，多个用户，用“,”隔开
     * </pre>
     *
     * <code>SITE_MANAGER = 19;</code>
     */
    public static final int SITE_MANAGER_VALUE = 19;
    /**
     * <pre>
     *邀请码状态
     * </pre>
     *
     * <code>INVITE_CODE_STATUS = 20;</code>
     */
    public static final int INVITE_CODE_STATUS_VALUE = 20;
    /**
     * <pre>
     *默认添加的用户好友
     * </pre>
     *
     * <code>DEFAULT_USER_FRIENDS = 21;</code>
     */
    public static final int DEFAULT_USER_FRIENDS_VALUE = 21;
    /**
     * <pre>
     *默认添加的用户群组
     * </pre>
     *
     * <code>DEFAULT_USER_GROUPS = 22;</code>
     */
    public static final int DEFAULT_USER_GROUPS_VALUE = 22;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static ConfigKey valueOf(int value) {
      return forNumber(value);
    }

    public static ConfigKey forNumber(int value) {
      switch (value) {
        case 0: return SITE_ADDRESS;
        case 1: return SITE_PORT;
        case 2: return SITE_NAME;
        case 3: return SITE_LOGO;
        case 4: return SITE_VERSION;
        case 5: return SITE_INTRODUCTION;
        case 6: return REALNAME_STATUS;
        case 7: return GROUP_MEMBERS_COUNT;
        case 8: return PIC_SIZE;
        case 9: return PIC_PATH;
        case 10: return SITE_STATUS;
        case 11: return SITE_STATUS_INFO;
        case 12: return SITE_ADMIN;
        case 13: return SITE_HTTP_ADDRESS;
        case 14: return SITE_HTTP_PORT;
        case 15: return U2_ENCRYPTION_STATUS;
        case 16: return DB_PATH;
        case 17: return PUSH_CLIENT_STATUS;
        case 18: return LOG_LEVEL;
        case 19: return SITE_MANAGER;
        case 20: return INVITE_CODE_STATUS;
        case 21: return DEFAULT_USER_FRIENDS;
        case 22: return DEFAULT_USER_GROUPS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ConfigKey>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ConfigKey> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ConfigKey>() {
            public ConfigKey findValueByNumber(int number) {
              return ConfigKey.forNumber(number);
            }
          };

    private final int value;

    private ConfigKey(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:core.ConfigKey)
  }

  /**
   * <pre>
   *站点发送PUSH给客户端的三种状态
   * </pre>
   *
   * Protobuf enum {@code core.PushClientStatus}
   */
  public enum PushClientStatus
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     *站点不发送push给客户端
     * </pre>
     *
     * <code>PUSH_NO = 0;</code>
     */
    PUSH_NO(0),
    /**
     * <pre>
     *站点发送PUSH不展示文本内容
     * </pre>
     *
     * <code>PUSH_HIDDEN_TEXT = 1;</code>
     */
    PUSH_HIDDEN_TEXT(1),
    /**
     * <pre>
     *站点发送PUSH显示文本内容
     * </pre>
     *
     * <code>PUSH_DISPLAY_TEXT = 2;</code>
     */
    PUSH_DISPLAY_TEXT(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *站点不发送push给客户端
     * </pre>
     *
     * <code>PUSH_NO = 0;</code>
     */
    public static final int PUSH_NO_VALUE = 0;
    /**
     * <pre>
     *站点发送PUSH不展示文本内容
     * </pre>
     *
     * <code>PUSH_HIDDEN_TEXT = 1;</code>
     */
    public static final int PUSH_HIDDEN_TEXT_VALUE = 1;
    /**
     * <pre>
     *站点发送PUSH显示文本内容
     * </pre>
     *
     * <code>PUSH_DISPLAY_TEXT = 2;</code>
     */
    public static final int PUSH_DISPLAY_TEXT_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static PushClientStatus valueOf(int value) {
      return forNumber(value);
    }

    public static PushClientStatus forNumber(int value) {
      switch (value) {
        case 0: return PUSH_NO;
        case 1: return PUSH_HIDDEN_TEXT;
        case 2: return PUSH_DISPLAY_TEXT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PushClientStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PushClientStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PushClientStatus>() {
            public PushClientStatus findValueByNumber(int number) {
              return PushClientStatus.forNumber(number);
            }
          };

    private final int value;

    private PushClientStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:core.PushClientStatus)
  }

  public interface SiteConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:core.SiteConfig)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *站点ip
     * </pre>
     *
     * <code>optional string site_address = 1;</code>
     */
    String getSiteAddress();
    /**
     * <pre>
     *站点ip
     * </pre>
     *
     * <code>optional string site_address = 1;</code>
     */
    com.google.protobuf.ByteString
        getSiteAddressBytes();

    /**
     * <pre>
     *站点地址
     * </pre>
     *
     * <code>optional int32 site_port = 2;</code>
     */
    int getSitePort();

    /**
     * <pre>
     *站点名称
     * </pre>
     *
     * <code>optional string site_name = 3;</code>
     */
    String getSiteName();
    /**
     * <pre>
     *站点名称
     * </pre>
     *
     * <code>optional string site_name = 3;</code>
     */
    com.google.protobuf.ByteString
        getSiteNameBytes();

    /**
     * <pre>
     *站点logo
     * </pre>
     *
     * <code>optional string site_logo = 4;</code>
     */
    String getSiteLogo();
    /**
     * <pre>
     *站点logo
     * </pre>
     *
     * <code>optional string site_logo = 4;</code>
     */
    com.google.protobuf.ByteString
        getSiteLogoBytes();

    /**
     * <pre>
     *站点版本
     * </pre>
     *
     * <code>optional string site_version = 5;</code>
     */
    String getSiteVersion();
    /**
     * <pre>
     *站点版本
     * </pre>
     *
     * <code>optional string site_version = 5;</code>
     */
    com.google.protobuf.ByteString
        getSiteVersionBytes();

    /**
     * <pre>
     *站点介绍
     * </pre>
     *
     * <code>optional string site_introduction = 6;</code>
     */
    String getSiteIntroduction();
    /**
     * <pre>
     *站点介绍
     * </pre>
     *
     * <code>optional string site_introduction = 6;</code>
     */
    com.google.protobuf.ByteString
        getSiteIntroductionBytes();

    /**
     * <pre>
     *站点是否需要实名
     * </pre>
     *
     * <code>optional .core.RealNameConfig real_name_config = 7;</code>
     */
    int getRealNameConfigValue();
    /**
     * <pre>
     *站点是否需要实名
     * </pre>
     *
     * <code>optional .core.RealNameConfig real_name_config = 7;</code>
     */
    com.akaxin.proto.core.ConfigProto.RealNameConfig getRealNameConfig();

    /**
     * <pre>
     *支持图片大小（width x length）
     * </pre>
     *
     * <code>optional string pic_size = 8;</code>
     */
    String getPicSize();
    /**
     * <pre>
     *支持图片大小（width x length）
     * </pre>
     *
     * <code>optional string pic_size = 8;</code>
     */
    com.google.protobuf.ByteString
        getPicSizeBytes();

    /**
     * <pre>
     *站点状态
     * </pre>
     *
     * <code>optional .core.SiteStatusConfig site_status_config = 9;</code>
     */
    int getSiteStatusConfigValue();
    /**
     * <pre>
     *站点状态
     * </pre>
     *
     * <code>optional .core.SiteStatusConfig site_status_config = 9;</code>
     */
    com.akaxin.proto.core.ConfigProto.SiteStatusConfig getSiteStatusConfig();

    /**
     * <pre>
     *站点状态说明，一般关闭站点情况使用
     * </pre>
     *
     * <code>optional string site_status_info = 10;</code>
     */
    String getSiteStatusInfo();
    /**
     * <pre>
     *站点状态说明，一般关闭站点情况使用
     * </pre>
     *
     * <code>optional string site_status_info = 10;</code>
     */
    com.google.protobuf.ByteString
        getSiteStatusInfoBytes();

    /**
     * <pre>
     *二人消息加密状态
     * </pre>
     *
     * <code>optional .core.U2EncryptionConfig u2_encryption_config = 11;</code>
     */
    int getU2EncryptionConfigValue();
    /**
     * <pre>
     *二人消息加密状态
     * </pre>
     *
     * <code>optional .core.U2EncryptionConfig u2_encryption_config = 11;</code>
     */
    com.akaxin.proto.core.ConfigProto.U2EncryptionConfig getU2EncryptionConfig();

    /**
     * <pre>
     *站点注册是否需要邀请码
     * </pre>
     *
     * <code>optional .core.InviteCodeConfig invite_code_config = 12;</code>
     */
    int getInviteCodeConfigValue();
    /**
     * <pre>
     *站点注册是否需要邀请码
     * </pre>
     *
     * <code>optional .core.InviteCodeConfig invite_code_config = 12;</code>
     */
    com.akaxin.proto.core.ConfigProto.InviteCodeConfig getInviteCodeConfig();
  }
  /**
   * <pre>
   * 站点配置信息
   * </pre>
   *
   * Protobuf type {@code core.SiteConfig}
   */
  public  static final class SiteConfig extends
      com.google.protobuf.GeneratedMessageLite<
          SiteConfig, SiteConfig.Builder> implements
      // @@protoc_insertion_point(message_implements:core.SiteConfig)
      SiteConfigOrBuilder {
    private SiteConfig() {
      siteAddress_ = "";
      siteName_ = "";
      siteLogo_ = "";
      siteVersion_ = "";
      siteIntroduction_ = "";
      picSize_ = "";
      siteStatusInfo_ = "";
    }
    public static final int SITE_ADDRESS_FIELD_NUMBER = 1;
    private String siteAddress_;
    /**
     * <pre>
     *站点ip
     * </pre>
     *
     * <code>optional string site_address = 1;</code>
     */
    public String getSiteAddress() {
      return siteAddress_;
    }
    /**
     * <pre>
     *站点ip
     * </pre>
     *
     * <code>optional string site_address = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSiteAddressBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(siteAddress_);
    }
    /**
     * <pre>
     *站点ip
     * </pre>
     *
     * <code>optional string site_address = 1;</code>
     */
    private void setSiteAddress(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      siteAddress_ = value;
    }
    /**
     * <pre>
     *站点ip
     * </pre>
     *
     * <code>optional string site_address = 1;</code>
     */
    private void clearSiteAddress() {

      siteAddress_ = getDefaultInstance().getSiteAddress();
    }
    /**
     * <pre>
     *站点ip
     * </pre>
     *
     * <code>optional string site_address = 1;</code>
     */
    private void setSiteAddressBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      siteAddress_ = value.toStringUtf8();
    }

    public static final int SITE_PORT_FIELD_NUMBER = 2;
    private int sitePort_;
    /**
     * <pre>
     *站点地址
     * </pre>
     *
     * <code>optional int32 site_port = 2;</code>
     */
    public int getSitePort() {
      return sitePort_;
    }
    /**
     * <pre>
     *站点地址
     * </pre>
     *
     * <code>optional int32 site_port = 2;</code>
     */
    private void setSitePort(int value) {

      sitePort_ = value;
    }
    /**
     * <pre>
     *站点地址
     * </pre>
     *
     * <code>optional int32 site_port = 2;</code>
     */
    private void clearSitePort() {

      sitePort_ = 0;
    }

    public static final int SITE_NAME_FIELD_NUMBER = 3;
    private String siteName_;
    /**
     * <pre>
     *站点名称
     * </pre>
     *
     * <code>optional string site_name = 3;</code>
     */
    public String getSiteName() {
      return siteName_;
    }
    /**
     * <pre>
     *站点名称
     * </pre>
     *
     * <code>optional string site_name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getSiteNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(siteName_);
    }
    /**
     * <pre>
     *站点名称
     * </pre>
     *
     * <code>optional string site_name = 3;</code>
     */
    private void setSiteName(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      siteName_ = value;
    }
    /**
     * <pre>
     *站点名称
     * </pre>
     *
     * <code>optional string site_name = 3;</code>
     */
    private void clearSiteName() {

      siteName_ = getDefaultInstance().getSiteName();
    }
    /**
     * <pre>
     *站点名称
     * </pre>
     *
     * <code>optional string site_name = 3;</code>
     */
    private void setSiteNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      siteName_ = value.toStringUtf8();
    }

    public static final int SITE_LOGO_FIELD_NUMBER = 4;
    private String siteLogo_;
    /**
     * <pre>
     *站点logo
     * </pre>
     *
     * <code>optional string site_logo = 4;</code>
     */
    public String getSiteLogo() {
      return siteLogo_;
    }
    /**
     * <pre>
     *站点logo
     * </pre>
     *
     * <code>optional string site_logo = 4;</code>
     */
    public com.google.protobuf.ByteString
        getSiteLogoBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(siteLogo_);
    }
    /**
     * <pre>
     *站点logo
     * </pre>
     *
     * <code>optional string site_logo = 4;</code>
     */
    private void setSiteLogo(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      siteLogo_ = value;
    }
    /**
     * <pre>
     *站点logo
     * </pre>
     *
     * <code>optional string site_logo = 4;</code>
     */
    private void clearSiteLogo() {

      siteLogo_ = getDefaultInstance().getSiteLogo();
    }
    /**
     * <pre>
     *站点logo
     * </pre>
     *
     * <code>optional string site_logo = 4;</code>
     */
    private void setSiteLogoBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      siteLogo_ = value.toStringUtf8();
    }

    public static final int SITE_VERSION_FIELD_NUMBER = 5;
    private String siteVersion_;
    /**
     * <pre>
     *站点版本
     * </pre>
     *
     * <code>optional string site_version = 5;</code>
     */
    public String getSiteVersion() {
      return siteVersion_;
    }
    /**
     * <pre>
     *站点版本
     * </pre>
     *
     * <code>optional string site_version = 5;</code>
     */
    public com.google.protobuf.ByteString
        getSiteVersionBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(siteVersion_);
    }
    /**
     * <pre>
     *站点版本
     * </pre>
     *
     * <code>optional string site_version = 5;</code>
     */
    private void setSiteVersion(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      siteVersion_ = value;
    }
    /**
     * <pre>
     *站点版本
     * </pre>
     *
     * <code>optional string site_version = 5;</code>
     */
    private void clearSiteVersion() {

      siteVersion_ = getDefaultInstance().getSiteVersion();
    }
    /**
     * <pre>
     *站点版本
     * </pre>
     *
     * <code>optional string site_version = 5;</code>
     */
    private void setSiteVersionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      siteVersion_ = value.toStringUtf8();
    }

    public static final int SITE_INTRODUCTION_FIELD_NUMBER = 6;
    private String siteIntroduction_;
    /**
     * <pre>
     *站点介绍
     * </pre>
     *
     * <code>optional string site_introduction = 6;</code>
     */
    public String getSiteIntroduction() {
      return siteIntroduction_;
    }
    /**
     * <pre>
     *站点介绍
     * </pre>
     *
     * <code>optional string site_introduction = 6;</code>
     */
    public com.google.protobuf.ByteString
        getSiteIntroductionBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(siteIntroduction_);
    }
    /**
     * <pre>
     *站点介绍
     * </pre>
     *
     * <code>optional string site_introduction = 6;</code>
     */
    private void setSiteIntroduction(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      siteIntroduction_ = value;
    }
    /**
     * <pre>
     *站点介绍
     * </pre>
     *
     * <code>optional string site_introduction = 6;</code>
     */
    private void clearSiteIntroduction() {

      siteIntroduction_ = getDefaultInstance().getSiteIntroduction();
    }
    /**
     * <pre>
     *站点介绍
     * </pre>
     *
     * <code>optional string site_introduction = 6;</code>
     */
    private void setSiteIntroductionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      siteIntroduction_ = value.toStringUtf8();
    }

    public static final int REAL_NAME_CONFIG_FIELD_NUMBER = 7;
    private int realNameConfig_;
    /**
     * <pre>
     *站点是否需要实名
     * </pre>
     *
     * <code>optional .core.RealNameConfig real_name_config = 7;</code>
     */
    public int getRealNameConfigValue() {
      return realNameConfig_;
    }
    /**
     * <pre>
     *站点是否需要实名
     * </pre>
     *
     * <code>optional .core.RealNameConfig real_name_config = 7;</code>
     */
    public com.akaxin.proto.core.ConfigProto.RealNameConfig getRealNameConfig() {
      com.akaxin.proto.core.ConfigProto.RealNameConfig result = com.akaxin.proto.core.ConfigProto.RealNameConfig.forNumber(realNameConfig_);
      return result == null ? com.akaxin.proto.core.ConfigProto.RealNameConfig.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     *站点是否需要实名
     * </pre>
     *
     * <code>optional .core.RealNameConfig real_name_config = 7;</code>
     */
    private void setRealNameConfigValue(int value) {
        realNameConfig_ = value;
    }
    /**
     * <pre>
     *站点是否需要实名
     * </pre>
     *
     * <code>optional .core.RealNameConfig real_name_config = 7;</code>
     */
    private void setRealNameConfig(com.akaxin.proto.core.ConfigProto.RealNameConfig value) {
      if (value == null) {
        throw new NullPointerException();
      }

      realNameConfig_ = value.getNumber();
    }
    /**
     * <pre>
     *站点是否需要实名
     * </pre>
     *
     * <code>optional .core.RealNameConfig real_name_config = 7;</code>
     */
    private void clearRealNameConfig() {

      realNameConfig_ = 0;
    }

    public static final int PIC_SIZE_FIELD_NUMBER = 8;
    private String picSize_;
    /**
     * <pre>
     *支持图片大小（width x length）
     * </pre>
     *
     * <code>optional string pic_size = 8;</code>
     */
    public String getPicSize() {
      return picSize_;
    }
    /**
     * <pre>
     *支持图片大小（width x length）
     * </pre>
     *
     * <code>optional string pic_size = 8;</code>
     */
    public com.google.protobuf.ByteString
        getPicSizeBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(picSize_);
    }
    /**
     * <pre>
     *支持图片大小（width x length）
     * </pre>
     *
     * <code>optional string pic_size = 8;</code>
     */
    private void setPicSize(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      picSize_ = value;
    }
    /**
     * <pre>
     *支持图片大小（width x length）
     * </pre>
     *
     * <code>optional string pic_size = 8;</code>
     */
    private void clearPicSize() {

      picSize_ = getDefaultInstance().getPicSize();
    }
    /**
     * <pre>
     *支持图片大小（width x length）
     * </pre>
     *
     * <code>optional string pic_size = 8;</code>
     */
    private void setPicSizeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      picSize_ = value.toStringUtf8();
    }

    public static final int SITE_STATUS_CONFIG_FIELD_NUMBER = 9;
    private int siteStatusConfig_;
    /**
     * <pre>
     *站点状态
     * </pre>
     *
     * <code>optional .core.SiteStatusConfig site_status_config = 9;</code>
     */
    public int getSiteStatusConfigValue() {
      return siteStatusConfig_;
    }
    /**
     * <pre>
     *站点状态
     * </pre>
     *
     * <code>optional .core.SiteStatusConfig site_status_config = 9;</code>
     */
    public com.akaxin.proto.core.ConfigProto.SiteStatusConfig getSiteStatusConfig() {
      com.akaxin.proto.core.ConfigProto.SiteStatusConfig result = com.akaxin.proto.core.ConfigProto.SiteStatusConfig.forNumber(siteStatusConfig_);
      return result == null ? com.akaxin.proto.core.ConfigProto.SiteStatusConfig.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     *站点状态
     * </pre>
     *
     * <code>optional .core.SiteStatusConfig site_status_config = 9;</code>
     */
    private void setSiteStatusConfigValue(int value) {
        siteStatusConfig_ = value;
    }
    /**
     * <pre>
     *站点状态
     * </pre>
     *
     * <code>optional .core.SiteStatusConfig site_status_config = 9;</code>
     */
    private void setSiteStatusConfig(com.akaxin.proto.core.ConfigProto.SiteStatusConfig value) {
      if (value == null) {
        throw new NullPointerException();
      }

      siteStatusConfig_ = value.getNumber();
    }
    /**
     * <pre>
     *站点状态
     * </pre>
     *
     * <code>optional .core.SiteStatusConfig site_status_config = 9;</code>
     */
    private void clearSiteStatusConfig() {

      siteStatusConfig_ = 0;
    }

    public static final int SITE_STATUS_INFO_FIELD_NUMBER = 10;
    private String siteStatusInfo_;
    /**
     * <pre>
     *站点状态说明，一般关闭站点情况使用
     * </pre>
     *
     * <code>optional string site_status_info = 10;</code>
     */
    public String getSiteStatusInfo() {
      return siteStatusInfo_;
    }
    /**
     * <pre>
     *站点状态说明，一般关闭站点情况使用
     * </pre>
     *
     * <code>optional string site_status_info = 10;</code>
     */
    public com.google.protobuf.ByteString
        getSiteStatusInfoBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(siteStatusInfo_);
    }
    /**
     * <pre>
     *站点状态说明，一般关闭站点情况使用
     * </pre>
     *
     * <code>optional string site_status_info = 10;</code>
     */
    private void setSiteStatusInfo(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      siteStatusInfo_ = value;
    }
    /**
     * <pre>
     *站点状态说明，一般关闭站点情况使用
     * </pre>
     *
     * <code>optional string site_status_info = 10;</code>
     */
    private void clearSiteStatusInfo() {

      siteStatusInfo_ = getDefaultInstance().getSiteStatusInfo();
    }
    /**
     * <pre>
     *站点状态说明，一般关闭站点情况使用
     * </pre>
     *
     * <code>optional string site_status_info = 10;</code>
     */
    private void setSiteStatusInfoBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      siteStatusInfo_ = value.toStringUtf8();
    }

    public static final int U2_ENCRYPTION_CONFIG_FIELD_NUMBER = 11;
    private int u2EncryptionConfig_;
    /**
     * <pre>
     *二人消息加密状态
     * </pre>
     *
     * <code>optional .core.U2EncryptionConfig u2_encryption_config = 11;</code>
     */
    public int getU2EncryptionConfigValue() {
      return u2EncryptionConfig_;
    }
    /**
     * <pre>
     *二人消息加密状态
     * </pre>
     *
     * <code>optional .core.U2EncryptionConfig u2_encryption_config = 11;</code>
     */
    public com.akaxin.proto.core.ConfigProto.U2EncryptionConfig getU2EncryptionConfig() {
      com.akaxin.proto.core.ConfigProto.U2EncryptionConfig result = com.akaxin.proto.core.ConfigProto.U2EncryptionConfig.forNumber(u2EncryptionConfig_);
      return result == null ? com.akaxin.proto.core.ConfigProto.U2EncryptionConfig.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     *二人消息加密状态
     * </pre>
     *
     * <code>optional .core.U2EncryptionConfig u2_encryption_config = 11;</code>
     */
    private void setU2EncryptionConfigValue(int value) {
        u2EncryptionConfig_ = value;
    }
    /**
     * <pre>
     *二人消息加密状态
     * </pre>
     *
     * <code>optional .core.U2EncryptionConfig u2_encryption_config = 11;</code>
     */
    private void setU2EncryptionConfig(com.akaxin.proto.core.ConfigProto.U2EncryptionConfig value) {
      if (value == null) {
        throw new NullPointerException();
      }

      u2EncryptionConfig_ = value.getNumber();
    }
    /**
     * <pre>
     *二人消息加密状态
     * </pre>
     *
     * <code>optional .core.U2EncryptionConfig u2_encryption_config = 11;</code>
     */
    private void clearU2EncryptionConfig() {

      u2EncryptionConfig_ = 0;
    }

    public static final int INVITE_CODE_CONFIG_FIELD_NUMBER = 12;
    private int inviteCodeConfig_;
    /**
     * <pre>
     *站点注册是否需要邀请码
     * </pre>
     *
     * <code>optional .core.InviteCodeConfig invite_code_config = 12;</code>
     */
    public int getInviteCodeConfigValue() {
      return inviteCodeConfig_;
    }
    /**
     * <pre>
     *站点注册是否需要邀请码
     * </pre>
     *
     * <code>optional .core.InviteCodeConfig invite_code_config = 12;</code>
     */
    public com.akaxin.proto.core.ConfigProto.InviteCodeConfig getInviteCodeConfig() {
      com.akaxin.proto.core.ConfigProto.InviteCodeConfig result = com.akaxin.proto.core.ConfigProto.InviteCodeConfig.forNumber(inviteCodeConfig_);
      return result == null ? com.akaxin.proto.core.ConfigProto.InviteCodeConfig.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     *站点注册是否需要邀请码
     * </pre>
     *
     * <code>optional .core.InviteCodeConfig invite_code_config = 12;</code>
     */
    private void setInviteCodeConfigValue(int value) {
        inviteCodeConfig_ = value;
    }
    /**
     * <pre>
     *站点注册是否需要邀请码
     * </pre>
     *
     * <code>optional .core.InviteCodeConfig invite_code_config = 12;</code>
     */
    private void setInviteCodeConfig(com.akaxin.proto.core.ConfigProto.InviteCodeConfig value) {
      if (value == null) {
        throw new NullPointerException();
      }

      inviteCodeConfig_ = value.getNumber();
    }
    /**
     * <pre>
     *站点注册是否需要邀请码
     * </pre>
     *
     * <code>optional .core.InviteCodeConfig invite_code_config = 12;</code>
     */
    private void clearInviteCodeConfig() {

      inviteCodeConfig_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!siteAddress_.isEmpty()) {
        output.writeString(1, getSiteAddress());
      }
      if (sitePort_ != 0) {
        output.writeInt32(2, sitePort_);
      }
      if (!siteName_.isEmpty()) {
        output.writeString(3, getSiteName());
      }
      if (!siteLogo_.isEmpty()) {
        output.writeString(4, getSiteLogo());
      }
      if (!siteVersion_.isEmpty()) {
        output.writeString(5, getSiteVersion());
      }
      if (!siteIntroduction_.isEmpty()) {
        output.writeString(6, getSiteIntroduction());
      }
      if (realNameConfig_ != com.akaxin.proto.core.ConfigProto.RealNameConfig.REALNAME_NO.getNumber()) {
        output.writeEnum(7, realNameConfig_);
      }
      if (!picSize_.isEmpty()) {
        output.writeString(8, getPicSize());
      }
      if (siteStatusConfig_ != com.akaxin.proto.core.ConfigProto.SiteStatusConfig.CLOSE.getNumber()) {
        output.writeEnum(9, siteStatusConfig_);
      }
      if (!siteStatusInfo_.isEmpty()) {
        output.writeString(10, getSiteStatusInfo());
      }
      if (u2EncryptionConfig_ != com.akaxin.proto.core.ConfigProto.U2EncryptionConfig.U2_CLOSE.getNumber()) {
        output.writeEnum(11, u2EncryptionConfig_);
      }
      if (inviteCodeConfig_ != com.akaxin.proto.core.ConfigProto.InviteCodeConfig.UIC_NO.getNumber()) {
        output.writeEnum(12, inviteCodeConfig_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!siteAddress_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getSiteAddress());
      }
      if (sitePort_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, sitePort_);
      }
      if (!siteName_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getSiteName());
      }
      if (!siteLogo_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getSiteLogo());
      }
      if (!siteVersion_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getSiteVersion());
      }
      if (!siteIntroduction_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(6, getSiteIntroduction());
      }
      if (realNameConfig_ != com.akaxin.proto.core.ConfigProto.RealNameConfig.REALNAME_NO.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, realNameConfig_);
      }
      if (!picSize_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(8, getPicSize());
      }
      if (siteStatusConfig_ != com.akaxin.proto.core.ConfigProto.SiteStatusConfig.CLOSE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(9, siteStatusConfig_);
      }
      if (!siteStatusInfo_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(10, getSiteStatusInfo());
      }
      if (u2EncryptionConfig_ != com.akaxin.proto.core.ConfigProto.U2EncryptionConfig.U2_CLOSE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(11, u2EncryptionConfig_);
      }
      if (inviteCodeConfig_ != com.akaxin.proto.core.ConfigProto.InviteCodeConfig.UIC_NO.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(12, inviteCodeConfig_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.akaxin.proto.core.ConfigProto.SiteConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.akaxin.proto.core.ConfigProto.SiteConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.akaxin.proto.core.ConfigProto.SiteConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.akaxin.proto.core.ConfigProto.SiteConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.akaxin.proto.core.ConfigProto.SiteConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.core.ConfigProto.SiteConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.akaxin.proto.core.ConfigProto.SiteConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.core.ConfigProto.SiteConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.akaxin.proto.core.ConfigProto.SiteConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.core.ConfigProto.SiteConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.akaxin.proto.core.ConfigProto.SiteConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * 站点配置信息
     * </pre>
     *
     * Protobuf type {@code core.SiteConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          SiteConfig, Builder> implements
        // @@protoc_insertion_point(builder_implements:core.SiteConfig)
        com.akaxin.proto.core.ConfigProto.SiteConfigOrBuilder {
      // Construct using com.akaxin.proto.core.ConfigProto.SiteConfig.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *站点ip
       * </pre>
       *
       * <code>optional string site_address = 1;</code>
       */
      public String getSiteAddress() {
        return instance.getSiteAddress();
      }
      /**
       * <pre>
       *站点ip
       * </pre>
       *
       * <code>optional string site_address = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSiteAddressBytes() {
        return instance.getSiteAddressBytes();
      }
      /**
       * <pre>
       *站点ip
       * </pre>
       *
       * <code>optional string site_address = 1;</code>
       */
      public Builder setSiteAddress(
          String value) {
        copyOnWrite();
        instance.setSiteAddress(value);
        return this;
      }
      /**
       * <pre>
       *站点ip
       * </pre>
       *
       * <code>optional string site_address = 1;</code>
       */
      public Builder clearSiteAddress() {
        copyOnWrite();
        instance.clearSiteAddress();
        return this;
      }
      /**
       * <pre>
       *站点ip
       * </pre>
       *
       * <code>optional string site_address = 1;</code>
       */
      public Builder setSiteAddressBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSiteAddressBytes(value);
        return this;
      }

      /**
       * <pre>
       *站点地址
       * </pre>
       *
       * <code>optional int32 site_port = 2;</code>
       */
      public int getSitePort() {
        return instance.getSitePort();
      }
      /**
       * <pre>
       *站点地址
       * </pre>
       *
       * <code>optional int32 site_port = 2;</code>
       */
      public Builder setSitePort(int value) {
        copyOnWrite();
        instance.setSitePort(value);
        return this;
      }
      /**
       * <pre>
       *站点地址
       * </pre>
       *
       * <code>optional int32 site_port = 2;</code>
       */
      public Builder clearSitePort() {
        copyOnWrite();
        instance.clearSitePort();
        return this;
      }

      /**
       * <pre>
       *站点名称
       * </pre>
       *
       * <code>optional string site_name = 3;</code>
       */
      public String getSiteName() {
        return instance.getSiteName();
      }
      /**
       * <pre>
       *站点名称
       * </pre>
       *
       * <code>optional string site_name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getSiteNameBytes() {
        return instance.getSiteNameBytes();
      }
      /**
       * <pre>
       *站点名称
       * </pre>
       *
       * <code>optional string site_name = 3;</code>
       */
      public Builder setSiteName(
          String value) {
        copyOnWrite();
        instance.setSiteName(value);
        return this;
      }
      /**
       * <pre>
       *站点名称
       * </pre>
       *
       * <code>optional string site_name = 3;</code>
       */
      public Builder clearSiteName() {
        copyOnWrite();
        instance.clearSiteName();
        return this;
      }
      /**
       * <pre>
       *站点名称
       * </pre>
       *
       * <code>optional string site_name = 3;</code>
       */
      public Builder setSiteNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSiteNameBytes(value);
        return this;
      }

      /**
       * <pre>
       *站点logo
       * </pre>
       *
       * <code>optional string site_logo = 4;</code>
       */
      public String getSiteLogo() {
        return instance.getSiteLogo();
      }
      /**
       * <pre>
       *站点logo
       * </pre>
       *
       * <code>optional string site_logo = 4;</code>
       */
      public com.google.protobuf.ByteString
          getSiteLogoBytes() {
        return instance.getSiteLogoBytes();
      }
      /**
       * <pre>
       *站点logo
       * </pre>
       *
       * <code>optional string site_logo = 4;</code>
       */
      public Builder setSiteLogo(
          String value) {
        copyOnWrite();
        instance.setSiteLogo(value);
        return this;
      }
      /**
       * <pre>
       *站点logo
       * </pre>
       *
       * <code>optional string site_logo = 4;</code>
       */
      public Builder clearSiteLogo() {
        copyOnWrite();
        instance.clearSiteLogo();
        return this;
      }
      /**
       * <pre>
       *站点logo
       * </pre>
       *
       * <code>optional string site_logo = 4;</code>
       */
      public Builder setSiteLogoBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSiteLogoBytes(value);
        return this;
      }

      /**
       * <pre>
       *站点版本
       * </pre>
       *
       * <code>optional string site_version = 5;</code>
       */
      public String getSiteVersion() {
        return instance.getSiteVersion();
      }
      /**
       * <pre>
       *站点版本
       * </pre>
       *
       * <code>optional string site_version = 5;</code>
       */
      public com.google.protobuf.ByteString
          getSiteVersionBytes() {
        return instance.getSiteVersionBytes();
      }
      /**
       * <pre>
       *站点版本
       * </pre>
       *
       * <code>optional string site_version = 5;</code>
       */
      public Builder setSiteVersion(
          String value) {
        copyOnWrite();
        instance.setSiteVersion(value);
        return this;
      }
      /**
       * <pre>
       *站点版本
       * </pre>
       *
       * <code>optional string site_version = 5;</code>
       */
      public Builder clearSiteVersion() {
        copyOnWrite();
        instance.clearSiteVersion();
        return this;
      }
      /**
       * <pre>
       *站点版本
       * </pre>
       *
       * <code>optional string site_version = 5;</code>
       */
      public Builder setSiteVersionBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSiteVersionBytes(value);
        return this;
      }

      /**
       * <pre>
       *站点介绍
       * </pre>
       *
       * <code>optional string site_introduction = 6;</code>
       */
      public String getSiteIntroduction() {
        return instance.getSiteIntroduction();
      }
      /**
       * <pre>
       *站点介绍
       * </pre>
       *
       * <code>optional string site_introduction = 6;</code>
       */
      public com.google.protobuf.ByteString
          getSiteIntroductionBytes() {
        return instance.getSiteIntroductionBytes();
      }
      /**
       * <pre>
       *站点介绍
       * </pre>
       *
       * <code>optional string site_introduction = 6;</code>
       */
      public Builder setSiteIntroduction(
          String value) {
        copyOnWrite();
        instance.setSiteIntroduction(value);
        return this;
      }
      /**
       * <pre>
       *站点介绍
       * </pre>
       *
       * <code>optional string site_introduction = 6;</code>
       */
      public Builder clearSiteIntroduction() {
        copyOnWrite();
        instance.clearSiteIntroduction();
        return this;
      }
      /**
       * <pre>
       *站点介绍
       * </pre>
       *
       * <code>optional string site_introduction = 6;</code>
       */
      public Builder setSiteIntroductionBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSiteIntroductionBytes(value);
        return this;
      }

      /**
       * <pre>
       *站点是否需要实名
       * </pre>
       *
       * <code>optional .core.RealNameConfig real_name_config = 7;</code>
       */
      public int getRealNameConfigValue() {
        return instance.getRealNameConfigValue();
      }
      /**
       * <pre>
       *站点是否需要实名
       * </pre>
       *
       * <code>optional .core.RealNameConfig real_name_config = 7;</code>
       */
      public Builder setRealNameConfigValue(int value) {
        copyOnWrite();
        instance.setRealNameConfigValue(value);
        return this;
      }
      /**
       * <pre>
       *站点是否需要实名
       * </pre>
       *
       * <code>optional .core.RealNameConfig real_name_config = 7;</code>
       */
      public com.akaxin.proto.core.ConfigProto.RealNameConfig getRealNameConfig() {
        return instance.getRealNameConfig();
      }
      /**
       * <pre>
       *站点是否需要实名
       * </pre>
       *
       * <code>optional .core.RealNameConfig real_name_config = 7;</code>
       */
      public Builder setRealNameConfig(com.akaxin.proto.core.ConfigProto.RealNameConfig value) {
        copyOnWrite();
        instance.setRealNameConfig(value);
        return this;
      }
      /**
       * <pre>
       *站点是否需要实名
       * </pre>
       *
       * <code>optional .core.RealNameConfig real_name_config = 7;</code>
       */
      public Builder clearRealNameConfig() {
        copyOnWrite();
        instance.clearRealNameConfig();
        return this;
      }

      /**
       * <pre>
       *支持图片大小（width x length）
       * </pre>
       *
       * <code>optional string pic_size = 8;</code>
       */
      public String getPicSize() {
        return instance.getPicSize();
      }
      /**
       * <pre>
       *支持图片大小（width x length）
       * </pre>
       *
       * <code>optional string pic_size = 8;</code>
       */
      public com.google.protobuf.ByteString
          getPicSizeBytes() {
        return instance.getPicSizeBytes();
      }
      /**
       * <pre>
       *支持图片大小（width x length）
       * </pre>
       *
       * <code>optional string pic_size = 8;</code>
       */
      public Builder setPicSize(
          String value) {
        copyOnWrite();
        instance.setPicSize(value);
        return this;
      }
      /**
       * <pre>
       *支持图片大小（width x length）
       * </pre>
       *
       * <code>optional string pic_size = 8;</code>
       */
      public Builder clearPicSize() {
        copyOnWrite();
        instance.clearPicSize();
        return this;
      }
      /**
       * <pre>
       *支持图片大小（width x length）
       * </pre>
       *
       * <code>optional string pic_size = 8;</code>
       */
      public Builder setPicSizeBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPicSizeBytes(value);
        return this;
      }

      /**
       * <pre>
       *站点状态
       * </pre>
       *
       * <code>optional .core.SiteStatusConfig site_status_config = 9;</code>
       */
      public int getSiteStatusConfigValue() {
        return instance.getSiteStatusConfigValue();
      }
      /**
       * <pre>
       *站点状态
       * </pre>
       *
       * <code>optional .core.SiteStatusConfig site_status_config = 9;</code>
       */
      public Builder setSiteStatusConfigValue(int value) {
        copyOnWrite();
        instance.setSiteStatusConfigValue(value);
        return this;
      }
      /**
       * <pre>
       *站点状态
       * </pre>
       *
       * <code>optional .core.SiteStatusConfig site_status_config = 9;</code>
       */
      public com.akaxin.proto.core.ConfigProto.SiteStatusConfig getSiteStatusConfig() {
        return instance.getSiteStatusConfig();
      }
      /**
       * <pre>
       *站点状态
       * </pre>
       *
       * <code>optional .core.SiteStatusConfig site_status_config = 9;</code>
       */
      public Builder setSiteStatusConfig(com.akaxin.proto.core.ConfigProto.SiteStatusConfig value) {
        copyOnWrite();
        instance.setSiteStatusConfig(value);
        return this;
      }
      /**
       * <pre>
       *站点状态
       * </pre>
       *
       * <code>optional .core.SiteStatusConfig site_status_config = 9;</code>
       */
      public Builder clearSiteStatusConfig() {
        copyOnWrite();
        instance.clearSiteStatusConfig();
        return this;
      }

      /**
       * <pre>
       *站点状态说明，一般关闭站点情况使用
       * </pre>
       *
       * <code>optional string site_status_info = 10;</code>
       */
      public String getSiteStatusInfo() {
        return instance.getSiteStatusInfo();
      }
      /**
       * <pre>
       *站点状态说明，一般关闭站点情况使用
       * </pre>
       *
       * <code>optional string site_status_info = 10;</code>
       */
      public com.google.protobuf.ByteString
          getSiteStatusInfoBytes() {
        return instance.getSiteStatusInfoBytes();
      }
      /**
       * <pre>
       *站点状态说明，一般关闭站点情况使用
       * </pre>
       *
       * <code>optional string site_status_info = 10;</code>
       */
      public Builder setSiteStatusInfo(
          String value) {
        copyOnWrite();
        instance.setSiteStatusInfo(value);
        return this;
      }
      /**
       * <pre>
       *站点状态说明，一般关闭站点情况使用
       * </pre>
       *
       * <code>optional string site_status_info = 10;</code>
       */
      public Builder clearSiteStatusInfo() {
        copyOnWrite();
        instance.clearSiteStatusInfo();
        return this;
      }
      /**
       * <pre>
       *站点状态说明，一般关闭站点情况使用
       * </pre>
       *
       * <code>optional string site_status_info = 10;</code>
       */
      public Builder setSiteStatusInfoBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSiteStatusInfoBytes(value);
        return this;
      }

      /**
       * <pre>
       *二人消息加密状态
       * </pre>
       *
       * <code>optional .core.U2EncryptionConfig u2_encryption_config = 11;</code>
       */
      public int getU2EncryptionConfigValue() {
        return instance.getU2EncryptionConfigValue();
      }
      /**
       * <pre>
       *二人消息加密状态
       * </pre>
       *
       * <code>optional .core.U2EncryptionConfig u2_encryption_config = 11;</code>
       */
      public Builder setU2EncryptionConfigValue(int value) {
        copyOnWrite();
        instance.setU2EncryptionConfigValue(value);
        return this;
      }
      /**
       * <pre>
       *二人消息加密状态
       * </pre>
       *
       * <code>optional .core.U2EncryptionConfig u2_encryption_config = 11;</code>
       */
      public com.akaxin.proto.core.ConfigProto.U2EncryptionConfig getU2EncryptionConfig() {
        return instance.getU2EncryptionConfig();
      }
      /**
       * <pre>
       *二人消息加密状态
       * </pre>
       *
       * <code>optional .core.U2EncryptionConfig u2_encryption_config = 11;</code>
       */
      public Builder setU2EncryptionConfig(com.akaxin.proto.core.ConfigProto.U2EncryptionConfig value) {
        copyOnWrite();
        instance.setU2EncryptionConfig(value);
        return this;
      }
      /**
       * <pre>
       *二人消息加密状态
       * </pre>
       *
       * <code>optional .core.U2EncryptionConfig u2_encryption_config = 11;</code>
       */
      public Builder clearU2EncryptionConfig() {
        copyOnWrite();
        instance.clearU2EncryptionConfig();
        return this;
      }

      /**
       * <pre>
       *站点注册是否需要邀请码
       * </pre>
       *
       * <code>optional .core.InviteCodeConfig invite_code_config = 12;</code>
       */
      public int getInviteCodeConfigValue() {
        return instance.getInviteCodeConfigValue();
      }
      /**
       * <pre>
       *站点注册是否需要邀请码
       * </pre>
       *
       * <code>optional .core.InviteCodeConfig invite_code_config = 12;</code>
       */
      public Builder setInviteCodeConfigValue(int value) {
        copyOnWrite();
        instance.setInviteCodeConfigValue(value);
        return this;
      }
      /**
       * <pre>
       *站点注册是否需要邀请码
       * </pre>
       *
       * <code>optional .core.InviteCodeConfig invite_code_config = 12;</code>
       */
      public com.akaxin.proto.core.ConfigProto.InviteCodeConfig getInviteCodeConfig() {
        return instance.getInviteCodeConfig();
      }
      /**
       * <pre>
       *站点注册是否需要邀请码
       * </pre>
       *
       * <code>optional .core.InviteCodeConfig invite_code_config = 12;</code>
       */
      public Builder setInviteCodeConfig(com.akaxin.proto.core.ConfigProto.InviteCodeConfig value) {
        copyOnWrite();
        instance.setInviteCodeConfig(value);
        return this;
      }
      /**
       * <pre>
       *站点注册是否需要邀请码
       * </pre>
       *
       * <code>optional .core.InviteCodeConfig invite_code_config = 12;</code>
       */
      public Builder clearInviteCodeConfig() {
        copyOnWrite();
        instance.clearInviteCodeConfig();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:core.SiteConfig)
    }
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.akaxin.proto.core.ConfigProto.SiteConfig();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.akaxin.proto.core.ConfigProto.SiteConfig other = (com.akaxin.proto.core.ConfigProto.SiteConfig) arg1;
          siteAddress_ = visitor.visitString(!siteAddress_.isEmpty(), siteAddress_,
              !other.siteAddress_.isEmpty(), other.siteAddress_);
          sitePort_ = visitor.visitInt(sitePort_ != 0, sitePort_,
              other.sitePort_ != 0, other.sitePort_);
          siteName_ = visitor.visitString(!siteName_.isEmpty(), siteName_,
              !other.siteName_.isEmpty(), other.siteName_);
          siteLogo_ = visitor.visitString(!siteLogo_.isEmpty(), siteLogo_,
              !other.siteLogo_.isEmpty(), other.siteLogo_);
          siteVersion_ = visitor.visitString(!siteVersion_.isEmpty(), siteVersion_,
              !other.siteVersion_.isEmpty(), other.siteVersion_);
          siteIntroduction_ = visitor.visitString(!siteIntroduction_.isEmpty(), siteIntroduction_,
              !other.siteIntroduction_.isEmpty(), other.siteIntroduction_);
          realNameConfig_ = visitor.visitInt(realNameConfig_ != 0, realNameConfig_,    other.realNameConfig_ != 0, other.realNameConfig_);
          picSize_ = visitor.visitString(!picSize_.isEmpty(), picSize_,
              !other.picSize_.isEmpty(), other.picSize_);
          siteStatusConfig_ = visitor.visitInt(siteStatusConfig_ != 0, siteStatusConfig_,    other.siteStatusConfig_ != 0, other.siteStatusConfig_);
          siteStatusInfo_ = visitor.visitString(!siteStatusInfo_.isEmpty(), siteStatusInfo_,
              !other.siteStatusInfo_.isEmpty(), other.siteStatusInfo_);
          u2EncryptionConfig_ = visitor.visitInt(u2EncryptionConfig_ != 0, u2EncryptionConfig_,    other.u2EncryptionConfig_ != 0, other.u2EncryptionConfig_);
          inviteCodeConfig_ = visitor.visitInt(inviteCodeConfig_ != 0, inviteCodeConfig_,    other.inviteCodeConfig_ != 0, other.inviteCodeConfig_);
          if (visitor == MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  siteAddress_ = s;
                  break;
                }
                case 16: {

                  sitePort_ = input.readInt32();
                  break;
                }
                case 26: {
                  String s = input.readStringRequireUtf8();

                  siteName_ = s;
                  break;
                }
                case 34: {
                  String s = input.readStringRequireUtf8();

                  siteLogo_ = s;
                  break;
                }
                case 42: {
                  String s = input.readStringRequireUtf8();

                  siteVersion_ = s;
                  break;
                }
                case 50: {
                  String s = input.readStringRequireUtf8();

                  siteIntroduction_ = s;
                  break;
                }
                case 56: {
                  int rawValue = input.readEnum();

                  realNameConfig_ = rawValue;
                  break;
                }
                case 66: {
                  String s = input.readStringRequireUtf8();

                  picSize_ = s;
                  break;
                }
                case 72: {
                  int rawValue = input.readEnum();

                  siteStatusConfig_ = rawValue;
                  break;
                }
                case 82: {
                  String s = input.readStringRequireUtf8();

                  siteStatusInfo_ = s;
                  break;
                }
                case 88: {
                  int rawValue = input.readEnum();

                  u2EncryptionConfig_ = rawValue;
                  break;
                }
                case 96: {
                  int rawValue = input.readEnum();

                  inviteCodeConfig_ = rawValue;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.akaxin.proto.core.ConfigProto.SiteConfig.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:core.SiteConfig)
    private static final com.akaxin.proto.core.ConfigProto.SiteConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SiteConfig();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.akaxin.proto.core.ConfigProto.SiteConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SiteConfig> PARSER;

    public static com.google.protobuf.Parser<SiteConfig> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SiteBackConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:core.SiteBackConfig)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>map&lt;int32, string&gt; site_config = 1;</code>
     */
    int getSiteConfigCount();
    /**
     * <code>map&lt;int32, string&gt; site_config = 1;</code>
     */
    boolean containsSiteConfig(
            int key);
    /**
     * Use {@link #getSiteConfigMap()} instead.
     */
    @Deprecated
    java.util.Map<Integer, String>
    getSiteConfig();
    /**
     * <code>map&lt;int32, string&gt; site_config = 1;</code>
     */
    java.util.Map<Integer, String>
    getSiteConfigMap();
    /**
     * <code>map&lt;int32, string&gt; site_config = 1;</code>
     */

    String getSiteConfigOrDefault(
            int key,
            String defaultValue);
    /**
     * <code>map&lt;int32, string&gt; site_config = 1;</code>
     */

    String getSiteConfigOrThrow(
            int key);
  }
  /**
   * <pre>
   *站点后台管理配置
   * </pre>
   *
   * Protobuf type {@code core.SiteBackConfig}
   */
  public  static final class SiteBackConfig extends
      com.google.protobuf.GeneratedMessageLite<
          SiteBackConfig, SiteBackConfig.Builder> implements
      // @@protoc_insertion_point(message_implements:core.SiteBackConfig)
      SiteBackConfigOrBuilder {
    private SiteBackConfig() {
    }
    public static final int SITE_CONFIG_FIELD_NUMBER = 1;
    private static final class SiteConfigDefaultEntryHolder {
      static final com.google.protobuf.MapEntryLite<
          Integer, String> defaultEntry =
              com.google.protobuf.MapEntryLite
              .<Integer, String>newDefaultInstance(
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapFieldLite<
        Integer, String> siteConfig_ =
            com.google.protobuf.MapFieldLite.emptyMapField();
    private com.google.protobuf.MapFieldLite<Integer, String>
    internalGetSiteConfig() {
      return siteConfig_;
    }
    private com.google.protobuf.MapFieldLite<Integer, String>
    internalGetMutableSiteConfig() {
      if (!siteConfig_.isMutable()) {
        siteConfig_ = siteConfig_.mutableCopy();
      }
      return siteConfig_;
    }

    public int getSiteConfigCount() {
      return internalGetSiteConfig().size();
    }
    /**
     * <code>map&lt;int32, string&gt; site_config = 1;</code>
     */

    public boolean containsSiteConfig(
        int key) {

      return internalGetSiteConfig().containsKey(key);
    }
    /**
     * Use {@link #getSiteConfigMap()} instead.
     */
    @Deprecated
    public java.util.Map<Integer, String> getSiteConfig() {
      return getSiteConfigMap();
    }
    /**
     * <code>map&lt;int32, string&gt; site_config = 1;</code>
     */

    public java.util.Map<Integer, String> getSiteConfigMap() {
      return java.util.Collections.unmodifiableMap(
          internalGetSiteConfig());
    }
    /**
     * <code>map&lt;int32, string&gt; site_config = 1;</code>
     */

    public String getSiteConfigOrDefault(
        int key,
        String defaultValue) {

      java.util.Map<Integer, String> map =
          internalGetSiteConfig();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, string&gt; site_config = 1;</code>
     */

    public String getSiteConfigOrThrow(
        int key) {

      java.util.Map<Integer, String> map =
          internalGetSiteConfig();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;int32, string&gt; site_config = 1;</code>
     */
    private java.util.Map<Integer, String>
    getMutableSiteConfigMap() {
      return internalGetMutableSiteConfig();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (java.util.Map.Entry<Integer, String> entry
           : internalGetSiteConfig().entrySet()) {
        SiteConfigDefaultEntryHolder.defaultEntry.serializeTo(
            output, 1, entry.getKey(), entry.getValue());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<Integer, String> entry
           : internalGetSiteConfig().entrySet()) {
        size += SiteConfigDefaultEntryHolder.defaultEntry.computeMessageSize(
          1, entry.getKey(), entry.getValue());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.akaxin.proto.core.ConfigProto.SiteBackConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.akaxin.proto.core.ConfigProto.SiteBackConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.akaxin.proto.core.ConfigProto.SiteBackConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.akaxin.proto.core.ConfigProto.SiteBackConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.akaxin.proto.core.ConfigProto.SiteBackConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.core.ConfigProto.SiteBackConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.akaxin.proto.core.ConfigProto.SiteBackConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.core.ConfigProto.SiteBackConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.akaxin.proto.core.ConfigProto.SiteBackConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.core.ConfigProto.SiteBackConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.akaxin.proto.core.ConfigProto.SiteBackConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *站点后台管理配置
     * </pre>
     *
     * Protobuf type {@code core.SiteBackConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          SiteBackConfig, Builder> implements
        // @@protoc_insertion_point(builder_implements:core.SiteBackConfig)
        com.akaxin.proto.core.ConfigProto.SiteBackConfigOrBuilder {
      // Construct using com.akaxin.proto.core.ConfigProto.SiteBackConfig.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }



      public int getSiteConfigCount() {
        return instance.getSiteConfigMap().size();
      }
      /**
       * <code>map&lt;int32, string&gt; site_config = 1;</code>
       */

      public boolean containsSiteConfig(
          int key) {

        return instance.getSiteConfigMap().containsKey(key);
      }

      public Builder clearSiteConfig() {
        copyOnWrite();
        instance.getMutableSiteConfigMap().clear();
        return this;
      }
      /**
       * <code>map&lt;int32, string&gt; site_config = 1;</code>
       */

      public Builder removeSiteConfig(
          int key) {

        copyOnWrite();
        instance.getMutableSiteConfigMap().remove(key);
        return this;
      }
      /**
       * Use {@link #getSiteConfigMap()} instead.
       */
      @Deprecated
      public java.util.Map<Integer, String> getSiteConfig() {
        return getSiteConfigMap();
      }
      /**
       * <code>map&lt;int32, string&gt; site_config = 1;</code>
       */
      public java.util.Map<Integer, String> getSiteConfigMap() {
        return java.util.Collections.unmodifiableMap(
            instance.getSiteConfigMap());
      }
      /**
       * <code>map&lt;int32, string&gt; site_config = 1;</code>
       */

      public String getSiteConfigOrDefault(
          int key,
          String defaultValue) {

        java.util.Map<Integer, String> map =
            instance.getSiteConfigMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, string&gt; site_config = 1;</code>
       */

      public String getSiteConfigOrThrow(
          int key) {

        java.util.Map<Integer, String> map =
            instance.getSiteConfigMap();
        if (!map.containsKey(key)) {
          throw new IllegalArgumentException();
        }
        return map.get(key);
      }
      /**
       * <code>map&lt;int32, string&gt; site_config = 1;</code>
       */
      public Builder putSiteConfig(
          int key,
          String value) {

        if (value == null) { throw new NullPointerException(); }
        copyOnWrite();
        instance.getMutableSiteConfigMap().put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, string&gt; site_config = 1;</code>
       */
      public Builder putAllSiteConfig(
          java.util.Map<Integer, String> values) {
        copyOnWrite();
        instance.getMutableSiteConfigMap().putAll(values);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:core.SiteBackConfig)
    }
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.akaxin.proto.core.ConfigProto.SiteBackConfig();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          siteConfig_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.akaxin.proto.core.ConfigProto.SiteBackConfig other = (com.akaxin.proto.core.ConfigProto.SiteBackConfig) arg1;
          siteConfig_ = visitor.visitMap(
              siteConfig_, other.internalGetSiteConfig());
          if (visitor == MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  if (!siteConfig_.isMutable()) {
                    siteConfig_ = siteConfig_.mutableCopy();
                  }
                  SiteConfigDefaultEntryHolder.defaultEntry.parseInto(siteConfig_, input, extensionRegistry);  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.akaxin.proto.core.ConfigProto.SiteBackConfig.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:core.SiteBackConfig)
    private static final com.akaxin.proto.core.ConfigProto.SiteBackConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SiteBackConfig();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.akaxin.proto.core.ConfigProto.SiteBackConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SiteBackConfig> PARSER;

    public static com.google.protobuf.Parser<SiteBackConfig> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
