// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: platform/api_phone_applyToken.proto

package com.akaxin.proto.platform;

public final class ApiPhoneApplyTokenProto {
  private ApiPhoneApplyTokenProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface ApiPhoneApplyTokenRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:platform.ApiPhoneApplyTokenRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * 此值只做判断，不作为依据，应该从Session中获取用户的id。
     * </pre>
     *
     * <code>optional string global_user_id = 1;</code>
     */
    String getGlobalUserId();
    /**
     * <pre>
     * 此值只做判断，不作为依据，应该从Session中获取用户的id。
     * </pre>
     *
     * <code>optional string global_user_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getGlobalUserIdBytes();

    /**
     * <pre>
     * 声明此token是为哪一个站申请的，别的站点无法凭此token获取用户的手机号。只有当站点对应，且用户授权过此站点获取手机号，站点才能获取此用户的手机号
     * </pre>
     *
     * <code>optional string site_address = 2;</code>
     */
    String getSiteAddress();
    /**
     * <pre>
     * 声明此token是为哪一个站申请的，别的站点无法凭此token获取用户的手机号。只有当站点对应，且用户授权过此站点获取手机号，站点才能获取此用户的手机号
     * </pre>
     *
     * <code>optional string site_address = 2;</code>
     */
    com.google.protobuf.ByteString
        getSiteAddressBytes();
  }
  /**
   * Protobuf type {@code platform.ApiPhoneApplyTokenRequest}
   */
  public  static final class ApiPhoneApplyTokenRequest extends
      com.google.protobuf.GeneratedMessageLite<
          ApiPhoneApplyTokenRequest, ApiPhoneApplyTokenRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:platform.ApiPhoneApplyTokenRequest)
      ApiPhoneApplyTokenRequestOrBuilder {
    private ApiPhoneApplyTokenRequest() {
      globalUserId_ = "";
      siteAddress_ = "";
    }
    public static final int GLOBAL_USER_ID_FIELD_NUMBER = 1;
    private String globalUserId_;
    /**
     * <pre>
     * 此值只做判断，不作为依据，应该从Session中获取用户的id。
     * </pre>
     *
     * <code>optional string global_user_id = 1;</code>
     */
    public String getGlobalUserId() {
      return globalUserId_;
    }
    /**
     * <pre>
     * 此值只做判断，不作为依据，应该从Session中获取用户的id。
     * </pre>
     *
     * <code>optional string global_user_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getGlobalUserIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(globalUserId_);
    }
    /**
     * <pre>
     * 此值只做判断，不作为依据，应该从Session中获取用户的id。
     * </pre>
     *
     * <code>optional string global_user_id = 1;</code>
     */
    private void setGlobalUserId(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      globalUserId_ = value;
    }
    /**
     * <pre>
     * 此值只做判断，不作为依据，应该从Session中获取用户的id。
     * </pre>
     *
     * <code>optional string global_user_id = 1;</code>
     */
    private void clearGlobalUserId() {

      globalUserId_ = getDefaultInstance().getGlobalUserId();
    }
    /**
     * <pre>
     * 此值只做判断，不作为依据，应该从Session中获取用户的id。
     * </pre>
     *
     * <code>optional string global_user_id = 1;</code>
     */
    private void setGlobalUserIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      globalUserId_ = value.toStringUtf8();
    }

    public static final int SITE_ADDRESS_FIELD_NUMBER = 2;
    private String siteAddress_;
    /**
     * <pre>
     * 声明此token是为哪一个站申请的，别的站点无法凭此token获取用户的手机号。只有当站点对应，且用户授权过此站点获取手机号，站点才能获取此用户的手机号
     * </pre>
     *
     * <code>optional string site_address = 2;</code>
     */
    public String getSiteAddress() {
      return siteAddress_;
    }
    /**
     * <pre>
     * 声明此token是为哪一个站申请的，别的站点无法凭此token获取用户的手机号。只有当站点对应，且用户授权过此站点获取手机号，站点才能获取此用户的手机号
     * </pre>
     *
     * <code>optional string site_address = 2;</code>
     */
    public com.google.protobuf.ByteString
        getSiteAddressBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(siteAddress_);
    }
    /**
     * <pre>
     * 声明此token是为哪一个站申请的，别的站点无法凭此token获取用户的手机号。只有当站点对应，且用户授权过此站点获取手机号，站点才能获取此用户的手机号
     * </pre>
     *
     * <code>optional string site_address = 2;</code>
     */
    private void setSiteAddress(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      siteAddress_ = value;
    }
    /**
     * <pre>
     * 声明此token是为哪一个站申请的，别的站点无法凭此token获取用户的手机号。只有当站点对应，且用户授权过此站点获取手机号，站点才能获取此用户的手机号
     * </pre>
     *
     * <code>optional string site_address = 2;</code>
     */
    private void clearSiteAddress() {

      siteAddress_ = getDefaultInstance().getSiteAddress();
    }
    /**
     * <pre>
     * 声明此token是为哪一个站申请的，别的站点无法凭此token获取用户的手机号。只有当站点对应，且用户授权过此站点获取手机号，站点才能获取此用户的手机号
     * </pre>
     *
     * <code>optional string site_address = 2;</code>
     */
    private void setSiteAddressBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      siteAddress_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!globalUserId_.isEmpty()) {
        output.writeString(1, getGlobalUserId());
      }
      if (!siteAddress_.isEmpty()) {
        output.writeString(2, getSiteAddress());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!globalUserId_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getGlobalUserId());
      }
      if (!siteAddress_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getSiteAddress());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.akaxin.proto.platform.ApiPhoneApplyTokenProto.ApiPhoneApplyTokenRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.akaxin.proto.platform.ApiPhoneApplyTokenProto.ApiPhoneApplyTokenRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.akaxin.proto.platform.ApiPhoneApplyTokenProto.ApiPhoneApplyTokenRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.akaxin.proto.platform.ApiPhoneApplyTokenProto.ApiPhoneApplyTokenRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.akaxin.proto.platform.ApiPhoneApplyTokenProto.ApiPhoneApplyTokenRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.platform.ApiPhoneApplyTokenProto.ApiPhoneApplyTokenRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.akaxin.proto.platform.ApiPhoneApplyTokenProto.ApiPhoneApplyTokenRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.platform.ApiPhoneApplyTokenProto.ApiPhoneApplyTokenRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.akaxin.proto.platform.ApiPhoneApplyTokenProto.ApiPhoneApplyTokenRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.platform.ApiPhoneApplyTokenProto.ApiPhoneApplyTokenRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.akaxin.proto.platform.ApiPhoneApplyTokenProto.ApiPhoneApplyTokenRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code platform.ApiPhoneApplyTokenRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          ApiPhoneApplyTokenRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:platform.ApiPhoneApplyTokenRequest)
        com.akaxin.proto.platform.ApiPhoneApplyTokenProto.ApiPhoneApplyTokenRequestOrBuilder {
      // Construct using com.akaxin.proto.platform.ApiPhoneApplyTokenProto.ApiPhoneApplyTokenRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * 此值只做判断，不作为依据，应该从Session中获取用户的id。
       * </pre>
       *
       * <code>optional string global_user_id = 1;</code>
       */
      public String getGlobalUserId() {
        return instance.getGlobalUserId();
      }
      /**
       * <pre>
       * 此值只做判断，不作为依据，应该从Session中获取用户的id。
       * </pre>
       *
       * <code>optional string global_user_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getGlobalUserIdBytes() {
        return instance.getGlobalUserIdBytes();
      }
      /**
       * <pre>
       * 此值只做判断，不作为依据，应该从Session中获取用户的id。
       * </pre>
       *
       * <code>optional string global_user_id = 1;</code>
       */
      public Builder setGlobalUserId(
          String value) {
        copyOnWrite();
        instance.setGlobalUserId(value);
        return this;
      }
      /**
       * <pre>
       * 此值只做判断，不作为依据，应该从Session中获取用户的id。
       * </pre>
       *
       * <code>optional string global_user_id = 1;</code>
       */
      public Builder clearGlobalUserId() {
        copyOnWrite();
        instance.clearGlobalUserId();
        return this;
      }
      /**
       * <pre>
       * 此值只做判断，不作为依据，应该从Session中获取用户的id。
       * </pre>
       *
       * <code>optional string global_user_id = 1;</code>
       */
      public Builder setGlobalUserIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setGlobalUserIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * 声明此token是为哪一个站申请的，别的站点无法凭此token获取用户的手机号。只有当站点对应，且用户授权过此站点获取手机号，站点才能获取此用户的手机号
       * </pre>
       *
       * <code>optional string site_address = 2;</code>
       */
      public String getSiteAddress() {
        return instance.getSiteAddress();
      }
      /**
       * <pre>
       * 声明此token是为哪一个站申请的，别的站点无法凭此token获取用户的手机号。只有当站点对应，且用户授权过此站点获取手机号，站点才能获取此用户的手机号
       * </pre>
       *
       * <code>optional string site_address = 2;</code>
       */
      public com.google.protobuf.ByteString
          getSiteAddressBytes() {
        return instance.getSiteAddressBytes();
      }
      /**
       * <pre>
       * 声明此token是为哪一个站申请的，别的站点无法凭此token获取用户的手机号。只有当站点对应，且用户授权过此站点获取手机号，站点才能获取此用户的手机号
       * </pre>
       *
       * <code>optional string site_address = 2;</code>
       */
      public Builder setSiteAddress(
          String value) {
        copyOnWrite();
        instance.setSiteAddress(value);
        return this;
      }
      /**
       * <pre>
       * 声明此token是为哪一个站申请的，别的站点无法凭此token获取用户的手机号。只有当站点对应，且用户授权过此站点获取手机号，站点才能获取此用户的手机号
       * </pre>
       *
       * <code>optional string site_address = 2;</code>
       */
      public Builder clearSiteAddress() {
        copyOnWrite();
        instance.clearSiteAddress();
        return this;
      }
      /**
       * <pre>
       * 声明此token是为哪一个站申请的，别的站点无法凭此token获取用户的手机号。只有当站点对应，且用户授权过此站点获取手机号，站点才能获取此用户的手机号
       * </pre>
       *
       * <code>optional string site_address = 2;</code>
       */
      public Builder setSiteAddressBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSiteAddressBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:platform.ApiPhoneApplyTokenRequest)
    }
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.akaxin.proto.platform.ApiPhoneApplyTokenProto.ApiPhoneApplyTokenRequest();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.akaxin.proto.platform.ApiPhoneApplyTokenProto.ApiPhoneApplyTokenRequest other = (com.akaxin.proto.platform.ApiPhoneApplyTokenProto.ApiPhoneApplyTokenRequest) arg1;
          globalUserId_ = visitor.visitString(!globalUserId_.isEmpty(), globalUserId_,
              !other.globalUserId_.isEmpty(), other.globalUserId_);
          siteAddress_ = visitor.visitString(!siteAddress_.isEmpty(), siteAddress_,
              !other.siteAddress_.isEmpty(), other.siteAddress_);
          if (visitor == MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  globalUserId_ = s;
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();

                  siteAddress_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.akaxin.proto.platform.ApiPhoneApplyTokenProto.ApiPhoneApplyTokenRequest.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:platform.ApiPhoneApplyTokenRequest)
    private static final com.akaxin.proto.platform.ApiPhoneApplyTokenProto.ApiPhoneApplyTokenRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ApiPhoneApplyTokenRequest();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.akaxin.proto.platform.ApiPhoneApplyTokenProto.ApiPhoneApplyTokenRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ApiPhoneApplyTokenRequest> PARSER;

    public static com.google.protobuf.Parser<ApiPhoneApplyTokenRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ApiPhoneApplyTokenResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:platform.ApiPhoneApplyTokenResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *平台允许站点获取手机号code
     * </pre>
     *
     * <code>optional string phone_token = 1;</code>
     */
    String getPhoneToken();
    /**
     * <pre>
     *平台允许站点获取手机号code
     * </pre>
     *
     * <code>optional string phone_token = 1;</code>
     */
    com.google.protobuf.ByteString
        getPhoneTokenBytes();

    /**
     * <pre>
     *code有效时间，单位s
     * </pre>
     *
     * <code>optional int32 expire_time = 2;</code>
     */
    int getExpireTime();

    /**
     * <pre>
     *用户手机号
     * </pre>
     *
     * <code>optional string phone_id = 3;</code>
     */
    String getPhoneId();
    /**
     * <pre>
     *用户手机号
     * </pre>
     *
     * <code>optional string phone_id = 3;</code>
     */
    com.google.protobuf.ByteString
        getPhoneIdBytes();

    /**
     * <pre>
     *+86
     * </pre>
     *
     * <code>optional string country_code = 4;</code>
     */
    String getCountryCode();
    /**
     * <pre>
     *+86
     * </pre>
     *
     * <code>optional string country_code = 4;</code>
     */
    com.google.protobuf.ByteString
        getCountryCodeBytes();
  }
  /**
   * Protobuf type {@code platform.ApiPhoneApplyTokenResponse}
   */
  public  static final class ApiPhoneApplyTokenResponse extends
      com.google.protobuf.GeneratedMessageLite<
          ApiPhoneApplyTokenResponse, ApiPhoneApplyTokenResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:platform.ApiPhoneApplyTokenResponse)
      ApiPhoneApplyTokenResponseOrBuilder {
    private ApiPhoneApplyTokenResponse() {
      phoneToken_ = "";
      phoneId_ = "";
      countryCode_ = "";
    }
    public static final int PHONE_TOKEN_FIELD_NUMBER = 1;
    private String phoneToken_;
    /**
     * <pre>
     *平台允许站点获取手机号code
     * </pre>
     *
     * <code>optional string phone_token = 1;</code>
     */
    public String getPhoneToken() {
      return phoneToken_;
    }
    /**
     * <pre>
     *平台允许站点获取手机号code
     * </pre>
     *
     * <code>optional string phone_token = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPhoneTokenBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(phoneToken_);
    }
    /**
     * <pre>
     *平台允许站点获取手机号code
     * </pre>
     *
     * <code>optional string phone_token = 1;</code>
     */
    private void setPhoneToken(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      phoneToken_ = value;
    }
    /**
     * <pre>
     *平台允许站点获取手机号code
     * </pre>
     *
     * <code>optional string phone_token = 1;</code>
     */
    private void clearPhoneToken() {

      phoneToken_ = getDefaultInstance().getPhoneToken();
    }
    /**
     * <pre>
     *平台允许站点获取手机号code
     * </pre>
     *
     * <code>optional string phone_token = 1;</code>
     */
    private void setPhoneTokenBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      phoneToken_ = value.toStringUtf8();
    }

    public static final int EXPIRE_TIME_FIELD_NUMBER = 2;
    private int expireTime_;
    /**
     * <pre>
     *code有效时间，单位s
     * </pre>
     *
     * <code>optional int32 expire_time = 2;</code>
     */
    public int getExpireTime() {
      return expireTime_;
    }
    /**
     * <pre>
     *code有效时间，单位s
     * </pre>
     *
     * <code>optional int32 expire_time = 2;</code>
     */
    private void setExpireTime(int value) {

      expireTime_ = value;
    }
    /**
     * <pre>
     *code有效时间，单位s
     * </pre>
     *
     * <code>optional int32 expire_time = 2;</code>
     */
    private void clearExpireTime() {

      expireTime_ = 0;
    }

    public static final int PHONE_ID_FIELD_NUMBER = 3;
    private String phoneId_;
    /**
     * <pre>
     *用户手机号
     * </pre>
     *
     * <code>optional string phone_id = 3;</code>
     */
    public String getPhoneId() {
      return phoneId_;
    }
    /**
     * <pre>
     *用户手机号
     * </pre>
     *
     * <code>optional string phone_id = 3;</code>
     */
    public com.google.protobuf.ByteString
        getPhoneIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(phoneId_);
    }
    /**
     * <pre>
     *用户手机号
     * </pre>
     *
     * <code>optional string phone_id = 3;</code>
     */
    private void setPhoneId(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      phoneId_ = value;
    }
    /**
     * <pre>
     *用户手机号
     * </pre>
     *
     * <code>optional string phone_id = 3;</code>
     */
    private void clearPhoneId() {

      phoneId_ = getDefaultInstance().getPhoneId();
    }
    /**
     * <pre>
     *用户手机号
     * </pre>
     *
     * <code>optional string phone_id = 3;</code>
     */
    private void setPhoneIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      phoneId_ = value.toStringUtf8();
    }

    public static final int COUNTRY_CODE_FIELD_NUMBER = 4;
    private String countryCode_;
    /**
     * <pre>
     *+86
     * </pre>
     *
     * <code>optional string country_code = 4;</code>
     */
    public String getCountryCode() {
      return countryCode_;
    }
    /**
     * <pre>
     *+86
     * </pre>
     *
     * <code>optional string country_code = 4;</code>
     */
    public com.google.protobuf.ByteString
        getCountryCodeBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(countryCode_);
    }
    /**
     * <pre>
     *+86
     * </pre>
     *
     * <code>optional string country_code = 4;</code>
     */
    private void setCountryCode(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      countryCode_ = value;
    }
    /**
     * <pre>
     *+86
     * </pre>
     *
     * <code>optional string country_code = 4;</code>
     */
    private void clearCountryCode() {

      countryCode_ = getDefaultInstance().getCountryCode();
    }
    /**
     * <pre>
     *+86
     * </pre>
     *
     * <code>optional string country_code = 4;</code>
     */
    private void setCountryCodeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      countryCode_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!phoneToken_.isEmpty()) {
        output.writeString(1, getPhoneToken());
      }
      if (expireTime_ != 0) {
        output.writeInt32(2, expireTime_);
      }
      if (!phoneId_.isEmpty()) {
        output.writeString(3, getPhoneId());
      }
      if (!countryCode_.isEmpty()) {
        output.writeString(4, getCountryCode());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!phoneToken_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getPhoneToken());
      }
      if (expireTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, expireTime_);
      }
      if (!phoneId_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getPhoneId());
      }
      if (!countryCode_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getCountryCode());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.akaxin.proto.platform.ApiPhoneApplyTokenProto.ApiPhoneApplyTokenResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.akaxin.proto.platform.ApiPhoneApplyTokenProto.ApiPhoneApplyTokenResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.akaxin.proto.platform.ApiPhoneApplyTokenProto.ApiPhoneApplyTokenResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.akaxin.proto.platform.ApiPhoneApplyTokenProto.ApiPhoneApplyTokenResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.akaxin.proto.platform.ApiPhoneApplyTokenProto.ApiPhoneApplyTokenResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.platform.ApiPhoneApplyTokenProto.ApiPhoneApplyTokenResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.akaxin.proto.platform.ApiPhoneApplyTokenProto.ApiPhoneApplyTokenResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.platform.ApiPhoneApplyTokenProto.ApiPhoneApplyTokenResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.akaxin.proto.platform.ApiPhoneApplyTokenProto.ApiPhoneApplyTokenResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.platform.ApiPhoneApplyTokenProto.ApiPhoneApplyTokenResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.akaxin.proto.platform.ApiPhoneApplyTokenProto.ApiPhoneApplyTokenResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code platform.ApiPhoneApplyTokenResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          ApiPhoneApplyTokenResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:platform.ApiPhoneApplyTokenResponse)
        com.akaxin.proto.platform.ApiPhoneApplyTokenProto.ApiPhoneApplyTokenResponseOrBuilder {
      // Construct using com.akaxin.proto.platform.ApiPhoneApplyTokenProto.ApiPhoneApplyTokenResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *平台允许站点获取手机号code
       * </pre>
       *
       * <code>optional string phone_token = 1;</code>
       */
      public String getPhoneToken() {
        return instance.getPhoneToken();
      }
      /**
       * <pre>
       *平台允许站点获取手机号code
       * </pre>
       *
       * <code>optional string phone_token = 1;</code>
       */
      public com.google.protobuf.ByteString
          getPhoneTokenBytes() {
        return instance.getPhoneTokenBytes();
      }
      /**
       * <pre>
       *平台允许站点获取手机号code
       * </pre>
       *
       * <code>optional string phone_token = 1;</code>
       */
      public Builder setPhoneToken(
          String value) {
        copyOnWrite();
        instance.setPhoneToken(value);
        return this;
      }
      /**
       * <pre>
       *平台允许站点获取手机号code
       * </pre>
       *
       * <code>optional string phone_token = 1;</code>
       */
      public Builder clearPhoneToken() {
        copyOnWrite();
        instance.clearPhoneToken();
        return this;
      }
      /**
       * <pre>
       *平台允许站点获取手机号code
       * </pre>
       *
       * <code>optional string phone_token = 1;</code>
       */
      public Builder setPhoneTokenBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPhoneTokenBytes(value);
        return this;
      }

      /**
       * <pre>
       *code有效时间，单位s
       * </pre>
       *
       * <code>optional int32 expire_time = 2;</code>
       */
      public int getExpireTime() {
        return instance.getExpireTime();
      }
      /**
       * <pre>
       *code有效时间，单位s
       * </pre>
       *
       * <code>optional int32 expire_time = 2;</code>
       */
      public Builder setExpireTime(int value) {
        copyOnWrite();
        instance.setExpireTime(value);
        return this;
      }
      /**
       * <pre>
       *code有效时间，单位s
       * </pre>
       *
       * <code>optional int32 expire_time = 2;</code>
       */
      public Builder clearExpireTime() {
        copyOnWrite();
        instance.clearExpireTime();
        return this;
      }

      /**
       * <pre>
       *用户手机号
       * </pre>
       *
       * <code>optional string phone_id = 3;</code>
       */
      public String getPhoneId() {
        return instance.getPhoneId();
      }
      /**
       * <pre>
       *用户手机号
       * </pre>
       *
       * <code>optional string phone_id = 3;</code>
       */
      public com.google.protobuf.ByteString
          getPhoneIdBytes() {
        return instance.getPhoneIdBytes();
      }
      /**
       * <pre>
       *用户手机号
       * </pre>
       *
       * <code>optional string phone_id = 3;</code>
       */
      public Builder setPhoneId(
          String value) {
        copyOnWrite();
        instance.setPhoneId(value);
        return this;
      }
      /**
       * <pre>
       *用户手机号
       * </pre>
       *
       * <code>optional string phone_id = 3;</code>
       */
      public Builder clearPhoneId() {
        copyOnWrite();
        instance.clearPhoneId();
        return this;
      }
      /**
       * <pre>
       *用户手机号
       * </pre>
       *
       * <code>optional string phone_id = 3;</code>
       */
      public Builder setPhoneIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPhoneIdBytes(value);
        return this;
      }

      /**
       * <pre>
       *+86
       * </pre>
       *
       * <code>optional string country_code = 4;</code>
       */
      public String getCountryCode() {
        return instance.getCountryCode();
      }
      /**
       * <pre>
       *+86
       * </pre>
       *
       * <code>optional string country_code = 4;</code>
       */
      public com.google.protobuf.ByteString
          getCountryCodeBytes() {
        return instance.getCountryCodeBytes();
      }
      /**
       * <pre>
       *+86
       * </pre>
       *
       * <code>optional string country_code = 4;</code>
       */
      public Builder setCountryCode(
          String value) {
        copyOnWrite();
        instance.setCountryCode(value);
        return this;
      }
      /**
       * <pre>
       *+86
       * </pre>
       *
       * <code>optional string country_code = 4;</code>
       */
      public Builder clearCountryCode() {
        copyOnWrite();
        instance.clearCountryCode();
        return this;
      }
      /**
       * <pre>
       *+86
       * </pre>
       *
       * <code>optional string country_code = 4;</code>
       */
      public Builder setCountryCodeBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setCountryCodeBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:platform.ApiPhoneApplyTokenResponse)
    }
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.akaxin.proto.platform.ApiPhoneApplyTokenProto.ApiPhoneApplyTokenResponse();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.akaxin.proto.platform.ApiPhoneApplyTokenProto.ApiPhoneApplyTokenResponse other = (com.akaxin.proto.platform.ApiPhoneApplyTokenProto.ApiPhoneApplyTokenResponse) arg1;
          phoneToken_ = visitor.visitString(!phoneToken_.isEmpty(), phoneToken_,
              !other.phoneToken_.isEmpty(), other.phoneToken_);
          expireTime_ = visitor.visitInt(expireTime_ != 0, expireTime_,
              other.expireTime_ != 0, other.expireTime_);
          phoneId_ = visitor.visitString(!phoneId_.isEmpty(), phoneId_,
              !other.phoneId_.isEmpty(), other.phoneId_);
          countryCode_ = visitor.visitString(!countryCode_.isEmpty(), countryCode_,
              !other.countryCode_.isEmpty(), other.countryCode_);
          if (visitor == MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  phoneToken_ = s;
                  break;
                }
                case 16: {

                  expireTime_ = input.readInt32();
                  break;
                }
                case 26: {
                  String s = input.readStringRequireUtf8();

                  phoneId_ = s;
                  break;
                }
                case 34: {
                  String s = input.readStringRequireUtf8();

                  countryCode_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.akaxin.proto.platform.ApiPhoneApplyTokenProto.ApiPhoneApplyTokenResponse.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:platform.ApiPhoneApplyTokenResponse)
    private static final com.akaxin.proto.platform.ApiPhoneApplyTokenProto.ApiPhoneApplyTokenResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ApiPhoneApplyTokenResponse();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.akaxin.proto.platform.ApiPhoneApplyTokenProto.ApiPhoneApplyTokenResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ApiPhoneApplyTokenResponse> PARSER;

    public static com.google.protobuf.Parser<ApiPhoneApplyTokenResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
