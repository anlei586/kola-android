// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: platform/api_platform_login.proto

package com.akaxin.proto.platform;

public final class ApiPlatformLoginProto {
    private ApiPlatformLoginProto() {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistryLite registry) {
    }

    public interface ApiPlatformLoginRequestOrBuilder extends
            // @@protoc_insertion_point(interface_extends:site.ApiPlatformLoginRequest)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         * 用户个人身份公钥
         * </pre>
         * <p>
         * <code>optional string user_id_pubk = 1;</code>
         */
        String getUserIdPubk();

        /**
         * <pre>
         * 用户个人身份公钥
         * </pre>
         * <p>
         * <code>optional string user_id_pubk = 1;</code>
         */
        com.google.protobuf.ByteString
        getUserIdPubkBytes();

        /**
         * <pre>
         * 用户设备公钥
         * </pre>
         * <p>
         * <code>optional string user_device_id_pubk = 2;</code>
         */
        String getUserDeviceIdPubk();

        /**
         * <pre>
         * 用户设备公钥
         * </pre>
         * <p>
         * <code>optional string user_device_id_pubk = 2;</code>
         */
        com.google.protobuf.ByteString
        getUserDeviceIdPubkBytes();

        /**
         * <pre>
         * 用户设备名称
         * </pre>
         * <p>
         * <code>optional string user_device_name = 4;</code>
         */
        String getUserDeviceName();

        /**
         * <pre>
         * 用户设备名称
         * </pre>
         * <p>
         * <code>optional string user_device_name = 4;</code>
         */
        com.google.protobuf.ByteString
        getUserDeviceNameBytes();

        /**
         * <pre>
         * 用户身份公钥签名，证明公钥所属权，需要base64encode。
         * </pre>
         * <p>
         * <code>optional string user_id_sign_base64 = 5;</code>
         */
        String getUserIdSignBase64();

        /**
         * <pre>
         * 用户身份公钥签名，证明公钥所属权，需要base64encode。
         * </pre>
         * <p>
         * <code>optional string user_id_sign_base64 = 5;</code>
         */
        com.google.protobuf.ByteString
        getUserIdSignBase64Bytes();

        /**
         * <pre>
         * 使用user_id_prik对用户的user_device_id_pubk签名，证明这个设备是这个用户的。
         * </pre>
         * <p>
         * <code>optional string user_device_id_sign_base64 = 6;</code>
         */
        String getUserDeviceIdSignBase64();

        /**
         * <pre>
         * 使用user_id_prik对用户的user_device_id_pubk签名，证明这个设备是这个用户的。
         * </pre>
         * <p>
         * <code>optional string user_device_id_sign_base64 = 6;</code>
         */
        com.google.protobuf.ByteString
        getUserDeviceIdSignBase64Bytes();
    }

    /**
     * Protobuf type {@code site.ApiPlatformLoginRequest}
     */
    public static final class ApiPlatformLoginRequest extends
            com.google.protobuf.GeneratedMessageLite<
                    ApiPlatformLoginRequest, ApiPlatformLoginRequest.Builder> implements
            // @@protoc_insertion_point(message_implements:site.ApiPlatformLoginRequest)
            ApiPlatformLoginRequestOrBuilder {
        private ApiPlatformLoginRequest() {
            userIdPubk_ = "";
            userDeviceIdPubk_ = "";
            userDeviceName_ = "";
            userIdSignBase64_ = "";
            userDeviceIdSignBase64_ = "";
        }

        public static final int USER_ID_PUBK_FIELD_NUMBER = 1;
        private String userIdPubk_;

        /**
         * <pre>
         * 用户个人身份公钥
         * </pre>
         * <p>
         * <code>optional string user_id_pubk = 1;</code>
         */
        public String getUserIdPubk() {
            return userIdPubk_;
        }

        /**
         * <pre>
         * 用户个人身份公钥
         * </pre>
         * <p>
         * <code>optional string user_id_pubk = 1;</code>
         */
        public com.google.protobuf.ByteString
        getUserIdPubkBytes() {
            return com.google.protobuf.ByteString.copyFromUtf8(userIdPubk_);
        }

        /**
         * <pre>
         * 用户个人身份公钥
         * </pre>
         * <p>
         * <code>optional string user_id_pubk = 1;</code>
         */
        private void setUserIdPubk(
                String value) {
            if (value == null) {
                throw new NullPointerException();
            }

            userIdPubk_ = value;
        }

        /**
         * <pre>
         * 用户个人身份公钥
         * </pre>
         * <p>
         * <code>optional string user_id_pubk = 1;</code>
         */
        private void clearUserIdPubk() {

            userIdPubk_ = getDefaultInstance().getUserIdPubk();
        }

        /**
         * <pre>
         * 用户个人身份公钥
         * </pre>
         * <p>
         * <code>optional string user_id_pubk = 1;</code>
         */
        private void setUserIdPubkBytes(
                com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            checkByteStringIsUtf8(value);

            userIdPubk_ = value.toStringUtf8();
        }

        public static final int USER_DEVICE_ID_PUBK_FIELD_NUMBER = 2;
        private String userDeviceIdPubk_;

        /**
         * <pre>
         * 用户设备公钥
         * </pre>
         * <p>
         * <code>optional string user_device_id_pubk = 2;</code>
         */
        public String getUserDeviceIdPubk() {
            return userDeviceIdPubk_;
        }

        /**
         * <pre>
         * 用户设备公钥
         * </pre>
         * <p>
         * <code>optional string user_device_id_pubk = 2;</code>
         */
        public com.google.protobuf.ByteString
        getUserDeviceIdPubkBytes() {
            return com.google.protobuf.ByteString.copyFromUtf8(userDeviceIdPubk_);
        }

        /**
         * <pre>
         * 用户设备公钥
         * </pre>
         * <p>
         * <code>optional string user_device_id_pubk = 2;</code>
         */
        private void setUserDeviceIdPubk(
                String value) {
            if (value == null) {
                throw new NullPointerException();
            }

            userDeviceIdPubk_ = value;
        }

        /**
         * <pre>
         * 用户设备公钥
         * </pre>
         * <p>
         * <code>optional string user_device_id_pubk = 2;</code>
         */
        private void clearUserDeviceIdPubk() {

            userDeviceIdPubk_ = getDefaultInstance().getUserDeviceIdPubk();
        }

        /**
         * <pre>
         * 用户设备公钥
         * </pre>
         * <p>
         * <code>optional string user_device_id_pubk = 2;</code>
         */
        private void setUserDeviceIdPubkBytes(
                com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            checkByteStringIsUtf8(value);

            userDeviceIdPubk_ = value.toStringUtf8();
        }

        public static final int USER_DEVICE_NAME_FIELD_NUMBER = 4;
        private String userDeviceName_;

        /**
         * <pre>
         * 用户设备名称
         * </pre>
         * <p>
         * <code>optional string user_device_name = 4;</code>
         */
        public String getUserDeviceName() {
            return userDeviceName_;
        }

        /**
         * <pre>
         * 用户设备名称
         * </pre>
         * <p>
         * <code>optional string user_device_name = 4;</code>
         */
        public com.google.protobuf.ByteString
        getUserDeviceNameBytes() {
            return com.google.protobuf.ByteString.copyFromUtf8(userDeviceName_);
        }

        /**
         * <pre>
         * 用户设备名称
         * </pre>
         * <p>
         * <code>optional string user_device_name = 4;</code>
         */
        private void setUserDeviceName(
                String value) {
            if (value == null) {
                throw new NullPointerException();
            }

            userDeviceName_ = value;
        }

        /**
         * <pre>
         * 用户设备名称
         * </pre>
         * <p>
         * <code>optional string user_device_name = 4;</code>
         */
        private void clearUserDeviceName() {

            userDeviceName_ = getDefaultInstance().getUserDeviceName();
        }

        /**
         * <pre>
         * 用户设备名称
         * </pre>
         * <p>
         * <code>optional string user_device_name = 4;</code>
         */
        private void setUserDeviceNameBytes(
                com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            checkByteStringIsUtf8(value);

            userDeviceName_ = value.toStringUtf8();
        }

        public static final int USER_ID_SIGN_BASE64_FIELD_NUMBER = 5;
        private String userIdSignBase64_;

        /**
         * <pre>
         * 用户身份公钥签名，证明公钥所属权，需要base64encode。
         * </pre>
         * <p>
         * <code>optional string user_id_sign_base64 = 5;</code>
         */
        public String getUserIdSignBase64() {
            return userIdSignBase64_;
        }

        /**
         * <pre>
         * 用户身份公钥签名，证明公钥所属权，需要base64encode。
         * </pre>
         * <p>
         * <code>optional string user_id_sign_base64 = 5;</code>
         */
        public com.google.protobuf.ByteString
        getUserIdSignBase64Bytes() {
            return com.google.protobuf.ByteString.copyFromUtf8(userIdSignBase64_);
        }

        /**
         * <pre>
         * 用户身份公钥签名，证明公钥所属权，需要base64encode。
         * </pre>
         * <p>
         * <code>optional string user_id_sign_base64 = 5;</code>
         */
        private void setUserIdSignBase64(
                String value) {
            if (value == null) {
                throw new NullPointerException();
            }

            userIdSignBase64_ = value;
        }

        /**
         * <pre>
         * 用户身份公钥签名，证明公钥所属权，需要base64encode。
         * </pre>
         * <p>
         * <code>optional string user_id_sign_base64 = 5;</code>
         */
        private void clearUserIdSignBase64() {

            userIdSignBase64_ = getDefaultInstance().getUserIdSignBase64();
        }

        /**
         * <pre>
         * 用户身份公钥签名，证明公钥所属权，需要base64encode。
         * </pre>
         * <p>
         * <code>optional string user_id_sign_base64 = 5;</code>
         */
        private void setUserIdSignBase64Bytes(
                com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            checkByteStringIsUtf8(value);

            userIdSignBase64_ = value.toStringUtf8();
        }

        public static final int USER_DEVICE_ID_SIGN_BASE64_FIELD_NUMBER = 6;
        private String userDeviceIdSignBase64_;

        /**
         * <pre>
         * 使用user_id_prik对用户的user_device_id_pubk签名，证明这个设备是这个用户的。
         * </pre>
         * <p>
         * <code>optional string user_device_id_sign_base64 = 6;</code>
         */
        public String getUserDeviceIdSignBase64() {
            return userDeviceIdSignBase64_;
        }

        /**
         * <pre>
         * 使用user_id_prik对用户的user_device_id_pubk签名，证明这个设备是这个用户的。
         * </pre>
         * <p>
         * <code>optional string user_device_id_sign_base64 = 6;</code>
         */
        public com.google.protobuf.ByteString
        getUserDeviceIdSignBase64Bytes() {
            return com.google.protobuf.ByteString.copyFromUtf8(userDeviceIdSignBase64_);
        }

        /**
         * <pre>
         * 使用user_id_prik对用户的user_device_id_pubk签名，证明这个设备是这个用户的。
         * </pre>
         * <p>
         * <code>optional string user_device_id_sign_base64 = 6;</code>
         */
        private void setUserDeviceIdSignBase64(
                String value) {
            if (value == null) {
                throw new NullPointerException();
            }

            userDeviceIdSignBase64_ = value;
        }

        /**
         * <pre>
         * 使用user_id_prik对用户的user_device_id_pubk签名，证明这个设备是这个用户的。
         * </pre>
         * <p>
         * <code>optional string user_device_id_sign_base64 = 6;</code>
         */
        private void clearUserDeviceIdSignBase64() {

            userDeviceIdSignBase64_ = getDefaultInstance().getUserDeviceIdSignBase64();
        }

        /**
         * <pre>
         * 使用user_id_prik对用户的user_device_id_pubk签名，证明这个设备是这个用户的。
         * </pre>
         * <p>
         * <code>optional string user_device_id_sign_base64 = 6;</code>
         */
        private void setUserDeviceIdSignBase64Bytes(
                com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            checkByteStringIsUtf8(value);

            userDeviceIdSignBase64_ = value.toStringUtf8();
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!userIdPubk_.isEmpty()) {
                output.writeString(1, getUserIdPubk());
            }
            if (!userDeviceIdPubk_.isEmpty()) {
                output.writeString(2, getUserDeviceIdPubk());
            }
            if (!userDeviceName_.isEmpty()) {
                output.writeString(4, getUserDeviceName());
            }
            if (!userIdSignBase64_.isEmpty()) {
                output.writeString(5, getUserIdSignBase64());
            }
            if (!userDeviceIdSignBase64_.isEmpty()) {
                output.writeString(6, getUserDeviceIdSignBase64());
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (!userIdPubk_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeStringSize(1, getUserIdPubk());
            }
            if (!userDeviceIdPubk_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeStringSize(2, getUserDeviceIdPubk());
            }
            if (!userDeviceName_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeStringSize(4, getUserDeviceName());
            }
            if (!userIdSignBase64_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeStringSize(5, getUserIdSignBase64());
            }
            if (!userDeviceIdSignBase64_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeStringSize(6, getUserDeviceIdSignBase64());
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.akaxin.proto.platform.ApiPlatformLoginProto.ApiPlatformLoginRequest parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }

        public static com.akaxin.proto.platform.ApiPlatformLoginProto.ApiPlatformLoginRequest parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static com.akaxin.proto.platform.ApiPlatformLoginProto.ApiPlatformLoginRequest parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }

        public static com.akaxin.proto.platform.ApiPlatformLoginProto.ApiPlatformLoginRequest parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static com.akaxin.proto.platform.ApiPlatformLoginProto.ApiPlatformLoginRequest parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }

        public static com.akaxin.proto.platform.ApiPlatformLoginProto.ApiPlatformLoginRequest parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static com.akaxin.proto.platform.ApiPlatformLoginProto.ApiPlatformLoginRequest parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }

        public static com.akaxin.proto.platform.ApiPlatformLoginProto.ApiPlatformLoginRequest parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static com.akaxin.proto.platform.ApiPlatformLoginProto.ApiPlatformLoginRequest parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }

        public static com.akaxin.proto.platform.ApiPlatformLoginProto.ApiPlatformLoginRequest parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(com.akaxin.proto.platform.ApiPlatformLoginProto.ApiPlatformLoginRequest prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * Protobuf type {@code site.ApiPlatformLoginRequest}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        ApiPlatformLoginRequest, Builder> implements
                // @@protoc_insertion_point(builder_implements:site.ApiPlatformLoginRequest)
                com.akaxin.proto.platform.ApiPlatformLoginProto.ApiPlatformLoginRequestOrBuilder {
            // Construct using com.akaxin.proto.platform.ApiPlatformLoginProto.ApiPlatformLoginRequest.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             * 用户个人身份公钥
             * </pre>
             * <p>
             * <code>optional string user_id_pubk = 1;</code>
             */
            public String getUserIdPubk() {
                return instance.getUserIdPubk();
            }

            /**
             * <pre>
             * 用户个人身份公钥
             * </pre>
             * <p>
             * <code>optional string user_id_pubk = 1;</code>
             */
            public com.google.protobuf.ByteString
            getUserIdPubkBytes() {
                return instance.getUserIdPubkBytes();
            }

            /**
             * <pre>
             * 用户个人身份公钥
             * </pre>
             * <p>
             * <code>optional string user_id_pubk = 1;</code>
             */
            public Builder setUserIdPubk(
                    String value) {
                copyOnWrite();
                instance.setUserIdPubk(value);
                return this;
            }

            /**
             * <pre>
             * 用户个人身份公钥
             * </pre>
             * <p>
             * <code>optional string user_id_pubk = 1;</code>
             */
            public Builder clearUserIdPubk() {
                copyOnWrite();
                instance.clearUserIdPubk();
                return this;
            }

            /**
             * <pre>
             * 用户个人身份公钥
             * </pre>
             * <p>
             * <code>optional string user_id_pubk = 1;</code>
             */
            public Builder setUserIdPubkBytes(
                    com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setUserIdPubkBytes(value);
                return this;
            }

            /**
             * <pre>
             * 用户设备公钥
             * </pre>
             * <p>
             * <code>optional string user_device_id_pubk = 2;</code>
             */
            public String getUserDeviceIdPubk() {
                return instance.getUserDeviceIdPubk();
            }

            /**
             * <pre>
             * 用户设备公钥
             * </pre>
             * <p>
             * <code>optional string user_device_id_pubk = 2;</code>
             */
            public com.google.protobuf.ByteString
            getUserDeviceIdPubkBytes() {
                return instance.getUserDeviceIdPubkBytes();
            }

            /**
             * <pre>
             * 用户设备公钥
             * </pre>
             * <p>
             * <code>optional string user_device_id_pubk = 2;</code>
             */
            public Builder setUserDeviceIdPubk(
                    String value) {
                copyOnWrite();
                instance.setUserDeviceIdPubk(value);
                return this;
            }

            /**
             * <pre>
             * 用户设备公钥
             * </pre>
             * <p>
             * <code>optional string user_device_id_pubk = 2;</code>
             */
            public Builder clearUserDeviceIdPubk() {
                copyOnWrite();
                instance.clearUserDeviceIdPubk();
                return this;
            }

            /**
             * <pre>
             * 用户设备公钥
             * </pre>
             * <p>
             * <code>optional string user_device_id_pubk = 2;</code>
             */
            public Builder setUserDeviceIdPubkBytes(
                    com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setUserDeviceIdPubkBytes(value);
                return this;
            }

            /**
             * <pre>
             * 用户设备名称
             * </pre>
             * <p>
             * <code>optional string user_device_name = 4;</code>
             */
            public String getUserDeviceName() {
                return instance.getUserDeviceName();
            }

            /**
             * <pre>
             * 用户设备名称
             * </pre>
             * <p>
             * <code>optional string user_device_name = 4;</code>
             */
            public com.google.protobuf.ByteString
            getUserDeviceNameBytes() {
                return instance.getUserDeviceNameBytes();
            }

            /**
             * <pre>
             * 用户设备名称
             * </pre>
             * <p>
             * <code>optional string user_device_name = 4;</code>
             */
            public Builder setUserDeviceName(
                    String value) {
                copyOnWrite();
                instance.setUserDeviceName(value);
                return this;
            }

            /**
             * <pre>
             * 用户设备名称
             * </pre>
             * <p>
             * <code>optional string user_device_name = 4;</code>
             */
            public Builder clearUserDeviceName() {
                copyOnWrite();
                instance.clearUserDeviceName();
                return this;
            }

            /**
             * <pre>
             * 用户设备名称
             * </pre>
             * <p>
             * <code>optional string user_device_name = 4;</code>
             */
            public Builder setUserDeviceNameBytes(
                    com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setUserDeviceNameBytes(value);
                return this;
            }

            /**
             * <pre>
             * 用户身份公钥签名，证明公钥所属权，需要base64encode。
             * </pre>
             * <p>
             * <code>optional string user_id_sign_base64 = 5;</code>
             */
            public String getUserIdSignBase64() {
                return instance.getUserIdSignBase64();
            }

            /**
             * <pre>
             * 用户身份公钥签名，证明公钥所属权，需要base64encode。
             * </pre>
             * <p>
             * <code>optional string user_id_sign_base64 = 5;</code>
             */
            public com.google.protobuf.ByteString
            getUserIdSignBase64Bytes() {
                return instance.getUserIdSignBase64Bytes();
            }

            /**
             * <pre>
             * 用户身份公钥签名，证明公钥所属权，需要base64encode。
             * </pre>
             * <p>
             * <code>optional string user_id_sign_base64 = 5;</code>
             */
            public Builder setUserIdSignBase64(
                    String value) {
                copyOnWrite();
                instance.setUserIdSignBase64(value);
                return this;
            }

            /**
             * <pre>
             * 用户身份公钥签名，证明公钥所属权，需要base64encode。
             * </pre>
             * <p>
             * <code>optional string user_id_sign_base64 = 5;</code>
             */
            public Builder clearUserIdSignBase64() {
                copyOnWrite();
                instance.clearUserIdSignBase64();
                return this;
            }

            /**
             * <pre>
             * 用户身份公钥签名，证明公钥所属权，需要base64encode。
             * </pre>
             * <p>
             * <code>optional string user_id_sign_base64 = 5;</code>
             */
            public Builder setUserIdSignBase64Bytes(
                    com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setUserIdSignBase64Bytes(value);
                return this;
            }

            /**
             * <pre>
             * 使用user_id_prik对用户的user_device_id_pubk签名，证明这个设备是这个用户的。
             * </pre>
             * <p>
             * <code>optional string user_device_id_sign_base64 = 6;</code>
             */
            public String getUserDeviceIdSignBase64() {
                return instance.getUserDeviceIdSignBase64();
            }

            /**
             * <pre>
             * 使用user_id_prik对用户的user_device_id_pubk签名，证明这个设备是这个用户的。
             * </pre>
             * <p>
             * <code>optional string user_device_id_sign_base64 = 6;</code>
             */
            public com.google.protobuf.ByteString
            getUserDeviceIdSignBase64Bytes() {
                return instance.getUserDeviceIdSignBase64Bytes();
            }

            /**
             * <pre>
             * 使用user_id_prik对用户的user_device_id_pubk签名，证明这个设备是这个用户的。
             * </pre>
             * <p>
             * <code>optional string user_device_id_sign_base64 = 6;</code>
             */
            public Builder setUserDeviceIdSignBase64(
                    String value) {
                copyOnWrite();
                instance.setUserDeviceIdSignBase64(value);
                return this;
            }

            /**
             * <pre>
             * 使用user_id_prik对用户的user_device_id_pubk签名，证明这个设备是这个用户的。
             * </pre>
             * <p>
             * <code>optional string user_device_id_sign_base64 = 6;</code>
             */
            public Builder clearUserDeviceIdSignBase64() {
                copyOnWrite();
                instance.clearUserDeviceIdSignBase64();
                return this;
            }

            /**
             * <pre>
             * 使用user_id_prik对用户的user_device_id_pubk签名，证明这个设备是这个用户的。
             * </pre>
             * <p>
             * <code>optional string user_device_id_sign_base64 = 6;</code>
             */
            public Builder setUserDeviceIdSignBase64Bytes(
                    com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setUserDeviceIdSignBase64Bytes(value);
                return this;
            }

            // @@protoc_insertion_point(builder_scope:site.ApiPlatformLoginRequest)
        }

        protected final Object dynamicMethod(
                MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.akaxin.proto.platform.ApiPlatformLoginProto.ApiPlatformLoginRequest();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.akaxin.proto.platform.ApiPlatformLoginProto.ApiPlatformLoginRequest other = (com.akaxin.proto.platform.ApiPlatformLoginProto.ApiPlatformLoginRequest) arg1;
                    userIdPubk_ = visitor.visitString(!userIdPubk_.isEmpty(), userIdPubk_,
                            !other.userIdPubk_.isEmpty(), other.userIdPubk_);
                    userDeviceIdPubk_ = visitor.visitString(!userDeviceIdPubk_.isEmpty(), userDeviceIdPubk_,
                            !other.userDeviceIdPubk_.isEmpty(), other.userDeviceIdPubk_);
                    userDeviceName_ = visitor.visitString(!userDeviceName_.isEmpty(), userDeviceName_,
                            !other.userDeviceName_.isEmpty(), other.userDeviceName_);
                    userIdSignBase64_ = visitor.visitString(!userIdSignBase64_.isEmpty(), userIdSignBase64_,
                            !other.userIdSignBase64_.isEmpty(), other.userIdSignBase64_);
                    userDeviceIdSignBase64_ = visitor.visitString(!userDeviceIdSignBase64_.isEmpty(), userDeviceIdSignBase64_,
                            !other.userDeviceIdSignBase64_.isEmpty(), other.userDeviceIdSignBase64_);
                    if (visitor == MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 10: {
                                    String s = input.readStringRequireUtf8();

                                    userIdPubk_ = s;
                                    break;
                                }
                                case 18: {
                                    String s = input.readStringRequireUtf8();

                                    userDeviceIdPubk_ = s;
                                    break;
                                }
                                case 34: {
                                    String s = input.readStringRequireUtf8();

                                    userDeviceName_ = s;
                                    break;
                                }
                                case 42: {
                                    String s = input.readStringRequireUtf8();

                                    userIdSignBase64_ = s;
                                    break;
                                }
                                case 50: {
                                    String s = input.readStringRequireUtf8();

                                    userDeviceIdSignBase64_ = s;
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {
                        synchronized (com.akaxin.proto.platform.ApiPlatformLoginProto.ApiPlatformLoginRequest.class) {
                            if (PARSER == null) {
                                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                            }
                        }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:site.ApiPlatformLoginRequest)
        private static final com.akaxin.proto.platform.ApiPlatformLoginProto.ApiPlatformLoginRequest DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new ApiPlatformLoginRequest();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.akaxin.proto.platform.ApiPlatformLoginProto.ApiPlatformLoginRequest getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<ApiPlatformLoginRequest> PARSER;

        public static com.google.protobuf.Parser<ApiPlatformLoginRequest> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface ApiPlatformLoginResponseOrBuilder extends
            // @@protoc_insertion_point(interface_extends:site.ApiPlatformLoginResponse)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         * 用户个人sessionId
         * </pre>
         * <p>
         * <code>optional string session_id = 1;</code>
         */
        String getSessionId();

        /**
         * <pre>
         * 用户个人sessionId
         * </pre>
         * <p>
         * <code>optional string session_id = 1;</code>
         */
        com.google.protobuf.ByteString
        getSessionIdBytes();

        /**
         * <pre>
         * 返回个人用户ID，需要返回GlobalUserID
         * </pre>
         * <p>
         * <code>optional string global_user_id = 2;</code>
         */
        String getGlobalUserId();

        /**
         * <pre>
         * 返回个人用户ID，需要返回GlobalUserID
         * </pre>
         * <p>
         * <code>optional string global_user_id = 2;</code>
         */
        com.google.protobuf.ByteString
        getGlobalUserIdBytes();

        /**
         * <pre>
         * 返回本设备对应的设备ID
         * </pre>
         * <p>
         * <code>optional string device_id = 3;</code>
         */
        String getDeviceId();

        /**
         * <pre>
         * 返回本设备对应的设备ID
         * </pre>
         * <p>
         * <code>optional string device_id = 3;</code>
         */
        com.google.protobuf.ByteString
        getDeviceIdBytes();
    }

    /**
     * Protobuf type {@code site.ApiPlatformLoginResponse}
     */
    public static final class ApiPlatformLoginResponse extends
            com.google.protobuf.GeneratedMessageLite<
                    ApiPlatformLoginResponse, ApiPlatformLoginResponse.Builder> implements
            // @@protoc_insertion_point(message_implements:site.ApiPlatformLoginResponse)
            ApiPlatformLoginResponseOrBuilder {
        private ApiPlatformLoginResponse() {
            sessionId_ = "";
            globalUserId_ = "";
            deviceId_ = "";
        }

        public static final int SESSION_ID_FIELD_NUMBER = 1;
        private String sessionId_;

        /**
         * <pre>
         * 用户个人sessionId
         * </pre>
         * <p>
         * <code>optional string session_id = 1;</code>
         */
        public String getSessionId() {
            // return null;
            return sessionId_;
        }

        /**
         * <pre>
         * 用户个人sessionId
         * </pre>
         * <p>
         * <code>optional string session_id = 1;</code>
         */
        public com.google.protobuf.ByteString
        getSessionIdBytes() {
            return com.google.protobuf.ByteString.copyFromUtf8(sessionId_);
        }

        /**
         * <pre>
         * 用户个人sessionId
         * </pre>
         * <p>
         * <code>optional string session_id = 1;</code>
         */
        private void setSessionId(
                String value) {
            if (value == null) {
                throw new NullPointerException();
            }

            sessionId_ = value;
        }

        /**
         * <pre>
         * 用户个人sessionId
         * </pre>
         * <p>
         * <code>optional string session_id = 1;</code>
         */
        private void clearSessionId() {

            sessionId_ = getDefaultInstance().getSessionId();
        }

        /**
         * <pre>
         * 用户个人sessionId
         * </pre>
         * <p>
         * <code>optional string session_id = 1;</code>
         */
        private void setSessionIdBytes(
                com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            checkByteStringIsUtf8(value);

            sessionId_ = value.toStringUtf8();
        }

        public static final int GLOBAL_USER_ID_FIELD_NUMBER = 2;
        private String globalUserId_;

        /**
         * <pre>
         * 返回个人用户ID，需要返回GlobalUserID
         * </pre>
         * <p>
         * <code>optional string global_user_id = 2;</code>
         */
        public String getGlobalUserId() {
            return globalUserId_;
        }

        /**
         * <pre>
         * 返回个人用户ID，需要返回GlobalUserID
         * </pre>
         * <p>
         * <code>optional string global_user_id = 2;</code>
         */
        public com.google.protobuf.ByteString
        getGlobalUserIdBytes() {
            return com.google.protobuf.ByteString.copyFromUtf8(globalUserId_);
        }

        /**
         * <pre>
         * 返回个人用户ID，需要返回GlobalUserID
         * </pre>
         * <p>
         * <code>optional string global_user_id = 2;</code>
         */
        private void setGlobalUserId(
                String value) {
            if (value == null) {
                throw new NullPointerException();
            }

            globalUserId_ = value;
        }

        /**
         * <pre>
         * 返回个人用户ID，需要返回GlobalUserID
         * </pre>
         * <p>
         * <code>optional string global_user_id = 2;</code>
         */
        private void clearGlobalUserId() {

            globalUserId_ = getDefaultInstance().getGlobalUserId();
        }

        /**
         * <pre>
         * 返回个人用户ID，需要返回GlobalUserID
         * </pre>
         * <p>
         * <code>optional string global_user_id = 2;</code>
         */
        private void setGlobalUserIdBytes(
                com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            checkByteStringIsUtf8(value);

            globalUserId_ = value.toStringUtf8();
        }

        public static final int DEVICE_ID_FIELD_NUMBER = 3;
        private String deviceId_;

        /**
         * <pre>
         * 返回本设备对应的设备ID
         * </pre>
         * <p>
         * <code>optional string device_id = 3;</code>
         */
        public String getDeviceId() {
            return deviceId_;
        }

        /**
         * <pre>
         * 返回本设备对应的设备ID
         * </pre>
         * <p>
         * <code>optional string device_id = 3;</code>
         */
        public com.google.protobuf.ByteString
        getDeviceIdBytes() {
            return com.google.protobuf.ByteString.copyFromUtf8(deviceId_);
        }

        /**
         * <pre>
         * 返回本设备对应的设备ID
         * </pre>
         * <p>
         * <code>optional string device_id = 3;</code>
         */
        private void setDeviceId(
                String value) {
            if (value == null) {
                throw new NullPointerException();
            }

            deviceId_ = value;
        }

        /**
         * <pre>
         * 返回本设备对应的设备ID
         * </pre>
         * <p>
         * <code>optional string device_id = 3;</code>
         */
        private void clearDeviceId() {

            deviceId_ = getDefaultInstance().getDeviceId();
        }

        /**
         * <pre>
         * 返回本设备对应的设备ID
         * </pre>
         * <p>
         * <code>optional string device_id = 3;</code>
         */
        private void setDeviceIdBytes(
                com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            checkByteStringIsUtf8(value);

            deviceId_ = value.toStringUtf8();
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!sessionId_.isEmpty()) {
                output.writeString(1, getSessionId());
            }
            if (!globalUserId_.isEmpty()) {
                output.writeString(2, getGlobalUserId());
            }
            if (!deviceId_.isEmpty()) {
                output.writeString(3, getDeviceId());
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (!sessionId_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeStringSize(1, getSessionId());
            }
            if (!globalUserId_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeStringSize(2, getGlobalUserId());
            }
            if (!deviceId_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeStringSize(3, getDeviceId());
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.akaxin.proto.platform.ApiPlatformLoginProto.ApiPlatformLoginResponse parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }

        public static com.akaxin.proto.platform.ApiPlatformLoginProto.ApiPlatformLoginResponse parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static com.akaxin.proto.platform.ApiPlatformLoginProto.ApiPlatformLoginResponse parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }

        public static com.akaxin.proto.platform.ApiPlatformLoginProto.ApiPlatformLoginResponse parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static com.akaxin.proto.platform.ApiPlatformLoginProto.ApiPlatformLoginResponse parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }

        public static com.akaxin.proto.platform.ApiPlatformLoginProto.ApiPlatformLoginResponse parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static com.akaxin.proto.platform.ApiPlatformLoginProto.ApiPlatformLoginResponse parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }

        public static com.akaxin.proto.platform.ApiPlatformLoginProto.ApiPlatformLoginResponse parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static com.akaxin.proto.platform.ApiPlatformLoginProto.ApiPlatformLoginResponse parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }

        public static com.akaxin.proto.platform.ApiPlatformLoginProto.ApiPlatformLoginResponse parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(com.akaxin.proto.platform.ApiPlatformLoginProto.ApiPlatformLoginResponse prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * Protobuf type {@code site.ApiPlatformLoginResponse}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        ApiPlatformLoginResponse, Builder> implements
                // @@protoc_insertion_point(builder_implements:site.ApiPlatformLoginResponse)
                com.akaxin.proto.platform.ApiPlatformLoginProto.ApiPlatformLoginResponseOrBuilder {
            // Construct using com.akaxin.proto.platform.ApiPlatformLoginProto.ApiPlatformLoginResponse.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             * 用户个人sessionId
             * </pre>
             * <p>
             * <code>optional string session_id = 1;</code>
             */
            public String getSessionId() {
                return instance.getSessionId();
            }

            /**
             * <pre>
             * 用户个人sessionId
             * </pre>
             * <p>
             * <code>optional string session_id = 1;</code>
             */
            public com.google.protobuf.ByteString
            getSessionIdBytes() {
                return instance.getSessionIdBytes();
            }

            /**
             * <pre>
             * 用户个人sessionId
             * </pre>
             * <p>
             * <code>optional string session_id = 1;</code>
             */
            public Builder setSessionId(
                    String value) {
                copyOnWrite();
                instance.setSessionId(value);
                return this;
            }

            /**
             * <pre>
             * 用户个人sessionId
             * </pre>
             * <p>
             * <code>optional string session_id = 1;</code>
             */
            public Builder clearSessionId() {
                copyOnWrite();
                instance.clearSessionId();
                return this;
            }

            /**
             * <pre>
             * 用户个人sessionId
             * </pre>
             * <p>
             * <code>optional string session_id = 1;</code>
             */
            public Builder setSessionIdBytes(
                    com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setSessionIdBytes(value);
                return this;
            }

            /**
             * <pre>
             * 返回个人用户ID，需要返回GlobalUserID
             * </pre>
             * <p>
             * <code>optional string global_user_id = 2;</code>
             */
            public String getGlobalUserId() {
                return instance.getGlobalUserId();
            }

            /**
             * <pre>
             * 返回个人用户ID，需要返回GlobalUserID
             * </pre>
             * <p>
             * <code>optional string global_user_id = 2;</code>
             */
            public com.google.protobuf.ByteString
            getGlobalUserIdBytes() {
                return instance.getGlobalUserIdBytes();
            }

            /**
             * <pre>
             * 返回个人用户ID，需要返回GlobalUserID
             * </pre>
             * <p>
             * <code>optional string global_user_id = 2;</code>
             */
            public Builder setGlobalUserId(
                    String value) {
                copyOnWrite();
                instance.setGlobalUserId(value);
                return this;
            }

            /**
             * <pre>
             * 返回个人用户ID，需要返回GlobalUserID
             * </pre>
             * <p>
             * <code>optional string global_user_id = 2;</code>
             */
            public Builder clearGlobalUserId() {
                copyOnWrite();
                instance.clearGlobalUserId();
                return this;
            }

            /**
             * <pre>
             * 返回个人用户ID，需要返回GlobalUserID
             * </pre>
             * <p>
             * <code>optional string global_user_id = 2;</code>
             */
            public Builder setGlobalUserIdBytes(
                    com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setGlobalUserIdBytes(value);
                return this;
            }

            /**
             * <pre>
             * 返回本设备对应的设备ID
             * </pre>
             * <p>
             * <code>optional string device_id = 3;</code>
             */
            public String getDeviceId() {
                return instance.getDeviceId();
            }

            /**
             * <pre>
             * 返回本设备对应的设备ID
             * </pre>
             * <p>
             * <code>optional string device_id = 3;</code>
             */
            public com.google.protobuf.ByteString
            getDeviceIdBytes() {
                return instance.getDeviceIdBytes();
            }

            /**
             * <pre>
             * 返回本设备对应的设备ID
             * </pre>
             * <p>
             * <code>optional string device_id = 3;</code>
             */
            public Builder setDeviceId(
                    String value) {
                copyOnWrite();
                instance.setDeviceId(value);
                return this;
            }

            /**
             * <pre>
             * 返回本设备对应的设备ID
             * </pre>
             * <p>
             * <code>optional string device_id = 3;</code>
             */
            public Builder clearDeviceId() {
                copyOnWrite();
                instance.clearDeviceId();
                return this;
            }

            /**
             * <pre>
             * 返回本设备对应的设备ID
             * </pre>
             * <p>
             * <code>optional string device_id = 3;</code>
             */
            public Builder setDeviceIdBytes(
                    com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setDeviceIdBytes(value);
                return this;
            }

            // @@protoc_insertion_point(builder_scope:site.ApiPlatformLoginResponse)
        }

        protected final Object dynamicMethod(
                MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.akaxin.proto.platform.ApiPlatformLoginProto.ApiPlatformLoginResponse();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.akaxin.proto.platform.ApiPlatformLoginProto.ApiPlatformLoginResponse other = (com.akaxin.proto.platform.ApiPlatformLoginProto.ApiPlatformLoginResponse) arg1;
                    sessionId_ = visitor.visitString(!sessionId_.isEmpty(), sessionId_,
                            !other.sessionId_.isEmpty(), other.sessionId_);
                    globalUserId_ = visitor.visitString(!globalUserId_.isEmpty(), globalUserId_,
                            !other.globalUserId_.isEmpty(), other.globalUserId_);
                    deviceId_ = visitor.visitString(!deviceId_.isEmpty(), deviceId_,
                            !other.deviceId_.isEmpty(), other.deviceId_);
                    if (visitor == MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 10: {
                                    String s = input.readStringRequireUtf8();

                                    sessionId_ = s;
                                    break;
                                }
                                case 18: {
                                    String s = input.readStringRequireUtf8();

                                    globalUserId_ = s;
                                    break;
                                }
                                case 26: {
                                    String s = input.readStringRequireUtf8();

                                    deviceId_ = s;
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {
                        synchronized (com.akaxin.proto.platform.ApiPlatformLoginProto.ApiPlatformLoginResponse.class) {
                            if (PARSER == null) {
                                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                            }
                        }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:site.ApiPlatformLoginResponse)
        private static final com.akaxin.proto.platform.ApiPlatformLoginProto.ApiPlatformLoginResponse DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new ApiPlatformLoginResponse();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.akaxin.proto.platform.ApiPlatformLoginProto.ApiPlatformLoginResponse getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<ApiPlatformLoginResponse> PARSER;

        public static com.google.protobuf.Parser<ApiPlatformLoginResponse> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }


    static {
    }

    // @@protoc_insertion_point(outer_class_scope)
}
