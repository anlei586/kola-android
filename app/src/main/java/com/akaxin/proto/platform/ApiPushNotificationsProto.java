// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: platform/api_push_notifications.proto

package com.akaxin.proto.platform;

public final class ApiPushNotificationsProto {
  private ApiPushNotificationsProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface ApiPushNotificationsRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:platform.ApiPushNotificationsRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *push通知的类型
     * </pre>
     *
     * <code>optional .core.PushType push_type = 1;</code>
     */
    int getPushTypeValue();
    /**
     * <pre>
     *push通知的类型
     * </pre>
     *
     * <code>optional .core.PushType push_type = 1;</code>
     */
    com.akaxin.proto.core.PushProto.PushType getPushType();

    /**
     * <pre>
     *批量发送的通知消息
     * </pre>
     *
     * <code>optional .core.Notifications notifications = 2;</code>
     */
    boolean hasNotifications();
    /**
     * <pre>
     *批量发送的通知消息
     * </pre>
     *
     * <code>optional .core.Notifications notifications = 2;</code>
     */
    com.akaxin.proto.core.PushProto.Notifications getNotifications();

    /**
     * <pre>
     *通知发送放
     * </pre>
     *
     * <code>optional .core.PushFromUser push_from_user = 3;</code>
     */
    boolean hasPushFromUser();
    /**
     * <pre>
     *通知发送放
     * </pre>
     *
     * <code>optional .core.PushFromUser push_from_user = 3;</code>
     */
    com.akaxin.proto.core.PushProto.PushFromUser getPushFromUser();

    /**
     * <pre>
     *通知接受者
     * </pre>
     *
     * <code>repeated .core.PushToUser push_to_user = 4;</code>
     */
    java.util.List<com.akaxin.proto.core.PushProto.PushToUser> 
        getPushToUserList();
    /**
     * <pre>
     *通知接受者
     * </pre>
     *
     * <code>repeated .core.PushToUser push_to_user = 4;</code>
     */
    com.akaxin.proto.core.PushProto.PushToUser getPushToUser(int index);
    /**
     * <pre>
     *通知接受者
     * </pre>
     *
     * <code>repeated .core.PushToUser push_to_user = 4;</code>
     */
    int getPushToUserCount();
  }
  /**
   * Protobuf type {@code platform.ApiPushNotificationsRequest}
   */
  public  static final class ApiPushNotificationsRequest extends
      com.google.protobuf.GeneratedMessageLite<
          ApiPushNotificationsRequest, ApiPushNotificationsRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:platform.ApiPushNotificationsRequest)
      ApiPushNotificationsRequestOrBuilder {
    private ApiPushNotificationsRequest() {
      pushToUser_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int PUSH_TYPE_FIELD_NUMBER = 1;
    private int pushType_;
    /**
     * <pre>
     *push通知的类型
     * </pre>
     *
     * <code>optional .core.PushType push_type = 1;</code>
     */
    public int getPushTypeValue() {
      return pushType_;
    }
    /**
     * <pre>
     *push通知的类型
     * </pre>
     *
     * <code>optional .core.PushType push_type = 1;</code>
     */
    public com.akaxin.proto.core.PushProto.PushType getPushType() {
      com.akaxin.proto.core.PushProto.PushType result = com.akaxin.proto.core.PushProto.PushType.forNumber(pushType_);
      return result == null ? com.akaxin.proto.core.PushProto.PushType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     *push通知的类型
     * </pre>
     *
     * <code>optional .core.PushType push_type = 1;</code>
     */
    private void setPushTypeValue(int value) {
        pushType_ = value;
    }
    /**
     * <pre>
     *push通知的类型
     * </pre>
     *
     * <code>optional .core.PushType push_type = 1;</code>
     */
    private void setPushType(com.akaxin.proto.core.PushProto.PushType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      pushType_ = value.getNumber();
    }
    /**
     * <pre>
     *push通知的类型
     * </pre>
     *
     * <code>optional .core.PushType push_type = 1;</code>
     */
    private void clearPushType() {
      
      pushType_ = 0;
    }

    public static final int NOTIFICATIONS_FIELD_NUMBER = 2;
    private com.akaxin.proto.core.PushProto.Notifications notifications_;
    /**
     * <pre>
     *批量发送的通知消息
     * </pre>
     *
     * <code>optional .core.Notifications notifications = 2;</code>
     */
    public boolean hasNotifications() {
      return notifications_ != null;
    }
    /**
     * <pre>
     *批量发送的通知消息
     * </pre>
     *
     * <code>optional .core.Notifications notifications = 2;</code>
     */
    public com.akaxin.proto.core.PushProto.Notifications getNotifications() {
      return notifications_ == null ? com.akaxin.proto.core.PushProto.Notifications.getDefaultInstance() : notifications_;
    }
    /**
     * <pre>
     *批量发送的通知消息
     * </pre>
     *
     * <code>optional .core.Notifications notifications = 2;</code>
     */
    private void setNotifications(com.akaxin.proto.core.PushProto.Notifications value) {
      if (value == null) {
        throw new NullPointerException();
      }
      notifications_ = value;
      
      }
    /**
     * <pre>
     *批量发送的通知消息
     * </pre>
     *
     * <code>optional .core.Notifications notifications = 2;</code>
     */
    private void setNotifications(
        com.akaxin.proto.core.PushProto.Notifications.Builder builderForValue) {
      notifications_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *批量发送的通知消息
     * </pre>
     *
     * <code>optional .core.Notifications notifications = 2;</code>
     */
    private void mergeNotifications(com.akaxin.proto.core.PushProto.Notifications value) {
      if (notifications_ != null &&
          notifications_ != com.akaxin.proto.core.PushProto.Notifications.getDefaultInstance()) {
        notifications_ =
          com.akaxin.proto.core.PushProto.Notifications.newBuilder(notifications_).mergeFrom(value).buildPartial();
      } else {
        notifications_ = value;
      }
      
    }
    /**
     * <pre>
     *批量发送的通知消息
     * </pre>
     *
     * <code>optional .core.Notifications notifications = 2;</code>
     */
    private void clearNotifications() {  notifications_ = null;
      
    }

    public static final int PUSH_FROM_USER_FIELD_NUMBER = 3;
    private com.akaxin.proto.core.PushProto.PushFromUser pushFromUser_;
    /**
     * <pre>
     *通知发送放
     * </pre>
     *
     * <code>optional .core.PushFromUser push_from_user = 3;</code>
     */
    public boolean hasPushFromUser() {
      return pushFromUser_ != null;
    }
    /**
     * <pre>
     *通知发送放
     * </pre>
     *
     * <code>optional .core.PushFromUser push_from_user = 3;</code>
     */
    public com.akaxin.proto.core.PushProto.PushFromUser getPushFromUser() {
      return pushFromUser_ == null ? com.akaxin.proto.core.PushProto.PushFromUser.getDefaultInstance() : pushFromUser_;
    }
    /**
     * <pre>
     *通知发送放
     * </pre>
     *
     * <code>optional .core.PushFromUser push_from_user = 3;</code>
     */
    private void setPushFromUser(com.akaxin.proto.core.PushProto.PushFromUser value) {
      if (value == null) {
        throw new NullPointerException();
      }
      pushFromUser_ = value;
      
      }
    /**
     * <pre>
     *通知发送放
     * </pre>
     *
     * <code>optional .core.PushFromUser push_from_user = 3;</code>
     */
    private void setPushFromUser(
        com.akaxin.proto.core.PushProto.PushFromUser.Builder builderForValue) {
      pushFromUser_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *通知发送放
     * </pre>
     *
     * <code>optional .core.PushFromUser push_from_user = 3;</code>
     */
    private void mergePushFromUser(com.akaxin.proto.core.PushProto.PushFromUser value) {
      if (pushFromUser_ != null &&
          pushFromUser_ != com.akaxin.proto.core.PushProto.PushFromUser.getDefaultInstance()) {
        pushFromUser_ =
          com.akaxin.proto.core.PushProto.PushFromUser.newBuilder(pushFromUser_).mergeFrom(value).buildPartial();
      } else {
        pushFromUser_ = value;
      }
      
    }
    /**
     * <pre>
     *通知发送放
     * </pre>
     *
     * <code>optional .core.PushFromUser push_from_user = 3;</code>
     */
    private void clearPushFromUser() {  pushFromUser_ = null;
      
    }

    public static final int PUSH_TO_USER_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.ProtobufList<com.akaxin.proto.core.PushProto.PushToUser> pushToUser_;
    /**
     * <pre>
     *通知接受者
     * </pre>
     *
     * <code>repeated .core.PushToUser push_to_user = 4;</code>
     */
    public java.util.List<com.akaxin.proto.core.PushProto.PushToUser> getPushToUserList() {
      return pushToUser_;
    }
    /**
     * <pre>
     *通知接受者
     * </pre>
     *
     * <code>repeated .core.PushToUser push_to_user = 4;</code>
     */
    public java.util.List<? extends com.akaxin.proto.core.PushProto.PushToUserOrBuilder> 
        getPushToUserOrBuilderList() {
      return pushToUser_;
    }
    /**
     * <pre>
     *通知接受者
     * </pre>
     *
     * <code>repeated .core.PushToUser push_to_user = 4;</code>
     */
    public int getPushToUserCount() {
      return pushToUser_.size();
    }
    /**
     * <pre>
     *通知接受者
     * </pre>
     *
     * <code>repeated .core.PushToUser push_to_user = 4;</code>
     */
    public com.akaxin.proto.core.PushProto.PushToUser getPushToUser(int index) {
      return pushToUser_.get(index);
    }
    /**
     * <pre>
     *通知接受者
     * </pre>
     *
     * <code>repeated .core.PushToUser push_to_user = 4;</code>
     */
    public com.akaxin.proto.core.PushProto.PushToUserOrBuilder getPushToUserOrBuilder(
        int index) {
      return pushToUser_.get(index);
    }
    private void ensurePushToUserIsMutable() {
      if (!pushToUser_.isModifiable()) {
        pushToUser_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(pushToUser_);
       }
    }

    /**
     * <pre>
     *通知接受者
     * </pre>
     *
     * <code>repeated .core.PushToUser push_to_user = 4;</code>
     */
    private void setPushToUser(
        int index, com.akaxin.proto.core.PushProto.PushToUser value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePushToUserIsMutable();
      pushToUser_.set(index, value);
    }
    /**
     * <pre>
     *通知接受者
     * </pre>
     *
     * <code>repeated .core.PushToUser push_to_user = 4;</code>
     */
    private void setPushToUser(
        int index, com.akaxin.proto.core.PushProto.PushToUser.Builder builderForValue) {
      ensurePushToUserIsMutable();
      pushToUser_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     *通知接受者
     * </pre>
     *
     * <code>repeated .core.PushToUser push_to_user = 4;</code>
     */
    private void addPushToUser(com.akaxin.proto.core.PushProto.PushToUser value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePushToUserIsMutable();
      pushToUser_.add(value);
    }
    /**
     * <pre>
     *通知接受者
     * </pre>
     *
     * <code>repeated .core.PushToUser push_to_user = 4;</code>
     */
    private void addPushToUser(
        int index, com.akaxin.proto.core.PushProto.PushToUser value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePushToUserIsMutable();
      pushToUser_.add(index, value);
    }
    /**
     * <pre>
     *通知接受者
     * </pre>
     *
     * <code>repeated .core.PushToUser push_to_user = 4;</code>
     */
    private void addPushToUser(
        com.akaxin.proto.core.PushProto.PushToUser.Builder builderForValue) {
      ensurePushToUserIsMutable();
      pushToUser_.add(builderForValue.build());
    }
    /**
     * <pre>
     *通知接受者
     * </pre>
     *
     * <code>repeated .core.PushToUser push_to_user = 4;</code>
     */
    private void addPushToUser(
        int index, com.akaxin.proto.core.PushProto.PushToUser.Builder builderForValue) {
      ensurePushToUserIsMutable();
      pushToUser_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     *通知接受者
     * </pre>
     *
     * <code>repeated .core.PushToUser push_to_user = 4;</code>
     */
    private void addAllPushToUser(
        Iterable<? extends com.akaxin.proto.core.PushProto.PushToUser> values) {
      ensurePushToUserIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, pushToUser_);
    }
    /**
     * <pre>
     *通知接受者
     * </pre>
     *
     * <code>repeated .core.PushToUser push_to_user = 4;</code>
     */
    private void clearPushToUser() {
      pushToUser_ = emptyProtobufList();
    }
    /**
     * <pre>
     *通知接受者
     * </pre>
     *
     * <code>repeated .core.PushToUser push_to_user = 4;</code>
     */
    private void removePushToUser(int index) {
      ensurePushToUserIsMutable();
      pushToUser_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (pushType_ != com.akaxin.proto.core.PushProto.PushType.PUSH_NOTICE.getNumber()) {
        output.writeEnum(1, pushType_);
      }
      if (notifications_ != null) {
        output.writeMessage(2, getNotifications());
      }
      if (pushFromUser_ != null) {
        output.writeMessage(3, getPushFromUser());
      }
      for (int i = 0; i < pushToUser_.size(); i++) {
        output.writeMessage(4, pushToUser_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (pushType_ != com.akaxin.proto.core.PushProto.PushType.PUSH_NOTICE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, pushType_);
      }
      if (notifications_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getNotifications());
      }
      if (pushFromUser_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getPushFromUser());
      }
      for (int i = 0; i < pushToUser_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, pushToUser_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.akaxin.proto.platform.ApiPushNotificationsProto.ApiPushNotificationsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.akaxin.proto.platform.ApiPushNotificationsProto.ApiPushNotificationsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.akaxin.proto.platform.ApiPushNotificationsProto.ApiPushNotificationsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.akaxin.proto.platform.ApiPushNotificationsProto.ApiPushNotificationsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.akaxin.proto.platform.ApiPushNotificationsProto.ApiPushNotificationsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.platform.ApiPushNotificationsProto.ApiPushNotificationsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.akaxin.proto.platform.ApiPushNotificationsProto.ApiPushNotificationsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.platform.ApiPushNotificationsProto.ApiPushNotificationsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.akaxin.proto.platform.ApiPushNotificationsProto.ApiPushNotificationsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.platform.ApiPushNotificationsProto.ApiPushNotificationsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.akaxin.proto.platform.ApiPushNotificationsProto.ApiPushNotificationsRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code platform.ApiPushNotificationsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          ApiPushNotificationsRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:platform.ApiPushNotificationsRequest)
        com.akaxin.proto.platform.ApiPushNotificationsProto.ApiPushNotificationsRequestOrBuilder {
      // Construct using com.akaxin.proto.platform.ApiPushNotificationsProto.ApiPushNotificationsRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *push通知的类型
       * </pre>
       *
       * <code>optional .core.PushType push_type = 1;</code>
       */
      public int getPushTypeValue() {
        return instance.getPushTypeValue();
      }
      /**
       * <pre>
       *push通知的类型
       * </pre>
       *
       * <code>optional .core.PushType push_type = 1;</code>
       */
      public Builder setPushTypeValue(int value) {
        copyOnWrite();
        instance.setPushTypeValue(value);
        return this;
      }
      /**
       * <pre>
       *push通知的类型
       * </pre>
       *
       * <code>optional .core.PushType push_type = 1;</code>
       */
      public com.akaxin.proto.core.PushProto.PushType getPushType() {
        return instance.getPushType();
      }
      /**
       * <pre>
       *push通知的类型
       * </pre>
       *
       * <code>optional .core.PushType push_type = 1;</code>
       */
      public Builder setPushType(com.akaxin.proto.core.PushProto.PushType value) {
        copyOnWrite();
        instance.setPushType(value);
        return this;
      }
      /**
       * <pre>
       *push通知的类型
       * </pre>
       *
       * <code>optional .core.PushType push_type = 1;</code>
       */
      public Builder clearPushType() {
        copyOnWrite();
        instance.clearPushType();
        return this;
      }

      /**
       * <pre>
       *批量发送的通知消息
       * </pre>
       *
       * <code>optional .core.Notifications notifications = 2;</code>
       */
      public boolean hasNotifications() {
        return instance.hasNotifications();
      }
      /**
       * <pre>
       *批量发送的通知消息
       * </pre>
       *
       * <code>optional .core.Notifications notifications = 2;</code>
       */
      public com.akaxin.proto.core.PushProto.Notifications getNotifications() {
        return instance.getNotifications();
      }
      /**
       * <pre>
       *批量发送的通知消息
       * </pre>
       *
       * <code>optional .core.Notifications notifications = 2;</code>
       */
      public Builder setNotifications(com.akaxin.proto.core.PushProto.Notifications value) {
        copyOnWrite();
        instance.setNotifications(value);
        return this;
        }
      /**
       * <pre>
       *批量发送的通知消息
       * </pre>
       *
       * <code>optional .core.Notifications notifications = 2;</code>
       */
      public Builder setNotifications(
          com.akaxin.proto.core.PushProto.Notifications.Builder builderForValue) {
        copyOnWrite();
        instance.setNotifications(builderForValue);
        return this;
      }
      /**
       * <pre>
       *批量发送的通知消息
       * </pre>
       *
       * <code>optional .core.Notifications notifications = 2;</code>
       */
      public Builder mergeNotifications(com.akaxin.proto.core.PushProto.Notifications value) {
        copyOnWrite();
        instance.mergeNotifications(value);
        return this;
      }
      /**
       * <pre>
       *批量发送的通知消息
       * </pre>
       *
       * <code>optional .core.Notifications notifications = 2;</code>
       */
      public Builder clearNotifications() {  copyOnWrite();
        instance.clearNotifications();
        return this;
      }

      /**
       * <pre>
       *通知发送放
       * </pre>
       *
       * <code>optional .core.PushFromUser push_from_user = 3;</code>
       */
      public boolean hasPushFromUser() {
        return instance.hasPushFromUser();
      }
      /**
       * <pre>
       *通知发送放
       * </pre>
       *
       * <code>optional .core.PushFromUser push_from_user = 3;</code>
       */
      public com.akaxin.proto.core.PushProto.PushFromUser getPushFromUser() {
        return instance.getPushFromUser();
      }
      /**
       * <pre>
       *通知发送放
       * </pre>
       *
       * <code>optional .core.PushFromUser push_from_user = 3;</code>
       */
      public Builder setPushFromUser(com.akaxin.proto.core.PushProto.PushFromUser value) {
        copyOnWrite();
        instance.setPushFromUser(value);
        return this;
        }
      /**
       * <pre>
       *通知发送放
       * </pre>
       *
       * <code>optional .core.PushFromUser push_from_user = 3;</code>
       */
      public Builder setPushFromUser(
          com.akaxin.proto.core.PushProto.PushFromUser.Builder builderForValue) {
        copyOnWrite();
        instance.setPushFromUser(builderForValue);
        return this;
      }
      /**
       * <pre>
       *通知发送放
       * </pre>
       *
       * <code>optional .core.PushFromUser push_from_user = 3;</code>
       */
      public Builder mergePushFromUser(com.akaxin.proto.core.PushProto.PushFromUser value) {
        copyOnWrite();
        instance.mergePushFromUser(value);
        return this;
      }
      /**
       * <pre>
       *通知发送放
       * </pre>
       *
       * <code>optional .core.PushFromUser push_from_user = 3;</code>
       */
      public Builder clearPushFromUser() {  copyOnWrite();
        instance.clearPushFromUser();
        return this;
      }

      /**
       * <pre>
       *通知接受者
       * </pre>
       *
       * <code>repeated .core.PushToUser push_to_user = 4;</code>
       */
      public java.util.List<com.akaxin.proto.core.PushProto.PushToUser> getPushToUserList() {
        return java.util.Collections.unmodifiableList(
            instance.getPushToUserList());
      }
      /**
       * <pre>
       *通知接受者
       * </pre>
       *
       * <code>repeated .core.PushToUser push_to_user = 4;</code>
       */
      public int getPushToUserCount() {
        return instance.getPushToUserCount();
      }/**
       * <pre>
       *通知接受者
       * </pre>
       *
       * <code>repeated .core.PushToUser push_to_user = 4;</code>
       */
      public com.akaxin.proto.core.PushProto.PushToUser getPushToUser(int index) {
        return instance.getPushToUser(index);
      }
      /**
       * <pre>
       *通知接受者
       * </pre>
       *
       * <code>repeated .core.PushToUser push_to_user = 4;</code>
       */
      public Builder setPushToUser(
          int index, com.akaxin.proto.core.PushProto.PushToUser value) {
        copyOnWrite();
        instance.setPushToUser(index, value);
        return this;
      }
      /**
       * <pre>
       *通知接受者
       * </pre>
       *
       * <code>repeated .core.PushToUser push_to_user = 4;</code>
       */
      public Builder setPushToUser(
          int index, com.akaxin.proto.core.PushProto.PushToUser.Builder builderForValue) {
        copyOnWrite();
        instance.setPushToUser(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *通知接受者
       * </pre>
       *
       * <code>repeated .core.PushToUser push_to_user = 4;</code>
       */
      public Builder addPushToUser(com.akaxin.proto.core.PushProto.PushToUser value) {
        copyOnWrite();
        instance.addPushToUser(value);
        return this;
      }
      /**
       * <pre>
       *通知接受者
       * </pre>
       *
       * <code>repeated .core.PushToUser push_to_user = 4;</code>
       */
      public Builder addPushToUser(
          int index, com.akaxin.proto.core.PushProto.PushToUser value) {
        copyOnWrite();
        instance.addPushToUser(index, value);
        return this;
      }
      /**
       * <pre>
       *通知接受者
       * </pre>
       *
       * <code>repeated .core.PushToUser push_to_user = 4;</code>
       */
      public Builder addPushToUser(
          com.akaxin.proto.core.PushProto.PushToUser.Builder builderForValue) {
        copyOnWrite();
        instance.addPushToUser(builderForValue);
        return this;
      }
      /**
       * <pre>
       *通知接受者
       * </pre>
       *
       * <code>repeated .core.PushToUser push_to_user = 4;</code>
       */
      public Builder addPushToUser(
          int index, com.akaxin.proto.core.PushProto.PushToUser.Builder builderForValue) {
        copyOnWrite();
        instance.addPushToUser(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *通知接受者
       * </pre>
       *
       * <code>repeated .core.PushToUser push_to_user = 4;</code>
       */
      public Builder addAllPushToUser(
          Iterable<? extends com.akaxin.proto.core.PushProto.PushToUser> values) {
        copyOnWrite();
        instance.addAllPushToUser(values);
        return this;
      }
      /**
       * <pre>
       *通知接受者
       * </pre>
       *
       * <code>repeated .core.PushToUser push_to_user = 4;</code>
       */
      public Builder clearPushToUser() {
        copyOnWrite();
        instance.clearPushToUser();
        return this;
      }
      /**
       * <pre>
       *通知接受者
       * </pre>
       *
       * <code>repeated .core.PushToUser push_to_user = 4;</code>
       */
      public Builder removePushToUser(int index) {
        copyOnWrite();
        instance.removePushToUser(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:platform.ApiPushNotificationsRequest)
    }
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.akaxin.proto.platform.ApiPushNotificationsProto.ApiPushNotificationsRequest();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          pushToUser_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.akaxin.proto.platform.ApiPushNotificationsProto.ApiPushNotificationsRequest other = (com.akaxin.proto.platform.ApiPushNotificationsProto.ApiPushNotificationsRequest) arg1;
          pushType_ = visitor.visitInt(pushType_ != 0, pushType_,    other.pushType_ != 0, other.pushType_);
          notifications_ = visitor.visitMessage(notifications_, other.notifications_);
          pushFromUser_ = visitor.visitMessage(pushFromUser_, other.pushFromUser_);
          pushToUser_= visitor.visitList(pushToUser_, other.pushToUser_);
          if (visitor == MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();

                  pushType_ = rawValue;
                  break;
                }
                case 18: {
                  com.akaxin.proto.core.PushProto.Notifications.Builder subBuilder = null;
                  if (notifications_ != null) {
                    subBuilder = notifications_.toBuilder();
                  }
                  notifications_ = input.readMessage(com.akaxin.proto.core.PushProto.Notifications.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(notifications_);
                    notifications_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 26: {
                  com.akaxin.proto.core.PushProto.PushFromUser.Builder subBuilder = null;
                  if (pushFromUser_ != null) {
                    subBuilder = pushFromUser_.toBuilder();
                  }
                  pushFromUser_ = input.readMessage(com.akaxin.proto.core.PushProto.PushFromUser.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(pushFromUser_);
                    pushFromUser_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 34: {
                  if (!pushToUser_.isModifiable()) {
                    pushToUser_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(pushToUser_);
                  }
                  pushToUser_.add(
                      input.readMessage(com.akaxin.proto.core.PushProto.PushToUser.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.akaxin.proto.platform.ApiPushNotificationsProto.ApiPushNotificationsRequest.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:platform.ApiPushNotificationsRequest)
    private static final com.akaxin.proto.platform.ApiPushNotificationsProto.ApiPushNotificationsRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ApiPushNotificationsRequest();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.akaxin.proto.platform.ApiPushNotificationsProto.ApiPushNotificationsRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ApiPushNotificationsRequest> PARSER;

    public static com.google.protobuf.Parser<ApiPushNotificationsRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
