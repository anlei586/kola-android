// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: site/api_device_list.proto

package com.akaxin.proto.site;

public final class ApiDeviceListProto {
  private ApiDeviceListProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface DeviceListInfoRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:site.DeviceListInfoRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *获取列表的用户ID
     * </pre>
     *
     * <code>optional string site_user_id = 1;</code>
     */
    String getSiteUserId();
    /**
     * <pre>
     *获取列表的用户ID
     * </pre>
     *
     * <code>optional string site_user_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getSiteUserIdBytes();

    /**
     * <pre>
     *第几页
     * </pre>
     *
     * <code>optional int32 page_number = 2;</code>
     */
    int getPageNumber();

    /**
     * <pre>
     *每页第几条
     * </pre>
     *
     * <code>optional int32 page_size = 3;</code>
     */
    int getPageSize();
  }
  /**
   * Protobuf type {@code site.DeviceListInfoRequest}
   */
  public  static final class DeviceListInfoRequest extends
      com.google.protobuf.GeneratedMessageLite<
          DeviceListInfoRequest, DeviceListInfoRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:site.DeviceListInfoRequest)
      DeviceListInfoRequestOrBuilder {
    private DeviceListInfoRequest() {
      siteUserId_ = "";
    }
    public static final int SITE_USER_ID_FIELD_NUMBER = 1;
    private String siteUserId_;
    /**
     * <pre>
     *获取列表的用户ID
     * </pre>
     *
     * <code>optional string site_user_id = 1;</code>
     */
    public String getSiteUserId() {
      return siteUserId_;
    }
    /**
     * <pre>
     *获取列表的用户ID
     * </pre>
     *
     * <code>optional string site_user_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSiteUserIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(siteUserId_);
    }
    /**
     * <pre>
     *获取列表的用户ID
     * </pre>
     *
     * <code>optional string site_user_id = 1;</code>
     */
    private void setSiteUserId(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      siteUserId_ = value;
    }
    /**
     * <pre>
     *获取列表的用户ID
     * </pre>
     *
     * <code>optional string site_user_id = 1;</code>
     */
    private void clearSiteUserId() {

      siteUserId_ = getDefaultInstance().getSiteUserId();
    }
    /**
     * <pre>
     *获取列表的用户ID
     * </pre>
     *
     * <code>optional string site_user_id = 1;</code>
     */
    private void setSiteUserIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      siteUserId_ = value.toStringUtf8();
    }

    public static final int PAGE_NUMBER_FIELD_NUMBER = 2;
    private int pageNumber_;
    /**
     * <pre>
     *第几页
     * </pre>
     *
     * <code>optional int32 page_number = 2;</code>
     */
    public int getPageNumber() {
      return pageNumber_;
    }
    /**
     * <pre>
     *第几页
     * </pre>
     *
     * <code>optional int32 page_number = 2;</code>
     */
    private void setPageNumber(int value) {

      pageNumber_ = value;
    }
    /**
     * <pre>
     *第几页
     * </pre>
     *
     * <code>optional int32 page_number = 2;</code>
     */
    private void clearPageNumber() {

      pageNumber_ = 0;
    }

    public static final int PAGE_SIZE_FIELD_NUMBER = 3;
    private int pageSize_;
    /**
     * <pre>
     *每页第几条
     * </pre>
     *
     * <code>optional int32 page_size = 3;</code>
     */
    public int getPageSize() {
      return pageSize_;
    }
    /**
     * <pre>
     *每页第几条
     * </pre>
     *
     * <code>optional int32 page_size = 3;</code>
     */
    private void setPageSize(int value) {

      pageSize_ = value;
    }
    /**
     * <pre>
     *每页第几条
     * </pre>
     *
     * <code>optional int32 page_size = 3;</code>
     */
    private void clearPageSize() {

      pageSize_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!siteUserId_.isEmpty()) {
        output.writeString(1, getSiteUserId());
      }
      if (pageNumber_ != 0) {
        output.writeInt32(2, pageNumber_);
      }
      if (pageSize_ != 0) {
        output.writeInt32(3, pageSize_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!siteUserId_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getSiteUserId());
      }
      if (pageNumber_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, pageNumber_);
      }
      if (pageSize_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, pageSize_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.akaxin.proto.site.ApiDeviceListProto.DeviceListInfoRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.akaxin.proto.site.ApiDeviceListProto.DeviceListInfoRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.akaxin.proto.site.ApiDeviceListProto.DeviceListInfoRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.akaxin.proto.site.ApiDeviceListProto.DeviceListInfoRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.akaxin.proto.site.ApiDeviceListProto.DeviceListInfoRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.site.ApiDeviceListProto.DeviceListInfoRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.akaxin.proto.site.ApiDeviceListProto.DeviceListInfoRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.site.ApiDeviceListProto.DeviceListInfoRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.akaxin.proto.site.ApiDeviceListProto.DeviceListInfoRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.site.ApiDeviceListProto.DeviceListInfoRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.akaxin.proto.site.ApiDeviceListProto.DeviceListInfoRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code site.DeviceListInfoRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          DeviceListInfoRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:site.DeviceListInfoRequest)
        com.akaxin.proto.site.ApiDeviceListProto.DeviceListInfoRequestOrBuilder {
      // Construct using com.akaxin.proto.site.ApiDeviceListProto.DeviceListInfoRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *获取列表的用户ID
       * </pre>
       *
       * <code>optional string site_user_id = 1;</code>
       */
      public String getSiteUserId() {
        return instance.getSiteUserId();
      }
      /**
       * <pre>
       *获取列表的用户ID
       * </pre>
       *
       * <code>optional string site_user_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSiteUserIdBytes() {
        return instance.getSiteUserIdBytes();
      }
      /**
       * <pre>
       *获取列表的用户ID
       * </pre>
       *
       * <code>optional string site_user_id = 1;</code>
       */
      public Builder setSiteUserId(
          String value) {
        copyOnWrite();
        instance.setSiteUserId(value);
        return this;
      }
      /**
       * <pre>
       *获取列表的用户ID
       * </pre>
       *
       * <code>optional string site_user_id = 1;</code>
       */
      public Builder clearSiteUserId() {
        copyOnWrite();
        instance.clearSiteUserId();
        return this;
      }
      /**
       * <pre>
       *获取列表的用户ID
       * </pre>
       *
       * <code>optional string site_user_id = 1;</code>
       */
      public Builder setSiteUserIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSiteUserIdBytes(value);
        return this;
      }

      /**
       * <pre>
       *第几页
       * </pre>
       *
       * <code>optional int32 page_number = 2;</code>
       */
      public int getPageNumber() {
        return instance.getPageNumber();
      }
      /**
       * <pre>
       *第几页
       * </pre>
       *
       * <code>optional int32 page_number = 2;</code>
       */
      public Builder setPageNumber(int value) {
        copyOnWrite();
        instance.setPageNumber(value);
        return this;
      }
      /**
       * <pre>
       *第几页
       * </pre>
       *
       * <code>optional int32 page_number = 2;</code>
       */
      public Builder clearPageNumber() {
        copyOnWrite();
        instance.clearPageNumber();
        return this;
      }

      /**
       * <pre>
       *每页第几条
       * </pre>
       *
       * <code>optional int32 page_size = 3;</code>
       */
      public int getPageSize() {
        return instance.getPageSize();
      }
      /**
       * <pre>
       *每页第几条
       * </pre>
       *
       * <code>optional int32 page_size = 3;</code>
       */
      public Builder setPageSize(int value) {
        copyOnWrite();
        instance.setPageSize(value);
        return this;
      }
      /**
       * <pre>
       *每页第几条
       * </pre>
       *
       * <code>optional int32 page_size = 3;</code>
       */
      public Builder clearPageSize() {
        copyOnWrite();
        instance.clearPageSize();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:site.DeviceListInfoRequest)
    }
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.akaxin.proto.site.ApiDeviceListProto.DeviceListInfoRequest();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.akaxin.proto.site.ApiDeviceListProto.DeviceListInfoRequest other = (com.akaxin.proto.site.ApiDeviceListProto.DeviceListInfoRequest) arg1;
          siteUserId_ = visitor.visitString(!siteUserId_.isEmpty(), siteUserId_,
              !other.siteUserId_.isEmpty(), other.siteUserId_);
          pageNumber_ = visitor.visitInt(pageNumber_ != 0, pageNumber_,
              other.pageNumber_ != 0, other.pageNumber_);
          pageSize_ = visitor.visitInt(pageSize_ != 0, pageSize_,
              other.pageSize_ != 0, other.pageSize_);
          if (visitor == MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  siteUserId_ = s;
                  break;
                }
                case 16: {

                  pageNumber_ = input.readInt32();
                  break;
                }
                case 24: {

                  pageSize_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.akaxin.proto.site.ApiDeviceListProto.DeviceListInfoRequest.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:site.DeviceListInfoRequest)
    private static final com.akaxin.proto.site.ApiDeviceListProto.DeviceListInfoRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new DeviceListInfoRequest();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.akaxin.proto.site.ApiDeviceListProto.DeviceListInfoRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<DeviceListInfoRequest> PARSER;

    public static com.google.protobuf.Parser<DeviceListInfoRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface DeviceListInfoResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:site.DeviceListInfoResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *设备列表信息
     * </pre>
     *
     * <code>repeated .core.SimpleDeviceProfile list = 1;</code>
     */
    java.util.List<com.akaxin.proto.core.DeviceProto.SimpleDeviceProfile>
        getListList();
    /**
     * <pre>
     *设备列表信息
     * </pre>
     *
     * <code>repeated .core.SimpleDeviceProfile list = 1;</code>
     */
    com.akaxin.proto.core.DeviceProto.SimpleDeviceProfile getList(int index);
    /**
     * <pre>
     *设备列表信息
     * </pre>
     *
     * <code>repeated .core.SimpleDeviceProfile list = 1;</code>
     */
    int getListCount();
  }
  /**
   * Protobuf type {@code site.DeviceListInfoResponse}
   */
  public  static final class DeviceListInfoResponse extends
      com.google.protobuf.GeneratedMessageLite<
          DeviceListInfoResponse, DeviceListInfoResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:site.DeviceListInfoResponse)
      DeviceListInfoResponseOrBuilder {
    private DeviceListInfoResponse() {
      list_ = emptyProtobufList();
    }
    public static final int LIST_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<com.akaxin.proto.core.DeviceProto.SimpleDeviceProfile> list_;
    /**
     * <pre>
     *设备列表信息
     * </pre>
     *
     * <code>repeated .core.SimpleDeviceProfile list = 1;</code>
     */
    public java.util.List<com.akaxin.proto.core.DeviceProto.SimpleDeviceProfile> getListList() {
      return list_;
    }
    /**
     * <pre>
     *设备列表信息
     * </pre>
     *
     * <code>repeated .core.SimpleDeviceProfile list = 1;</code>
     */
    public java.util.List<? extends com.akaxin.proto.core.DeviceProto.SimpleDeviceProfileOrBuilder>
        getListOrBuilderList() {
      return list_;
    }
    /**
     * <pre>
     *设备列表信息
     * </pre>
     *
     * <code>repeated .core.SimpleDeviceProfile list = 1;</code>
     */
    public int getListCount() {
      return list_.size();
    }
    /**
     * <pre>
     *设备列表信息
     * </pre>
     *
     * <code>repeated .core.SimpleDeviceProfile list = 1;</code>
     */
    public com.akaxin.proto.core.DeviceProto.SimpleDeviceProfile getList(int index) {
      return list_.get(index);
    }
    /**
     * <pre>
     *设备列表信息
     * </pre>
     *
     * <code>repeated .core.SimpleDeviceProfile list = 1;</code>
     */
    public com.akaxin.proto.core.DeviceProto.SimpleDeviceProfileOrBuilder getListOrBuilder(
        int index) {
      return list_.get(index);
    }
    private void ensureListIsMutable() {
      if (!list_.isModifiable()) {
        list_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(list_);
       }
    }

    /**
     * <pre>
     *设备列表信息
     * </pre>
     *
     * <code>repeated .core.SimpleDeviceProfile list = 1;</code>
     */
    private void setList(
        int index, com.akaxin.proto.core.DeviceProto.SimpleDeviceProfile value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureListIsMutable();
      list_.set(index, value);
    }
    /**
     * <pre>
     *设备列表信息
     * </pre>
     *
     * <code>repeated .core.SimpleDeviceProfile list = 1;</code>
     */
    private void setList(
        int index, com.akaxin.proto.core.DeviceProto.SimpleDeviceProfile.Builder builderForValue) {
      ensureListIsMutable();
      list_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     *设备列表信息
     * </pre>
     *
     * <code>repeated .core.SimpleDeviceProfile list = 1;</code>
     */
    private void addList(com.akaxin.proto.core.DeviceProto.SimpleDeviceProfile value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureListIsMutable();
      list_.add(value);
    }
    /**
     * <pre>
     *设备列表信息
     * </pre>
     *
     * <code>repeated .core.SimpleDeviceProfile list = 1;</code>
     */
    private void addList(
        int index, com.akaxin.proto.core.DeviceProto.SimpleDeviceProfile value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureListIsMutable();
      list_.add(index, value);
    }
    /**
     * <pre>
     *设备列表信息
     * </pre>
     *
     * <code>repeated .core.SimpleDeviceProfile list = 1;</code>
     */
    private void addList(
        com.akaxin.proto.core.DeviceProto.SimpleDeviceProfile.Builder builderForValue) {
      ensureListIsMutable();
      list_.add(builderForValue.build());
    }
    /**
     * <pre>
     *设备列表信息
     * </pre>
     *
     * <code>repeated .core.SimpleDeviceProfile list = 1;</code>
     */
    private void addList(
        int index, com.akaxin.proto.core.DeviceProto.SimpleDeviceProfile.Builder builderForValue) {
      ensureListIsMutable();
      list_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     *设备列表信息
     * </pre>
     *
     * <code>repeated .core.SimpleDeviceProfile list = 1;</code>
     */
    private void addAllList(
        Iterable<? extends com.akaxin.proto.core.DeviceProto.SimpleDeviceProfile> values) {
      ensureListIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, list_);
    }
    /**
     * <pre>
     *设备列表信息
     * </pre>
     *
     * <code>repeated .core.SimpleDeviceProfile list = 1;</code>
     */
    private void clearList() {
      list_ = emptyProtobufList();
    }
    /**
     * <pre>
     *设备列表信息
     * </pre>
     *
     * <code>repeated .core.SimpleDeviceProfile list = 1;</code>
     */
    private void removeList(int index) {
      ensureListIsMutable();
      list_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < list_.size(); i++) {
        output.writeMessage(1, list_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < list_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, list_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.akaxin.proto.site.ApiDeviceListProto.DeviceListInfoResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.akaxin.proto.site.ApiDeviceListProto.DeviceListInfoResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.akaxin.proto.site.ApiDeviceListProto.DeviceListInfoResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.akaxin.proto.site.ApiDeviceListProto.DeviceListInfoResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.akaxin.proto.site.ApiDeviceListProto.DeviceListInfoResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.site.ApiDeviceListProto.DeviceListInfoResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.akaxin.proto.site.ApiDeviceListProto.DeviceListInfoResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.site.ApiDeviceListProto.DeviceListInfoResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.akaxin.proto.site.ApiDeviceListProto.DeviceListInfoResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.site.ApiDeviceListProto.DeviceListInfoResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.akaxin.proto.site.ApiDeviceListProto.DeviceListInfoResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code site.DeviceListInfoResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          DeviceListInfoResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:site.DeviceListInfoResponse)
        com.akaxin.proto.site.ApiDeviceListProto.DeviceListInfoResponseOrBuilder {
      // Construct using com.akaxin.proto.site.ApiDeviceListProto.DeviceListInfoResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *设备列表信息
       * </pre>
       *
       * <code>repeated .core.SimpleDeviceProfile list = 1;</code>
       */
      public java.util.List<com.akaxin.proto.core.DeviceProto.SimpleDeviceProfile> getListList() {
        return java.util.Collections.unmodifiableList(
            instance.getListList());
      }
      /**
       * <pre>
       *设备列表信息
       * </pre>
       *
       * <code>repeated .core.SimpleDeviceProfile list = 1;</code>
       */
      public int getListCount() {
        return instance.getListCount();
      }/**
       * <pre>
       *设备列表信息
       * </pre>
       *
       * <code>repeated .core.SimpleDeviceProfile list = 1;</code>
       */
      public com.akaxin.proto.core.DeviceProto.SimpleDeviceProfile getList(int index) {
        return instance.getList(index);
      }
      /**
       * <pre>
       *设备列表信息
       * </pre>
       *
       * <code>repeated .core.SimpleDeviceProfile list = 1;</code>
       */
      public Builder setList(
          int index, com.akaxin.proto.core.DeviceProto.SimpleDeviceProfile value) {
        copyOnWrite();
        instance.setList(index, value);
        return this;
      }
      /**
       * <pre>
       *设备列表信息
       * </pre>
       *
       * <code>repeated .core.SimpleDeviceProfile list = 1;</code>
       */
      public Builder setList(
          int index, com.akaxin.proto.core.DeviceProto.SimpleDeviceProfile.Builder builderForValue) {
        copyOnWrite();
        instance.setList(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *设备列表信息
       * </pre>
       *
       * <code>repeated .core.SimpleDeviceProfile list = 1;</code>
       */
      public Builder addList(com.akaxin.proto.core.DeviceProto.SimpleDeviceProfile value) {
        copyOnWrite();
        instance.addList(value);
        return this;
      }
      /**
       * <pre>
       *设备列表信息
       * </pre>
       *
       * <code>repeated .core.SimpleDeviceProfile list = 1;</code>
       */
      public Builder addList(
          int index, com.akaxin.proto.core.DeviceProto.SimpleDeviceProfile value) {
        copyOnWrite();
        instance.addList(index, value);
        return this;
      }
      /**
       * <pre>
       *设备列表信息
       * </pre>
       *
       * <code>repeated .core.SimpleDeviceProfile list = 1;</code>
       */
      public Builder addList(
          com.akaxin.proto.core.DeviceProto.SimpleDeviceProfile.Builder builderForValue) {
        copyOnWrite();
        instance.addList(builderForValue);
        return this;
      }
      /**
       * <pre>
       *设备列表信息
       * </pre>
       *
       * <code>repeated .core.SimpleDeviceProfile list = 1;</code>
       */
      public Builder addList(
          int index, com.akaxin.proto.core.DeviceProto.SimpleDeviceProfile.Builder builderForValue) {
        copyOnWrite();
        instance.addList(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *设备列表信息
       * </pre>
       *
       * <code>repeated .core.SimpleDeviceProfile list = 1;</code>
       */
      public Builder addAllList(
          Iterable<? extends com.akaxin.proto.core.DeviceProto.SimpleDeviceProfile> values) {
        copyOnWrite();
        instance.addAllList(values);
        return this;
      }
      /**
       * <pre>
       *设备列表信息
       * </pre>
       *
       * <code>repeated .core.SimpleDeviceProfile list = 1;</code>
       */
      public Builder clearList() {
        copyOnWrite();
        instance.clearList();
        return this;
      }
      /**
       * <pre>
       *设备列表信息
       * </pre>
       *
       * <code>repeated .core.SimpleDeviceProfile list = 1;</code>
       */
      public Builder removeList(int index) {
        copyOnWrite();
        instance.removeList(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:site.DeviceListInfoResponse)
    }
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.akaxin.proto.site.ApiDeviceListProto.DeviceListInfoResponse();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          list_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.akaxin.proto.site.ApiDeviceListProto.DeviceListInfoResponse other = (com.akaxin.proto.site.ApiDeviceListProto.DeviceListInfoResponse) arg1;
          list_= visitor.visitList(list_, other.list_);
          if (visitor == MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  if (!list_.isModifiable()) {
                    list_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(list_);
                  }
                  list_.add(
                      input.readMessage(com.akaxin.proto.core.DeviceProto.SimpleDeviceProfile.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.akaxin.proto.site.ApiDeviceListProto.DeviceListInfoResponse.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:site.DeviceListInfoResponse)
    private static final com.akaxin.proto.site.ApiDeviceListProto.DeviceListInfoResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new DeviceListInfoResponse();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.akaxin.proto.site.ApiDeviceListProto.DeviceListInfoResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<DeviceListInfoResponse> PARSER;

    public static com.google.protobuf.Parser<DeviceListInfoResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
