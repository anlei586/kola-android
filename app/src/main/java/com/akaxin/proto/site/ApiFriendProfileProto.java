// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: site/api_friend_profile.proto

package com.akaxin.proto.site;

public final class ApiFriendProfileProto {
  private ApiFriendProfileProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface ApiFriendProfileRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:site.ApiFriendProfileRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *用户身份的公钥,站点优先使用此值
     * </pre>
     *
     * <code>optional string user_id_pubk = 1;</code>
     */
    String getUserIdPubk();
    /**
     * <pre>
     *用户身份的公钥,站点优先使用此值
     * </pre>
     *
     * <code>optional string user_id_pubk = 1;</code>
     */
    com.google.protobuf.ByteString
        getUserIdPubkBytes();

    /**
     * <pre>
     *用户在站点的ID，用户公钥为空情况，使用用户站点ID
     * </pre>
     *
     * <code>optional string site_user_id = 2;</code>
     */
    String getSiteUserId();
    /**
     * <pre>
     *用户在站点的ID，用户公钥为空情况，使用用户站点ID
     * </pre>
     *
     * <code>optional string site_user_id = 2;</code>
     */
    com.google.protobuf.ByteString
        getSiteUserIdBytes();
  }
  /**
   * Protobuf type {@code site.ApiFriendProfileRequest}
   */
  public  static final class ApiFriendProfileRequest extends
      com.google.protobuf.GeneratedMessageLite<
          ApiFriendProfileRequest, ApiFriendProfileRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:site.ApiFriendProfileRequest)
      ApiFriendProfileRequestOrBuilder {
    private ApiFriendProfileRequest() {
      userIdPubk_ = "";
      siteUserId_ = "";
    }
    public static final int USER_ID_PUBK_FIELD_NUMBER = 1;
    private String userIdPubk_;
    /**
     * <pre>
     *用户身份的公钥,站点优先使用此值
     * </pre>
     *
     * <code>optional string user_id_pubk = 1;</code>
     */
    public String getUserIdPubk() {
      return userIdPubk_;
    }
    /**
     * <pre>
     *用户身份的公钥,站点优先使用此值
     * </pre>
     *
     * <code>optional string user_id_pubk = 1;</code>
     */
    public com.google.protobuf.ByteString
        getUserIdPubkBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(userIdPubk_);
    }
    /**
     * <pre>
     *用户身份的公钥,站点优先使用此值
     * </pre>
     *
     * <code>optional string user_id_pubk = 1;</code>
     */
    private void setUserIdPubk(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      userIdPubk_ = value;
    }
    /**
     * <pre>
     *用户身份的公钥,站点优先使用此值
     * </pre>
     *
     * <code>optional string user_id_pubk = 1;</code>
     */
    private void clearUserIdPubk() {

      userIdPubk_ = getDefaultInstance().getUserIdPubk();
    }
    /**
     * <pre>
     *用户身份的公钥,站点优先使用此值
     * </pre>
     *
     * <code>optional string user_id_pubk = 1;</code>
     */
    private void setUserIdPubkBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      userIdPubk_ = value.toStringUtf8();
    }

    public static final int SITE_USER_ID_FIELD_NUMBER = 2;
    private String siteUserId_;
    /**
     * <pre>
     *用户在站点的ID，用户公钥为空情况，使用用户站点ID
     * </pre>
     *
     * <code>optional string site_user_id = 2;</code>
     */
    public String getSiteUserId() {
      return siteUserId_;
    }
    /**
     * <pre>
     *用户在站点的ID，用户公钥为空情况，使用用户站点ID
     * </pre>
     *
     * <code>optional string site_user_id = 2;</code>
     */
    public com.google.protobuf.ByteString
        getSiteUserIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(siteUserId_);
    }
    /**
     * <pre>
     *用户在站点的ID，用户公钥为空情况，使用用户站点ID
     * </pre>
     *
     * <code>optional string site_user_id = 2;</code>
     */
    private void setSiteUserId(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      siteUserId_ = value;
    }
    /**
     * <pre>
     *用户在站点的ID，用户公钥为空情况，使用用户站点ID
     * </pre>
     *
     * <code>optional string site_user_id = 2;</code>
     */
    private void clearSiteUserId() {

      siteUserId_ = getDefaultInstance().getSiteUserId();
    }
    /**
     * <pre>
     *用户在站点的ID，用户公钥为空情况，使用用户站点ID
     * </pre>
     *
     * <code>optional string site_user_id = 2;</code>
     */
    private void setSiteUserIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      siteUserId_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!userIdPubk_.isEmpty()) {
        output.writeString(1, getUserIdPubk());
      }
      if (!siteUserId_.isEmpty()) {
        output.writeString(2, getSiteUserId());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!userIdPubk_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getUserIdPubk());
      }
      if (!siteUserId_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getSiteUserId());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.akaxin.proto.site.ApiFriendProfileProto.ApiFriendProfileRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.akaxin.proto.site.ApiFriendProfileProto.ApiFriendProfileRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.akaxin.proto.site.ApiFriendProfileProto.ApiFriendProfileRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.akaxin.proto.site.ApiFriendProfileProto.ApiFriendProfileRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.akaxin.proto.site.ApiFriendProfileProto.ApiFriendProfileRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.site.ApiFriendProfileProto.ApiFriendProfileRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.akaxin.proto.site.ApiFriendProfileProto.ApiFriendProfileRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.site.ApiFriendProfileProto.ApiFriendProfileRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.akaxin.proto.site.ApiFriendProfileProto.ApiFriendProfileRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.site.ApiFriendProfileProto.ApiFriendProfileRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.akaxin.proto.site.ApiFriendProfileProto.ApiFriendProfileRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code site.ApiFriendProfileRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          ApiFriendProfileRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:site.ApiFriendProfileRequest)
        com.akaxin.proto.site.ApiFriendProfileProto.ApiFriendProfileRequestOrBuilder {
      // Construct using com.akaxin.proto.site.ApiFriendProfileProto.ApiFriendProfileRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *用户身份的公钥,站点优先使用此值
       * </pre>
       *
       * <code>optional string user_id_pubk = 1;</code>
       */
      public String getUserIdPubk() {
        return instance.getUserIdPubk();
      }
      /**
       * <pre>
       *用户身份的公钥,站点优先使用此值
       * </pre>
       *
       * <code>optional string user_id_pubk = 1;</code>
       */
      public com.google.protobuf.ByteString
          getUserIdPubkBytes() {
        return instance.getUserIdPubkBytes();
      }
      /**
       * <pre>
       *用户身份的公钥,站点优先使用此值
       * </pre>
       *
       * <code>optional string user_id_pubk = 1;</code>
       */
      public Builder setUserIdPubk(
          String value) {
        copyOnWrite();
        instance.setUserIdPubk(value);
        return this;
      }
      /**
       * <pre>
       *用户身份的公钥,站点优先使用此值
       * </pre>
       *
       * <code>optional string user_id_pubk = 1;</code>
       */
      public Builder clearUserIdPubk() {
        copyOnWrite();
        instance.clearUserIdPubk();
        return this;
      }
      /**
       * <pre>
       *用户身份的公钥,站点优先使用此值
       * </pre>
       *
       * <code>optional string user_id_pubk = 1;</code>
       */
      public Builder setUserIdPubkBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setUserIdPubkBytes(value);
        return this;
      }

      /**
       * <pre>
       *用户在站点的ID，用户公钥为空情况，使用用户站点ID
       * </pre>
       *
       * <code>optional string site_user_id = 2;</code>
       */
      public String getSiteUserId() {
        return instance.getSiteUserId();
      }
      /**
       * <pre>
       *用户在站点的ID，用户公钥为空情况，使用用户站点ID
       * </pre>
       *
       * <code>optional string site_user_id = 2;</code>
       */
      public com.google.protobuf.ByteString
          getSiteUserIdBytes() {
        return instance.getSiteUserIdBytes();
      }
      /**
       * <pre>
       *用户在站点的ID，用户公钥为空情况，使用用户站点ID
       * </pre>
       *
       * <code>optional string site_user_id = 2;</code>
       */
      public Builder setSiteUserId(
          String value) {
        copyOnWrite();
        instance.setSiteUserId(value);
        return this;
      }
      /**
       * <pre>
       *用户在站点的ID，用户公钥为空情况，使用用户站点ID
       * </pre>
       *
       * <code>optional string site_user_id = 2;</code>
       */
      public Builder clearSiteUserId() {
        copyOnWrite();
        instance.clearSiteUserId();
        return this;
      }
      /**
       * <pre>
       *用户在站点的ID，用户公钥为空情况，使用用户站点ID
       * </pre>
       *
       * <code>optional string site_user_id = 2;</code>
       */
      public Builder setSiteUserIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSiteUserIdBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:site.ApiFriendProfileRequest)
    }
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.akaxin.proto.site.ApiFriendProfileProto.ApiFriendProfileRequest();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.akaxin.proto.site.ApiFriendProfileProto.ApiFriendProfileRequest other = (com.akaxin.proto.site.ApiFriendProfileProto.ApiFriendProfileRequest) arg1;
          userIdPubk_ = visitor.visitString(!userIdPubk_.isEmpty(), userIdPubk_,
              !other.userIdPubk_.isEmpty(), other.userIdPubk_);
          siteUserId_ = visitor.visitString(!siteUserId_.isEmpty(), siteUserId_,
              !other.siteUserId_.isEmpty(), other.siteUserId_);
          if (visitor == MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  userIdPubk_ = s;
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();

                  siteUserId_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.akaxin.proto.site.ApiFriendProfileProto.ApiFriendProfileRequest.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:site.ApiFriendProfileRequest)
    private static final com.akaxin.proto.site.ApiFriendProfileProto.ApiFriendProfileRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ApiFriendProfileRequest();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.akaxin.proto.site.ApiFriendProfileProto.ApiFriendProfileRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ApiFriendProfileRequest> PARSER;

    public static com.google.protobuf.Parser<ApiFriendProfileRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ApiFriendProfileResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:site.ApiFriendProfileResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *用户好友的信息
     * </pre>
     *
     * <code>optional .core.UserProfile profile = 1;</code>
     */
    boolean hasProfile();
    /**
     * <pre>
     *用户好友的信息
     * </pre>
     *
     * <code>optional .core.UserProfile profile = 1;</code>
     */
    com.akaxin.proto.core.UserProto.UserProfile getProfile();

    /**
     * <pre>
     *用户之间的关系
     * </pre>
     *
     * <code>optional .core.UserRelation relation = 2;</code>
     */
    int getRelationValue();
    /**
     * <pre>
     *用户之间的关系
     * </pre>
     *
     * <code>optional .core.UserRelation relation = 2;</code>
     */
    com.akaxin.proto.core.UserProto.UserRelation getRelation();

    /**
     * <pre>
     *用户公钥，客户端称呼用户身份或者用户证书
     * </pre>
     *
     * <code>optional string user_id_pubk = 3;</code>
     */
    String getUserIdPubk();
    /**
     * <pre>
     *用户公钥，客户端称呼用户身份或者用户证书
     * </pre>
     *
     * <code>optional string user_id_pubk = 3;</code>
     */
    com.google.protobuf.ByteString
        getUserIdPubkBytes();
  }
  /**
   * Protobuf type {@code site.ApiFriendProfileResponse}
   */
  public  static final class ApiFriendProfileResponse extends
      com.google.protobuf.GeneratedMessageLite<
          ApiFriendProfileResponse, ApiFriendProfileResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:site.ApiFriendProfileResponse)
      ApiFriendProfileResponseOrBuilder {
    private ApiFriendProfileResponse() {
      userIdPubk_ = "";
    }
    public static final int PROFILE_FIELD_NUMBER = 1;
    private com.akaxin.proto.core.UserProto.UserProfile profile_;
    /**
     * <pre>
     *用户好友的信息
     * </pre>
     *
     * <code>optional .core.UserProfile profile = 1;</code>
     */
    public boolean hasProfile() {
      return profile_ != null;
    }
    /**
     * <pre>
     *用户好友的信息
     * </pre>
     *
     * <code>optional .core.UserProfile profile = 1;</code>
     */
    public com.akaxin.proto.core.UserProto.UserProfile getProfile() {
      return profile_ == null ? com.akaxin.proto.core.UserProto.UserProfile.getDefaultInstance() : profile_;
    }
    /**
     * <pre>
     *用户好友的信息
     * </pre>
     *
     * <code>optional .core.UserProfile profile = 1;</code>
     */
    private void setProfile(com.akaxin.proto.core.UserProto.UserProfile value) {
      if (value == null) {
        throw new NullPointerException();
      }
      profile_ = value;

      }
    /**
     * <pre>
     *用户好友的信息
     * </pre>
     *
     * <code>optional .core.UserProfile profile = 1;</code>
     */
    private void setProfile(
        com.akaxin.proto.core.UserProto.UserProfile.Builder builderForValue) {
      profile_ = builderForValue.build();

    }
    /**
     * <pre>
     *用户好友的信息
     * </pre>
     *
     * <code>optional .core.UserProfile profile = 1;</code>
     */
    private void mergeProfile(com.akaxin.proto.core.UserProto.UserProfile value) {
      if (profile_ != null &&
          profile_ != com.akaxin.proto.core.UserProto.UserProfile.getDefaultInstance()) {
        profile_ =
          com.akaxin.proto.core.UserProto.UserProfile.newBuilder(profile_).mergeFrom(value).buildPartial();
      } else {
        profile_ = value;
      }

    }
    /**
     * <pre>
     *用户好友的信息
     * </pre>
     *
     * <code>optional .core.UserProfile profile = 1;</code>
     */
    private void clearProfile() {  profile_ = null;

    }

    public static final int RELATION_FIELD_NUMBER = 2;
    private int relation_;
    /**
     * <pre>
     *用户之间的关系
     * </pre>
     *
     * <code>optional .core.UserRelation relation = 2;</code>
     */
    public int getRelationValue() {
      return relation_;
    }
    /**
     * <pre>
     *用户之间的关系
     * </pre>
     *
     * <code>optional .core.UserRelation relation = 2;</code>
     */
    public com.akaxin.proto.core.UserProto.UserRelation getRelation() {
      com.akaxin.proto.core.UserProto.UserRelation result = com.akaxin.proto.core.UserProto.UserRelation.forNumber(relation_);
      return result == null ? com.akaxin.proto.core.UserProto.UserRelation.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     *用户之间的关系
     * </pre>
     *
     * <code>optional .core.UserRelation relation = 2;</code>
     */
    private void setRelationValue(int value) {
        relation_ = value;
    }
    /**
     * <pre>
     *用户之间的关系
     * </pre>
     *
     * <code>optional .core.UserRelation relation = 2;</code>
     */
    private void setRelation(com.akaxin.proto.core.UserProto.UserRelation value) {
      if (value == null) {
        throw new NullPointerException();
      }

      relation_ = value.getNumber();
    }
    /**
     * <pre>
     *用户之间的关系
     * </pre>
     *
     * <code>optional .core.UserRelation relation = 2;</code>
     */
    private void clearRelation() {

      relation_ = 0;
    }

    public static final int USER_ID_PUBK_FIELD_NUMBER = 3;
    private String userIdPubk_;
    /**
     * <pre>
     *用户公钥，客户端称呼用户身份或者用户证书
     * </pre>
     *
     * <code>optional string user_id_pubk = 3;</code>
     */
    public String getUserIdPubk() {
      return userIdPubk_;
    }
    /**
     * <pre>
     *用户公钥，客户端称呼用户身份或者用户证书
     * </pre>
     *
     * <code>optional string user_id_pubk = 3;</code>
     */
    public com.google.protobuf.ByteString
        getUserIdPubkBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(userIdPubk_);
    }
    /**
     * <pre>
     *用户公钥，客户端称呼用户身份或者用户证书
     * </pre>
     *
     * <code>optional string user_id_pubk = 3;</code>
     */
    private void setUserIdPubk(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      userIdPubk_ = value;
    }
    /**
     * <pre>
     *用户公钥，客户端称呼用户身份或者用户证书
     * </pre>
     *
     * <code>optional string user_id_pubk = 3;</code>
     */
    private void clearUserIdPubk() {

      userIdPubk_ = getDefaultInstance().getUserIdPubk();
    }
    /**
     * <pre>
     *用户公钥，客户端称呼用户身份或者用户证书
     * </pre>
     *
     * <code>optional string user_id_pubk = 3;</code>
     */
    private void setUserIdPubkBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      userIdPubk_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (profile_ != null) {
        output.writeMessage(1, getProfile());
      }
      if (relation_ != com.akaxin.proto.core.UserProto.UserRelation.RELATION_NONE.getNumber()) {
        output.writeEnum(2, relation_);
      }
      if (!userIdPubk_.isEmpty()) {
        output.writeString(3, getUserIdPubk());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (profile_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getProfile());
      }
      if (relation_ != com.akaxin.proto.core.UserProto.UserRelation.RELATION_NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, relation_);
      }
      if (!userIdPubk_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getUserIdPubk());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.akaxin.proto.site.ApiFriendProfileProto.ApiFriendProfileResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.akaxin.proto.site.ApiFriendProfileProto.ApiFriendProfileResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.akaxin.proto.site.ApiFriendProfileProto.ApiFriendProfileResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.akaxin.proto.site.ApiFriendProfileProto.ApiFriendProfileResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.akaxin.proto.site.ApiFriendProfileProto.ApiFriendProfileResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.site.ApiFriendProfileProto.ApiFriendProfileResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.akaxin.proto.site.ApiFriendProfileProto.ApiFriendProfileResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.site.ApiFriendProfileProto.ApiFriendProfileResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.akaxin.proto.site.ApiFriendProfileProto.ApiFriendProfileResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.site.ApiFriendProfileProto.ApiFriendProfileResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.akaxin.proto.site.ApiFriendProfileProto.ApiFriendProfileResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code site.ApiFriendProfileResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          ApiFriendProfileResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:site.ApiFriendProfileResponse)
        com.akaxin.proto.site.ApiFriendProfileProto.ApiFriendProfileResponseOrBuilder {
      // Construct using com.akaxin.proto.site.ApiFriendProfileProto.ApiFriendProfileResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *用户好友的信息
       * </pre>
       *
       * <code>optional .core.UserProfile profile = 1;</code>
       */
      public boolean hasProfile() {
        return instance.hasProfile();
      }
      /**
       * <pre>
       *用户好友的信息
       * </pre>
       *
       * <code>optional .core.UserProfile profile = 1;</code>
       */
      public com.akaxin.proto.core.UserProto.UserProfile getProfile() {
        return instance.getProfile();
      }
      /**
       * <pre>
       *用户好友的信息
       * </pre>
       *
       * <code>optional .core.UserProfile profile = 1;</code>
       */
      public Builder setProfile(com.akaxin.proto.core.UserProto.UserProfile value) {
        copyOnWrite();
        instance.setProfile(value);
        return this;
        }
      /**
       * <pre>
       *用户好友的信息
       * </pre>
       *
       * <code>optional .core.UserProfile profile = 1;</code>
       */
      public Builder setProfile(
          com.akaxin.proto.core.UserProto.UserProfile.Builder builderForValue) {
        copyOnWrite();
        instance.setProfile(builderForValue);
        return this;
      }
      /**
       * <pre>
       *用户好友的信息
       * </pre>
       *
       * <code>optional .core.UserProfile profile = 1;</code>
       */
      public Builder mergeProfile(com.akaxin.proto.core.UserProto.UserProfile value) {
        copyOnWrite();
        instance.mergeProfile(value);
        return this;
      }
      /**
       * <pre>
       *用户好友的信息
       * </pre>
       *
       * <code>optional .core.UserProfile profile = 1;</code>
       */
      public Builder clearProfile() {  copyOnWrite();
        instance.clearProfile();
        return this;
      }

      /**
       * <pre>
       *用户之间的关系
       * </pre>
       *
       * <code>optional .core.UserRelation relation = 2;</code>
       */
      public int getRelationValue() {
        return instance.getRelationValue();
      }
      /**
       * <pre>
       *用户之间的关系
       * </pre>
       *
       * <code>optional .core.UserRelation relation = 2;</code>
       */
      public Builder setRelationValue(int value) {
        copyOnWrite();
        instance.setRelationValue(value);
        return this;
      }
      /**
       * <pre>
       *用户之间的关系
       * </pre>
       *
       * <code>optional .core.UserRelation relation = 2;</code>
       */
      public com.akaxin.proto.core.UserProto.UserRelation getRelation() {
        return instance.getRelation();
      }
      /**
       * <pre>
       *用户之间的关系
       * </pre>
       *
       * <code>optional .core.UserRelation relation = 2;</code>
       */
      public Builder setRelation(com.akaxin.proto.core.UserProto.UserRelation value) {
        copyOnWrite();
        instance.setRelation(value);
        return this;
      }
      /**
       * <pre>
       *用户之间的关系
       * </pre>
       *
       * <code>optional .core.UserRelation relation = 2;</code>
       */
      public Builder clearRelation() {
        copyOnWrite();
        instance.clearRelation();
        return this;
      }

      /**
       * <pre>
       *用户公钥，客户端称呼用户身份或者用户证书
       * </pre>
       *
       * <code>optional string user_id_pubk = 3;</code>
       */
      public String getUserIdPubk() {
        return instance.getUserIdPubk();
      }
      /**
       * <pre>
       *用户公钥，客户端称呼用户身份或者用户证书
       * </pre>
       *
       * <code>optional string user_id_pubk = 3;</code>
       */
      public com.google.protobuf.ByteString
          getUserIdPubkBytes() {
        return instance.getUserIdPubkBytes();
      }
      /**
       * <pre>
       *用户公钥，客户端称呼用户身份或者用户证书
       * </pre>
       *
       * <code>optional string user_id_pubk = 3;</code>
       */
      public Builder setUserIdPubk(
          String value) {
        copyOnWrite();
        instance.setUserIdPubk(value);
        return this;
      }
      /**
       * <pre>
       *用户公钥，客户端称呼用户身份或者用户证书
       * </pre>
       *
       * <code>optional string user_id_pubk = 3;</code>
       */
      public Builder clearUserIdPubk() {
        copyOnWrite();
        instance.clearUserIdPubk();
        return this;
      }
      /**
       * <pre>
       *用户公钥，客户端称呼用户身份或者用户证书
       * </pre>
       *
       * <code>optional string user_id_pubk = 3;</code>
       */
      public Builder setUserIdPubkBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setUserIdPubkBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:site.ApiFriendProfileResponse)
    }
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.akaxin.proto.site.ApiFriendProfileProto.ApiFriendProfileResponse();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.akaxin.proto.site.ApiFriendProfileProto.ApiFriendProfileResponse other = (com.akaxin.proto.site.ApiFriendProfileProto.ApiFriendProfileResponse) arg1;
          profile_ = visitor.visitMessage(profile_, other.profile_);
          relation_ = visitor.visitInt(relation_ != 0, relation_,    other.relation_ != 0, other.relation_);
          userIdPubk_ = visitor.visitString(!userIdPubk_.isEmpty(), userIdPubk_,
              !other.userIdPubk_.isEmpty(), other.userIdPubk_);
          if (visitor == MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.akaxin.proto.core.UserProto.UserProfile.Builder subBuilder = null;
                  if (profile_ != null) {
                    subBuilder = profile_.toBuilder();
                  }
                  profile_ = input.readMessage(com.akaxin.proto.core.UserProto.UserProfile.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(profile_);
                    profile_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {
                  int rawValue = input.readEnum();

                  relation_ = rawValue;
                  break;
                }
                case 26: {
                  String s = input.readStringRequireUtf8();

                  userIdPubk_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.akaxin.proto.site.ApiFriendProfileProto.ApiFriendProfileResponse.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:site.ApiFriendProfileResponse)
    private static final com.akaxin.proto.site.ApiFriendProfileProto.ApiFriendProfileResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ApiFriendProfileResponse();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.akaxin.proto.site.ApiFriendProfileProto.ApiFriendProfileResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ApiFriendProfileResponse> PARSER;

    public static com.google.protobuf.Parser<ApiFriendProfileResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
