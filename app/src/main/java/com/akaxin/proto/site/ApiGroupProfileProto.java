// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: site/api_group_profile.proto

package com.akaxin.proto.site;

public final class ApiGroupProfileProto {
  private ApiGroupProfileProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface ApiGroupProfileRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:site.ApiGroupProfileRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *当前用户获取群组ID的资料信息
     * </pre>
     *
     * <code>optional string group_id = 1;</code>
     */
    String getGroupId();
    /**
     * <pre>
     *当前用户获取群组ID的资料信息
     * </pre>
     *
     * <code>optional string group_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getGroupIdBytes();
  }
  /**
   * Protobuf type {@code site.ApiGroupProfileRequest}
   */
  public  static final class ApiGroupProfileRequest extends
      com.google.protobuf.GeneratedMessageLite<
          ApiGroupProfileRequest, ApiGroupProfileRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:site.ApiGroupProfileRequest)
      ApiGroupProfileRequestOrBuilder {
    private ApiGroupProfileRequest() {
      groupId_ = "";
    }
    public static final int GROUP_ID_FIELD_NUMBER = 1;
    private String groupId_;
    /**
     * <pre>
     *当前用户获取群组ID的资料信息
     * </pre>
     *
     * <code>optional string group_id = 1;</code>
     */
    public String getGroupId() {
      return groupId_;
    }
    /**
     * <pre>
     *当前用户获取群组ID的资料信息
     * </pre>
     *
     * <code>optional string group_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getGroupIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(groupId_);
    }
    /**
     * <pre>
     *当前用户获取群组ID的资料信息
     * </pre>
     *
     * <code>optional string group_id = 1;</code>
     */
    private void setGroupId(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      groupId_ = value;
    }
    /**
     * <pre>
     *当前用户获取群组ID的资料信息
     * </pre>
     *
     * <code>optional string group_id = 1;</code>
     */
    private void clearGroupId() {

      groupId_ = getDefaultInstance().getGroupId();
    }
    /**
     * <pre>
     *当前用户获取群组ID的资料信息
     * </pre>
     *
     * <code>optional string group_id = 1;</code>
     */
    private void setGroupIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      groupId_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!groupId_.isEmpty()) {
        output.writeString(1, getGroupId());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!groupId_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getGroupId());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.akaxin.proto.site.ApiGroupProfileProto.ApiGroupProfileRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.akaxin.proto.site.ApiGroupProfileProto.ApiGroupProfileRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.akaxin.proto.site.ApiGroupProfileProto.ApiGroupProfileRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.akaxin.proto.site.ApiGroupProfileProto.ApiGroupProfileRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.akaxin.proto.site.ApiGroupProfileProto.ApiGroupProfileRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.site.ApiGroupProfileProto.ApiGroupProfileRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.akaxin.proto.site.ApiGroupProfileProto.ApiGroupProfileRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.site.ApiGroupProfileProto.ApiGroupProfileRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.akaxin.proto.site.ApiGroupProfileProto.ApiGroupProfileRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.site.ApiGroupProfileProto.ApiGroupProfileRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.akaxin.proto.site.ApiGroupProfileProto.ApiGroupProfileRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code site.ApiGroupProfileRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          ApiGroupProfileRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:site.ApiGroupProfileRequest)
        com.akaxin.proto.site.ApiGroupProfileProto.ApiGroupProfileRequestOrBuilder {
      // Construct using com.akaxin.proto.site.ApiGroupProfileProto.ApiGroupProfileRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *当前用户获取群组ID的资料信息
       * </pre>
       *
       * <code>optional string group_id = 1;</code>
       */
      public String getGroupId() {
        return instance.getGroupId();
      }
      /**
       * <pre>
       *当前用户获取群组ID的资料信息
       * </pre>
       *
       * <code>optional string group_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getGroupIdBytes() {
        return instance.getGroupIdBytes();
      }
      /**
       * <pre>
       *当前用户获取群组ID的资料信息
       * </pre>
       *
       * <code>optional string group_id = 1;</code>
       */
      public Builder setGroupId(
          String value) {
        copyOnWrite();
        instance.setGroupId(value);
        return this;
      }
      /**
       * <pre>
       *当前用户获取群组ID的资料信息
       * </pre>
       *
       * <code>optional string group_id = 1;</code>
       */
      public Builder clearGroupId() {
        copyOnWrite();
        instance.clearGroupId();
        return this;
      }
      /**
       * <pre>
       *当前用户获取群组ID的资料信息
       * </pre>
       *
       * <code>optional string group_id = 1;</code>
       */
      public Builder setGroupIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setGroupIdBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:site.ApiGroupProfileRequest)
    }
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.akaxin.proto.site.ApiGroupProfileProto.ApiGroupProfileRequest();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.akaxin.proto.site.ApiGroupProfileProto.ApiGroupProfileRequest other = (com.akaxin.proto.site.ApiGroupProfileProto.ApiGroupProfileRequest) arg1;
          groupId_ = visitor.visitString(!groupId_.isEmpty(), groupId_,
              !other.groupId_.isEmpty(), other.groupId_);
          if (visitor == MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  groupId_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.akaxin.proto.site.ApiGroupProfileProto.ApiGroupProfileRequest.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:site.ApiGroupProfileRequest)
    private static final com.akaxin.proto.site.ApiGroupProfileProto.ApiGroupProfileRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ApiGroupProfileRequest();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.akaxin.proto.site.ApiGroupProfileProto.ApiGroupProfileRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ApiGroupProfileRequest> PARSER;

    public static com.google.protobuf.Parser<ApiGroupProfileRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ApiGroupProfileResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:site.ApiGroupProfileResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *群组资料页信息
     * </pre>
     *
     * <code>optional .core.GroupProfile profile = 1;</code>
     */
    boolean hasProfile();
    /**
     * <pre>
     *群组资料页信息
     * </pre>
     *
     * <code>optional .core.GroupProfile profile = 1;</code>
     */
    com.akaxin.proto.core.GroupProto.GroupProfile getProfile();

    /**
     * <pre>
     *群组创建者信息
     * </pre>
     *
     * <code>optional .core.UserProfile owner = 2;</code>
     */
    boolean hasOwner();
    /**
     * <pre>
     *群组创建者信息
     * </pre>
     *
     * <code>optional .core.UserProfile owner = 2;</code>
     */
    com.akaxin.proto.core.UserProto.UserProfile getOwner();

    /**
     * <pre>
     *群组的成员数量
     * </pre>
     *
     * <code>optional int32 group_member_count = 3;</code>
     */
    int getGroupMemberCount();

    /**
     * <pre>
     *群成员
     * </pre>
     *
     * <code>repeated .core.GroupMemberProfile group_lastest_member = 4;</code>
     */
    java.util.List<com.akaxin.proto.core.GroupProto.GroupMemberProfile>
        getGroupLastestMemberList();
    /**
     * <pre>
     *群成员
     * </pre>
     *
     * <code>repeated .core.GroupMemberProfile group_lastest_member = 4;</code>
     */
    com.akaxin.proto.core.GroupProto.GroupMemberProfile getGroupLastestMember(int index);
    /**
     * <pre>
     *群成员
     * </pre>
     *
     * <code>repeated .core.GroupMemberProfile group_lastest_member = 4;</code>
     */
    int getGroupLastestMemberCount();

    /**
     * <pre>
     *关闭邀请新用户群聊 true：打开  false：关闭
     * </pre>
     *
     * <code>optional bool close_invite_group_chat = 5;</code>
     */
    boolean getCloseInviteGroupChat();
  }
  /**
   * Protobuf type {@code site.ApiGroupProfileResponse}
   */
  public  static final class ApiGroupProfileResponse extends
      com.google.protobuf.GeneratedMessageLite<
          ApiGroupProfileResponse, ApiGroupProfileResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:site.ApiGroupProfileResponse)
      ApiGroupProfileResponseOrBuilder {
    private ApiGroupProfileResponse() {
      groupLastestMember_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int PROFILE_FIELD_NUMBER = 1;
    private com.akaxin.proto.core.GroupProto.GroupProfile profile_;
    /**
     * <pre>
     *群组资料页信息
     * </pre>
     *
     * <code>optional .core.GroupProfile profile = 1;</code>
     */
    public boolean hasProfile() {
      return profile_ != null;
    }
    /**
     * <pre>
     *群组资料页信息
     * </pre>
     *
     * <code>optional .core.GroupProfile profile = 1;</code>
     */
    public com.akaxin.proto.core.GroupProto.GroupProfile getProfile() {
      return profile_ == null ? com.akaxin.proto.core.GroupProto.GroupProfile.getDefaultInstance() : profile_;
    }
    /**
     * <pre>
     *群组资料页信息
     * </pre>
     *
     * <code>optional .core.GroupProfile profile = 1;</code>
     */
    private void setProfile(com.akaxin.proto.core.GroupProto.GroupProfile value) {
      if (value == null) {
        throw new NullPointerException();
      }
      profile_ = value;

      }
    /**
     * <pre>
     *群组资料页信息
     * </pre>
     *
     * <code>optional .core.GroupProfile profile = 1;</code>
     */
    private void setProfile(
        com.akaxin.proto.core.GroupProto.GroupProfile.Builder builderForValue) {
      profile_ = builderForValue.build();

    }
    /**
     * <pre>
     *群组资料页信息
     * </pre>
     *
     * <code>optional .core.GroupProfile profile = 1;</code>
     */
    private void mergeProfile(com.akaxin.proto.core.GroupProto.GroupProfile value) {
      if (profile_ != null &&
          profile_ != com.akaxin.proto.core.GroupProto.GroupProfile.getDefaultInstance()) {
        profile_ =
          com.akaxin.proto.core.GroupProto.GroupProfile.newBuilder(profile_).mergeFrom(value).buildPartial();
      } else {
        profile_ = value;
      }

    }
    /**
     * <pre>
     *群组资料页信息
     * </pre>
     *
     * <code>optional .core.GroupProfile profile = 1;</code>
     */
    private void clearProfile() {  profile_ = null;

    }

    public static final int OWNER_FIELD_NUMBER = 2;
    private com.akaxin.proto.core.UserProto.UserProfile owner_;
    /**
     * <pre>
     *群组创建者信息
     * </pre>
     *
     * <code>optional .core.UserProfile owner = 2;</code>
     */
    public boolean hasOwner() {
      return owner_ != null;
    }
    /**
     * <pre>
     *群组创建者信息
     * </pre>
     *
     * <code>optional .core.UserProfile owner = 2;</code>
     */
    public com.akaxin.proto.core.UserProto.UserProfile getOwner() {
      return owner_ == null ? com.akaxin.proto.core.UserProto.UserProfile.getDefaultInstance() : owner_;
    }
    /**
     * <pre>
     *群组创建者信息
     * </pre>
     *
     * <code>optional .core.UserProfile owner = 2;</code>
     */
    private void setOwner(com.akaxin.proto.core.UserProto.UserProfile value) {
      if (value == null) {
        throw new NullPointerException();
      }
      owner_ = value;

      }
    /**
     * <pre>
     *群组创建者信息
     * </pre>
     *
     * <code>optional .core.UserProfile owner = 2;</code>
     */
    private void setOwner(
        com.akaxin.proto.core.UserProto.UserProfile.Builder builderForValue) {
      owner_ = builderForValue.build();

    }
    /**
     * <pre>
     *群组创建者信息
     * </pre>
     *
     * <code>optional .core.UserProfile owner = 2;</code>
     */
    private void mergeOwner(com.akaxin.proto.core.UserProto.UserProfile value) {
      if (owner_ != null &&
          owner_ != com.akaxin.proto.core.UserProto.UserProfile.getDefaultInstance()) {
        owner_ =
          com.akaxin.proto.core.UserProto.UserProfile.newBuilder(owner_).mergeFrom(value).buildPartial();
      } else {
        owner_ = value;
      }

    }
    /**
     * <pre>
     *群组创建者信息
     * </pre>
     *
     * <code>optional .core.UserProfile owner = 2;</code>
     */
    private void clearOwner() {  owner_ = null;

    }

    public static final int GROUP_MEMBER_COUNT_FIELD_NUMBER = 3;
    private int groupMemberCount_;
    /**
     * <pre>
     *群组的成员数量
     * </pre>
     *
     * <code>optional int32 group_member_count = 3;</code>
     */
    public int getGroupMemberCount() {
      return groupMemberCount_;
    }
    /**
     * <pre>
     *群组的成员数量
     * </pre>
     *
     * <code>optional int32 group_member_count = 3;</code>
     */
    private void setGroupMemberCount(int value) {

      groupMemberCount_ = value;
    }
    /**
     * <pre>
     *群组的成员数量
     * </pre>
     *
     * <code>optional int32 group_member_count = 3;</code>
     */
    private void clearGroupMemberCount() {

      groupMemberCount_ = 0;
    }

    public static final int GROUP_LASTEST_MEMBER_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.ProtobufList<com.akaxin.proto.core.GroupProto.GroupMemberProfile> groupLastestMember_;
    /**
     * <pre>
     *群成员
     * </pre>
     *
     * <code>repeated .core.GroupMemberProfile group_lastest_member = 4;</code>
     */
    public java.util.List<com.akaxin.proto.core.GroupProto.GroupMemberProfile> getGroupLastestMemberList() {
      return groupLastestMember_;
    }
    /**
     * <pre>
     *群成员
     * </pre>
     *
     * <code>repeated .core.GroupMemberProfile group_lastest_member = 4;</code>
     */
    public java.util.List<? extends com.akaxin.proto.core.GroupProto.GroupMemberProfileOrBuilder>
        getGroupLastestMemberOrBuilderList() {
      return groupLastestMember_;
    }
    /**
     * <pre>
     *群成员
     * </pre>
     *
     * <code>repeated .core.GroupMemberProfile group_lastest_member = 4;</code>
     */
    public int getGroupLastestMemberCount() {
      return groupLastestMember_.size();
    }
    /**
     * <pre>
     *群成员
     * </pre>
     *
     * <code>repeated .core.GroupMemberProfile group_lastest_member = 4;</code>
     */
    public com.akaxin.proto.core.GroupProto.GroupMemberProfile getGroupLastestMember(int index) {
      return groupLastestMember_.get(index);
    }
    /**
     * <pre>
     *群成员
     * </pre>
     *
     * <code>repeated .core.GroupMemberProfile group_lastest_member = 4;</code>
     */
    public com.akaxin.proto.core.GroupProto.GroupMemberProfileOrBuilder getGroupLastestMemberOrBuilder(
        int index) {
      return groupLastestMember_.get(index);
    }
    private void ensureGroupLastestMemberIsMutable() {
      if (!groupLastestMember_.isModifiable()) {
        groupLastestMember_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(groupLastestMember_);
       }
    }

    /**
     * <pre>
     *群成员
     * </pre>
     *
     * <code>repeated .core.GroupMemberProfile group_lastest_member = 4;</code>
     */
    private void setGroupLastestMember(
        int index, com.akaxin.proto.core.GroupProto.GroupMemberProfile value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureGroupLastestMemberIsMutable();
      groupLastestMember_.set(index, value);
    }
    /**
     * <pre>
     *群成员
     * </pre>
     *
     * <code>repeated .core.GroupMemberProfile group_lastest_member = 4;</code>
     */
    private void setGroupLastestMember(
        int index, com.akaxin.proto.core.GroupProto.GroupMemberProfile.Builder builderForValue) {
      ensureGroupLastestMemberIsMutable();
      groupLastestMember_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     *群成员
     * </pre>
     *
     * <code>repeated .core.GroupMemberProfile group_lastest_member = 4;</code>
     */
    private void addGroupLastestMember(com.akaxin.proto.core.GroupProto.GroupMemberProfile value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureGroupLastestMemberIsMutable();
      groupLastestMember_.add(value);
    }
    /**
     * <pre>
     *群成员
     * </pre>
     *
     * <code>repeated .core.GroupMemberProfile group_lastest_member = 4;</code>
     */
    private void addGroupLastestMember(
        int index, com.akaxin.proto.core.GroupProto.GroupMemberProfile value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureGroupLastestMemberIsMutable();
      groupLastestMember_.add(index, value);
    }
    /**
     * <pre>
     *群成员
     * </pre>
     *
     * <code>repeated .core.GroupMemberProfile group_lastest_member = 4;</code>
     */
    private void addGroupLastestMember(
        com.akaxin.proto.core.GroupProto.GroupMemberProfile.Builder builderForValue) {
      ensureGroupLastestMemberIsMutable();
      groupLastestMember_.add(builderForValue.build());
    }
    /**
     * <pre>
     *群成员
     * </pre>
     *
     * <code>repeated .core.GroupMemberProfile group_lastest_member = 4;</code>
     */
    private void addGroupLastestMember(
        int index, com.akaxin.proto.core.GroupProto.GroupMemberProfile.Builder builderForValue) {
      ensureGroupLastestMemberIsMutable();
      groupLastestMember_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     *群成员
     * </pre>
     *
     * <code>repeated .core.GroupMemberProfile group_lastest_member = 4;</code>
     */
    private void addAllGroupLastestMember(
        Iterable<? extends com.akaxin.proto.core.GroupProto.GroupMemberProfile> values) {
      ensureGroupLastestMemberIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, groupLastestMember_);
    }
    /**
     * <pre>
     *群成员
     * </pre>
     *
     * <code>repeated .core.GroupMemberProfile group_lastest_member = 4;</code>
     */
    private void clearGroupLastestMember() {
      groupLastestMember_ = emptyProtobufList();
    }
    /**
     * <pre>
     *群成员
     * </pre>
     *
     * <code>repeated .core.GroupMemberProfile group_lastest_member = 4;</code>
     */
    private void removeGroupLastestMember(int index) {
      ensureGroupLastestMemberIsMutable();
      groupLastestMember_.remove(index);
    }

    public static final int CLOSE_INVITE_GROUP_CHAT_FIELD_NUMBER = 5;
    private boolean closeInviteGroupChat_;
    /**
     * <pre>
     *关闭邀请新用户群聊 true：打开  false：关闭
     * </pre>
     *
     * <code>optional bool close_invite_group_chat = 5;</code>
     */
    public boolean getCloseInviteGroupChat() {
      return closeInviteGroupChat_;
    }
    /**
     * <pre>
     *关闭邀请新用户群聊 true：打开  false：关闭
     * </pre>
     *
     * <code>optional bool close_invite_group_chat = 5;</code>
     */
    private void setCloseInviteGroupChat(boolean value) {

      closeInviteGroupChat_ = value;
    }
    /**
     * <pre>
     *关闭邀请新用户群聊 true：打开  false：关闭
     * </pre>
     *
     * <code>optional bool close_invite_group_chat = 5;</code>
     */
    private void clearCloseInviteGroupChat() {

      closeInviteGroupChat_ = false;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (profile_ != null) {
        output.writeMessage(1, getProfile());
      }
      if (owner_ != null) {
        output.writeMessage(2, getOwner());
      }
      if (groupMemberCount_ != 0) {
        output.writeInt32(3, groupMemberCount_);
      }
      for (int i = 0; i < groupLastestMember_.size(); i++) {
        output.writeMessage(4, groupLastestMember_.get(i));
      }
      if (closeInviteGroupChat_ != false) {
        output.writeBool(5, closeInviteGroupChat_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (profile_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getProfile());
      }
      if (owner_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getOwner());
      }
      if (groupMemberCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, groupMemberCount_);
      }
      for (int i = 0; i < groupLastestMember_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, groupLastestMember_.get(i));
      }
      if (closeInviteGroupChat_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, closeInviteGroupChat_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.akaxin.proto.site.ApiGroupProfileProto.ApiGroupProfileResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.akaxin.proto.site.ApiGroupProfileProto.ApiGroupProfileResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.akaxin.proto.site.ApiGroupProfileProto.ApiGroupProfileResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.akaxin.proto.site.ApiGroupProfileProto.ApiGroupProfileResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.akaxin.proto.site.ApiGroupProfileProto.ApiGroupProfileResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.site.ApiGroupProfileProto.ApiGroupProfileResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.akaxin.proto.site.ApiGroupProfileProto.ApiGroupProfileResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.site.ApiGroupProfileProto.ApiGroupProfileResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.akaxin.proto.site.ApiGroupProfileProto.ApiGroupProfileResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.site.ApiGroupProfileProto.ApiGroupProfileResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.akaxin.proto.site.ApiGroupProfileProto.ApiGroupProfileResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code site.ApiGroupProfileResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          ApiGroupProfileResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:site.ApiGroupProfileResponse)
        com.akaxin.proto.site.ApiGroupProfileProto.ApiGroupProfileResponseOrBuilder {
      // Construct using com.akaxin.proto.site.ApiGroupProfileProto.ApiGroupProfileResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *群组资料页信息
       * </pre>
       *
       * <code>optional .core.GroupProfile profile = 1;</code>
       */
      public boolean hasProfile() {
        return instance.hasProfile();
      }
      /**
       * <pre>
       *群组资料页信息
       * </pre>
       *
       * <code>optional .core.GroupProfile profile = 1;</code>
       */
      public com.akaxin.proto.core.GroupProto.GroupProfile getProfile() {
        return instance.getProfile();
      }
      /**
       * <pre>
       *群组资料页信息
       * </pre>
       *
       * <code>optional .core.GroupProfile profile = 1;</code>
       */
      public Builder setProfile(com.akaxin.proto.core.GroupProto.GroupProfile value) {
        copyOnWrite();
        instance.setProfile(value);
        return this;
        }
      /**
       * <pre>
       *群组资料页信息
       * </pre>
       *
       * <code>optional .core.GroupProfile profile = 1;</code>
       */
      public Builder setProfile(
          com.akaxin.proto.core.GroupProto.GroupProfile.Builder builderForValue) {
        copyOnWrite();
        instance.setProfile(builderForValue);
        return this;
      }
      /**
       * <pre>
       *群组资料页信息
       * </pre>
       *
       * <code>optional .core.GroupProfile profile = 1;</code>
       */
      public Builder mergeProfile(com.akaxin.proto.core.GroupProto.GroupProfile value) {
        copyOnWrite();
        instance.mergeProfile(value);
        return this;
      }
      /**
       * <pre>
       *群组资料页信息
       * </pre>
       *
       * <code>optional .core.GroupProfile profile = 1;</code>
       */
      public Builder clearProfile() {  copyOnWrite();
        instance.clearProfile();
        return this;
      }

      /**
       * <pre>
       *群组创建者信息
       * </pre>
       *
       * <code>optional .core.UserProfile owner = 2;</code>
       */
      public boolean hasOwner() {
        return instance.hasOwner();
      }
      /**
       * <pre>
       *群组创建者信息
       * </pre>
       *
       * <code>optional .core.UserProfile owner = 2;</code>
       */
      public com.akaxin.proto.core.UserProto.UserProfile getOwner() {
        return instance.getOwner();
      }
      /**
       * <pre>
       *群组创建者信息
       * </pre>
       *
       * <code>optional .core.UserProfile owner = 2;</code>
       */
      public Builder setOwner(com.akaxin.proto.core.UserProto.UserProfile value) {
        copyOnWrite();
        instance.setOwner(value);
        return this;
        }
      /**
       * <pre>
       *群组创建者信息
       * </pre>
       *
       * <code>optional .core.UserProfile owner = 2;</code>
       */
      public Builder setOwner(
          com.akaxin.proto.core.UserProto.UserProfile.Builder builderForValue) {
        copyOnWrite();
        instance.setOwner(builderForValue);
        return this;
      }
      /**
       * <pre>
       *群组创建者信息
       * </pre>
       *
       * <code>optional .core.UserProfile owner = 2;</code>
       */
      public Builder mergeOwner(com.akaxin.proto.core.UserProto.UserProfile value) {
        copyOnWrite();
        instance.mergeOwner(value);
        return this;
      }
      /**
       * <pre>
       *群组创建者信息
       * </pre>
       *
       * <code>optional .core.UserProfile owner = 2;</code>
       */
      public Builder clearOwner() {  copyOnWrite();
        instance.clearOwner();
        return this;
      }

      /**
       * <pre>
       *群组的成员数量
       * </pre>
       *
       * <code>optional int32 group_member_count = 3;</code>
       */
      public int getGroupMemberCount() {
        return instance.getGroupMemberCount();
      }
      /**
       * <pre>
       *群组的成员数量
       * </pre>
       *
       * <code>optional int32 group_member_count = 3;</code>
       */
      public Builder setGroupMemberCount(int value) {
        copyOnWrite();
        instance.setGroupMemberCount(value);
        return this;
      }
      /**
       * <pre>
       *群组的成员数量
       * </pre>
       *
       * <code>optional int32 group_member_count = 3;</code>
       */
      public Builder clearGroupMemberCount() {
        copyOnWrite();
        instance.clearGroupMemberCount();
        return this;
      }

      /**
       * <pre>
       *群成员
       * </pre>
       *
       * <code>repeated .core.GroupMemberProfile group_lastest_member = 4;</code>
       */
      public java.util.List<com.akaxin.proto.core.GroupProto.GroupMemberProfile> getGroupLastestMemberList() {
        return java.util.Collections.unmodifiableList(
            instance.getGroupLastestMemberList());
      }
      /**
       * <pre>
       *群成员
       * </pre>
       *
       * <code>repeated .core.GroupMemberProfile group_lastest_member = 4;</code>
       */
      public int getGroupLastestMemberCount() {
        return instance.getGroupLastestMemberCount();
      }/**
       * <pre>
       *群成员
       * </pre>
       *
       * <code>repeated .core.GroupMemberProfile group_lastest_member = 4;</code>
       */
      public com.akaxin.proto.core.GroupProto.GroupMemberProfile getGroupLastestMember(int index) {
        return instance.getGroupLastestMember(index);
      }
      /**
       * <pre>
       *群成员
       * </pre>
       *
       * <code>repeated .core.GroupMemberProfile group_lastest_member = 4;</code>
       */
      public Builder setGroupLastestMember(
          int index, com.akaxin.proto.core.GroupProto.GroupMemberProfile value) {
        copyOnWrite();
        instance.setGroupLastestMember(index, value);
        return this;
      }
      /**
       * <pre>
       *群成员
       * </pre>
       *
       * <code>repeated .core.GroupMemberProfile group_lastest_member = 4;</code>
       */
      public Builder setGroupLastestMember(
          int index, com.akaxin.proto.core.GroupProto.GroupMemberProfile.Builder builderForValue) {
        copyOnWrite();
        instance.setGroupLastestMember(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *群成员
       * </pre>
       *
       * <code>repeated .core.GroupMemberProfile group_lastest_member = 4;</code>
       */
      public Builder addGroupLastestMember(com.akaxin.proto.core.GroupProto.GroupMemberProfile value) {
        copyOnWrite();
        instance.addGroupLastestMember(value);
        return this;
      }
      /**
       * <pre>
       *群成员
       * </pre>
       *
       * <code>repeated .core.GroupMemberProfile group_lastest_member = 4;</code>
       */
      public Builder addGroupLastestMember(
          int index, com.akaxin.proto.core.GroupProto.GroupMemberProfile value) {
        copyOnWrite();
        instance.addGroupLastestMember(index, value);
        return this;
      }
      /**
       * <pre>
       *群成员
       * </pre>
       *
       * <code>repeated .core.GroupMemberProfile group_lastest_member = 4;</code>
       */
      public Builder addGroupLastestMember(
          com.akaxin.proto.core.GroupProto.GroupMemberProfile.Builder builderForValue) {
        copyOnWrite();
        instance.addGroupLastestMember(builderForValue);
        return this;
      }
      /**
       * <pre>
       *群成员
       * </pre>
       *
       * <code>repeated .core.GroupMemberProfile group_lastest_member = 4;</code>
       */
      public Builder addGroupLastestMember(
          int index, com.akaxin.proto.core.GroupProto.GroupMemberProfile.Builder builderForValue) {
        copyOnWrite();
        instance.addGroupLastestMember(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *群成员
       * </pre>
       *
       * <code>repeated .core.GroupMemberProfile group_lastest_member = 4;</code>
       */
      public Builder addAllGroupLastestMember(
          Iterable<? extends com.akaxin.proto.core.GroupProto.GroupMemberProfile> values) {
        copyOnWrite();
        instance.addAllGroupLastestMember(values);
        return this;
      }
      /**
       * <pre>
       *群成员
       * </pre>
       *
       * <code>repeated .core.GroupMemberProfile group_lastest_member = 4;</code>
       */
      public Builder clearGroupLastestMember() {
        copyOnWrite();
        instance.clearGroupLastestMember();
        return this;
      }
      /**
       * <pre>
       *群成员
       * </pre>
       *
       * <code>repeated .core.GroupMemberProfile group_lastest_member = 4;</code>
       */
      public Builder removeGroupLastestMember(int index) {
        copyOnWrite();
        instance.removeGroupLastestMember(index);
        return this;
      }

      /**
       * <pre>
       *关闭邀请新用户群聊 true：打开  false：关闭
       * </pre>
       *
       * <code>optional bool close_invite_group_chat = 5;</code>
       */
      public boolean getCloseInviteGroupChat() {
        return instance.getCloseInviteGroupChat();
      }
      /**
       * <pre>
       *关闭邀请新用户群聊 true：打开  false：关闭
       * </pre>
       *
       * <code>optional bool close_invite_group_chat = 5;</code>
       */
      public Builder setCloseInviteGroupChat(boolean value) {
        copyOnWrite();
        instance.setCloseInviteGroupChat(value);
        return this;
      }
      /**
       * <pre>
       *关闭邀请新用户群聊 true：打开  false：关闭
       * </pre>
       *
       * <code>optional bool close_invite_group_chat = 5;</code>
       */
      public Builder clearCloseInviteGroupChat() {
        copyOnWrite();
        instance.clearCloseInviteGroupChat();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:site.ApiGroupProfileResponse)
    }
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.akaxin.proto.site.ApiGroupProfileProto.ApiGroupProfileResponse();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          groupLastestMember_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.akaxin.proto.site.ApiGroupProfileProto.ApiGroupProfileResponse other = (com.akaxin.proto.site.ApiGroupProfileProto.ApiGroupProfileResponse) arg1;
          profile_ = visitor.visitMessage(profile_, other.profile_);
          owner_ = visitor.visitMessage(owner_, other.owner_);
          groupMemberCount_ = visitor.visitInt(groupMemberCount_ != 0, groupMemberCount_,
              other.groupMemberCount_ != 0, other.groupMemberCount_);
          groupLastestMember_= visitor.visitList(groupLastestMember_, other.groupLastestMember_);
          closeInviteGroupChat_ = visitor.visitBoolean(closeInviteGroupChat_ != false, closeInviteGroupChat_,
              other.closeInviteGroupChat_ != false, other.closeInviteGroupChat_);
          if (visitor == MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.akaxin.proto.core.GroupProto.GroupProfile.Builder subBuilder = null;
                  if (profile_ != null) {
                    subBuilder = profile_.toBuilder();
                  }
                  profile_ = input.readMessage(com.akaxin.proto.core.GroupProto.GroupProfile.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(profile_);
                    profile_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 18: {
                  com.akaxin.proto.core.UserProto.UserProfile.Builder subBuilder = null;
                  if (owner_ != null) {
                    subBuilder = owner_.toBuilder();
                  }
                  owner_ = input.readMessage(com.akaxin.proto.core.UserProto.UserProfile.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(owner_);
                    owner_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 24: {

                  groupMemberCount_ = input.readInt32();
                  break;
                }
                case 34: {
                  if (!groupLastestMember_.isModifiable()) {
                    groupLastestMember_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(groupLastestMember_);
                  }
                  groupLastestMember_.add(
                      input.readMessage(com.akaxin.proto.core.GroupProto.GroupMemberProfile.parser(), extensionRegistry));
                  break;
                }
                case 40: {

                  closeInviteGroupChat_ = input.readBool();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.akaxin.proto.site.ApiGroupProfileProto.ApiGroupProfileResponse.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:site.ApiGroupProfileResponse)
    private static final com.akaxin.proto.site.ApiGroupProfileProto.ApiGroupProfileResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ApiGroupProfileResponse();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.akaxin.proto.site.ApiGroupProfileProto.ApiGroupProfileResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ApiGroupProfileResponse> PARSER;

    public static com.google.protobuf.Parser<ApiGroupProfileResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
