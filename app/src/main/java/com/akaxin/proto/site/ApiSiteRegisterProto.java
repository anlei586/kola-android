// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: site/api_site_register.proto

package com.akaxin.proto.site;

public final class ApiSiteRegisterProto {
  private ApiSiteRegisterProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface ApiSiteRegisterRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:site.ApiSiteRegisterRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *用户身份公钥
     * </pre>
     *
     * <code>optional string user_id_pubk = 1;</code>
     */
    String getUserIdPubk();
    /**
     * <pre>
     *用户身份公钥
     * </pre>
     *
     * <code>optional string user_id_pubk = 1;</code>
     */
    com.google.protobuf.ByteString
        getUserIdPubkBytes();

    /**
     * <pre>
     *用户名
     * </pre>
     *
     * <code>optional string user_name = 2;</code>
     */
    String getUserName();
    /**
     * <pre>
     *用户名
     * </pre>
     *
     * <code>optional string user_name = 2;</code>
     */
    com.google.protobuf.ByteString
        getUserNameBytes();

    /**
     * <pre>
     *用户头像
     * </pre>
     *
     * <code>optional string user_photo = 3;</code>
     */
    String getUserPhoto();
    /**
     * <pre>
     *用户头像
     * </pre>
     *
     * <code>optional string user_photo = 3;</code>
     */
    com.google.protobuf.ByteString
        getUserPhotoBytes();

    /**
     * <pre>
     *用户邀请码
     * </pre>
     *
     * <code>optional string user_uic = 4;</code>
     */
    String getUserUic();
    /**
     * <pre>
     *用户邀请码
     * </pre>
     *
     * <code>optional string user_uic = 4;</code>
     */
    com.google.protobuf.ByteString
        getUserUicBytes();

    /**
     * <pre>
     *注册申请信息
     * </pre>
     *
     * <code>optional string apply_info = 5;</code>
     */
    String getApplyInfo();
    /**
     * <pre>
     *注册申请信息
     * </pre>
     *
     * <code>optional string apply_info = 5;</code>
     */
    com.google.protobuf.ByteString
        getApplyInfoBytes();

    /**
     * <pre>
     *站点需实名时，提供的平台手机令牌（授权码）
     * </pre>
     *
     * <code>optional string phone_token = 6;</code>
     */
    String getPhoneToken();
    /**
     * <pre>
     *站点需实名时，提供的平台手机令牌（授权码）
     * </pre>
     *
     * <code>optional string phone_token = 6;</code>
     */
    com.google.protobuf.ByteString
        getPhoneTokenBytes();

    /**
     * <pre>
     *登陆用户账号（只允许字符串开头，数字组成6～20位）（选填）
     * </pre>
     *
     * <code>optional string site_login_id = 7;</code>
     */
    String getSiteLoginId();
    /**
     * <pre>
     *登陆用户账号（只允许字符串开头，数字组成6～20位）（选填）
     * </pre>
     *
     * <code>optional string site_login_id = 7;</code>
     */
    com.google.protobuf.ByteString
        getSiteLoginIdBytes();
  }
  /**
   * Protobuf type {@code site.ApiSiteRegisterRequest}
   */
  public  static final class ApiSiteRegisterRequest extends
      com.google.protobuf.GeneratedMessageLite<
          ApiSiteRegisterRequest, ApiSiteRegisterRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:site.ApiSiteRegisterRequest)
      ApiSiteRegisterRequestOrBuilder {
    private ApiSiteRegisterRequest() {
      userIdPubk_ = "";
      userName_ = "";
      userPhoto_ = "";
      userUic_ = "";
      applyInfo_ = "";
      phoneToken_ = "";
      siteLoginId_ = "";
    }
    public static final int USER_ID_PUBK_FIELD_NUMBER = 1;
    private String userIdPubk_;
    /**
     * <pre>
     *用户身份公钥
     * </pre>
     *
     * <code>optional string user_id_pubk = 1;</code>
     */
    public String getUserIdPubk() {
      return userIdPubk_;
    }
    /**
     * <pre>
     *用户身份公钥
     * </pre>
     *
     * <code>optional string user_id_pubk = 1;</code>
     */
    public com.google.protobuf.ByteString
        getUserIdPubkBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(userIdPubk_);
    }
    /**
     * <pre>
     *用户身份公钥
     * </pre>
     *
     * <code>optional string user_id_pubk = 1;</code>
     */
    private void setUserIdPubk(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      userIdPubk_ = value;
    }
    /**
     * <pre>
     *用户身份公钥
     * </pre>
     *
     * <code>optional string user_id_pubk = 1;</code>
     */
    private void clearUserIdPubk() {

      userIdPubk_ = getDefaultInstance().getUserIdPubk();
    }
    /**
     * <pre>
     *用户身份公钥
     * </pre>
     *
     * <code>optional string user_id_pubk = 1;</code>
     */
    private void setUserIdPubkBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      userIdPubk_ = value.toStringUtf8();
    }

    public static final int USER_NAME_FIELD_NUMBER = 2;
    private String userName_;
    /**
     * <pre>
     *用户名
     * </pre>
     *
     * <code>optional string user_name = 2;</code>
     */
    public String getUserName() {
      return userName_;
    }
    /**
     * <pre>
     *用户名
     * </pre>
     *
     * <code>optional string user_name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getUserNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(userName_);
    }
    /**
     * <pre>
     *用户名
     * </pre>
     *
     * <code>optional string user_name = 2;</code>
     */
    private void setUserName(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      userName_ = value;
    }
    /**
     * <pre>
     *用户名
     * </pre>
     *
     * <code>optional string user_name = 2;</code>
     */
    private void clearUserName() {

      userName_ = getDefaultInstance().getUserName();
    }
    /**
     * <pre>
     *用户名
     * </pre>
     *
     * <code>optional string user_name = 2;</code>
     */
    private void setUserNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      userName_ = value.toStringUtf8();
    }

    public static final int USER_PHOTO_FIELD_NUMBER = 3;
    private String userPhoto_;
    /**
     * <pre>
     *用户头像
     * </pre>
     *
     * <code>optional string user_photo = 3;</code>
     */
    public String getUserPhoto() {
      return userPhoto_;
    }
    /**
     * <pre>
     *用户头像
     * </pre>
     *
     * <code>optional string user_photo = 3;</code>
     */
    public com.google.protobuf.ByteString
        getUserPhotoBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(userPhoto_);
    }
    /**
     * <pre>
     *用户头像
     * </pre>
     *
     * <code>optional string user_photo = 3;</code>
     */
    private void setUserPhoto(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      userPhoto_ = value;
    }
    /**
     * <pre>
     *用户头像
     * </pre>
     *
     * <code>optional string user_photo = 3;</code>
     */
    private void clearUserPhoto() {

      userPhoto_ = getDefaultInstance().getUserPhoto();
    }
    /**
     * <pre>
     *用户头像
     * </pre>
     *
     * <code>optional string user_photo = 3;</code>
     */
    private void setUserPhotoBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      userPhoto_ = value.toStringUtf8();
    }

    public static final int USER_UIC_FIELD_NUMBER = 4;
    private String userUic_;
    /**
     * <pre>
     *用户邀请码
     * </pre>
     *
     * <code>optional string user_uic = 4;</code>
     */
    public String getUserUic() {
      return userUic_;
    }
    /**
     * <pre>
     *用户邀请码
     * </pre>
     *
     * <code>optional string user_uic = 4;</code>
     */
    public com.google.protobuf.ByteString
        getUserUicBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(userUic_);
    }
    /**
     * <pre>
     *用户邀请码
     * </pre>
     *
     * <code>optional string user_uic = 4;</code>
     */
    private void setUserUic(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      userUic_ = value;
    }
    /**
     * <pre>
     *用户邀请码
     * </pre>
     *
     * <code>optional string user_uic = 4;</code>
     */
    private void clearUserUic() {

      userUic_ = getDefaultInstance().getUserUic();
    }
    /**
     * <pre>
     *用户邀请码
     * </pre>
     *
     * <code>optional string user_uic = 4;</code>
     */
    private void setUserUicBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      userUic_ = value.toStringUtf8();
    }

    public static final int APPLY_INFO_FIELD_NUMBER = 5;
    private String applyInfo_;
    /**
     * <pre>
     *注册申请信息
     * </pre>
     *
     * <code>optional string apply_info = 5;</code>
     */
    public String getApplyInfo() {
      return applyInfo_;
    }
    /**
     * <pre>
     *注册申请信息
     * </pre>
     *
     * <code>optional string apply_info = 5;</code>
     */
    public com.google.protobuf.ByteString
        getApplyInfoBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(applyInfo_);
    }
    /**
     * <pre>
     *注册申请信息
     * </pre>
     *
     * <code>optional string apply_info = 5;</code>
     */
    private void setApplyInfo(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      applyInfo_ = value;
    }
    /**
     * <pre>
     *注册申请信息
     * </pre>
     *
     * <code>optional string apply_info = 5;</code>
     */
    private void clearApplyInfo() {

      applyInfo_ = getDefaultInstance().getApplyInfo();
    }
    /**
     * <pre>
     *注册申请信息
     * </pre>
     *
     * <code>optional string apply_info = 5;</code>
     */
    private void setApplyInfoBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      applyInfo_ = value.toStringUtf8();
    }

    public static final int PHONE_TOKEN_FIELD_NUMBER = 6;
    private String phoneToken_;
    /**
     * <pre>
     *站点需实名时，提供的平台手机令牌（授权码）
     * </pre>
     *
     * <code>optional string phone_token = 6;</code>
     */
    public String getPhoneToken() {
      return phoneToken_;
    }
    /**
     * <pre>
     *站点需实名时，提供的平台手机令牌（授权码）
     * </pre>
     *
     * <code>optional string phone_token = 6;</code>
     */
    public com.google.protobuf.ByteString
        getPhoneTokenBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(phoneToken_);
    }
    /**
     * <pre>
     *站点需实名时，提供的平台手机令牌（授权码）
     * </pre>
     *
     * <code>optional string phone_token = 6;</code>
     */
    private void setPhoneToken(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      phoneToken_ = value;
    }
    /**
     * <pre>
     *站点需实名时，提供的平台手机令牌（授权码）
     * </pre>
     *
     * <code>optional string phone_token = 6;</code>
     */
    private void clearPhoneToken() {

      phoneToken_ = getDefaultInstance().getPhoneToken();
    }
    /**
     * <pre>
     *站点需实名时，提供的平台手机令牌（授权码）
     * </pre>
     *
     * <code>optional string phone_token = 6;</code>
     */
    private void setPhoneTokenBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      phoneToken_ = value.toStringUtf8();
    }

    public static final int SITE_LOGIN_ID_FIELD_NUMBER = 7;
    private String siteLoginId_;
    /**
     * <pre>
     *登陆用户账号（只允许字符串开头，数字组成6～20位）（选填）
     * </pre>
     *
     * <code>optional string site_login_id = 7;</code>
     */
    public String getSiteLoginId() {
      return siteLoginId_;
    }
    /**
     * <pre>
     *登陆用户账号（只允许字符串开头，数字组成6～20位）（选填）
     * </pre>
     *
     * <code>optional string site_login_id = 7;</code>
     */
    public com.google.protobuf.ByteString
        getSiteLoginIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(siteLoginId_);
    }
    /**
     * <pre>
     *登陆用户账号（只允许字符串开头，数字组成6～20位）（选填）
     * </pre>
     *
     * <code>optional string site_login_id = 7;</code>
     */
    private void setSiteLoginId(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      siteLoginId_ = value;
    }
    /**
     * <pre>
     *登陆用户账号（只允许字符串开头，数字组成6～20位）（选填）
     * </pre>
     *
     * <code>optional string site_login_id = 7;</code>
     */
    private void clearSiteLoginId() {

      siteLoginId_ = getDefaultInstance().getSiteLoginId();
    }
    /**
     * <pre>
     *登陆用户账号（只允许字符串开头，数字组成6～20位）（选填）
     * </pre>
     *
     * <code>optional string site_login_id = 7;</code>
     */
    private void setSiteLoginIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      siteLoginId_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!userIdPubk_.isEmpty()) {
        output.writeString(1, getUserIdPubk());
      }
      if (!userName_.isEmpty()) {
        output.writeString(2, getUserName());
      }
      if (!userPhoto_.isEmpty()) {
        output.writeString(3, getUserPhoto());
      }
      if (!userUic_.isEmpty()) {
        output.writeString(4, getUserUic());
      }
      if (!applyInfo_.isEmpty()) {
        output.writeString(5, getApplyInfo());
      }
      if (!phoneToken_.isEmpty()) {
        output.writeString(6, getPhoneToken());
      }
      if (!siteLoginId_.isEmpty()) {
        output.writeString(7, getSiteLoginId());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!userIdPubk_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getUserIdPubk());
      }
      if (!userName_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getUserName());
      }
      if (!userPhoto_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getUserPhoto());
      }
      if (!userUic_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getUserUic());
      }
      if (!applyInfo_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getApplyInfo());
      }
      if (!phoneToken_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(6, getPhoneToken());
      }
      if (!siteLoginId_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(7, getSiteLoginId());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.akaxin.proto.site.ApiSiteRegisterProto.ApiSiteRegisterRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.akaxin.proto.site.ApiSiteRegisterProto.ApiSiteRegisterRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.akaxin.proto.site.ApiSiteRegisterProto.ApiSiteRegisterRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.akaxin.proto.site.ApiSiteRegisterProto.ApiSiteRegisterRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.akaxin.proto.site.ApiSiteRegisterProto.ApiSiteRegisterRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.site.ApiSiteRegisterProto.ApiSiteRegisterRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.akaxin.proto.site.ApiSiteRegisterProto.ApiSiteRegisterRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.site.ApiSiteRegisterProto.ApiSiteRegisterRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.akaxin.proto.site.ApiSiteRegisterProto.ApiSiteRegisterRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.site.ApiSiteRegisterProto.ApiSiteRegisterRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.akaxin.proto.site.ApiSiteRegisterProto.ApiSiteRegisterRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code site.ApiSiteRegisterRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          ApiSiteRegisterRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:site.ApiSiteRegisterRequest)
        com.akaxin.proto.site.ApiSiteRegisterProto.ApiSiteRegisterRequestOrBuilder {
      // Construct using com.akaxin.proto.site.ApiSiteRegisterProto.ApiSiteRegisterRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *用户身份公钥
       * </pre>
       *
       * <code>optional string user_id_pubk = 1;</code>
       */
      public String getUserIdPubk() {
        return instance.getUserIdPubk();
      }
      /**
       * <pre>
       *用户身份公钥
       * </pre>
       *
       * <code>optional string user_id_pubk = 1;</code>
       */
      public com.google.protobuf.ByteString
          getUserIdPubkBytes() {
        return instance.getUserIdPubkBytes();
      }
      /**
       * <pre>
       *用户身份公钥
       * </pre>
       *
       * <code>optional string user_id_pubk = 1;</code>
       */
      public Builder setUserIdPubk(
          String value) {
        copyOnWrite();
        instance.setUserIdPubk(value);
        return this;
      }
      /**
       * <pre>
       *用户身份公钥
       * </pre>
       *
       * <code>optional string user_id_pubk = 1;</code>
       */
      public Builder clearUserIdPubk() {
        copyOnWrite();
        instance.clearUserIdPubk();
        return this;
      }
      /**
       * <pre>
       *用户身份公钥
       * </pre>
       *
       * <code>optional string user_id_pubk = 1;</code>
       */
      public Builder setUserIdPubkBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setUserIdPubkBytes(value);
        return this;
      }

      /**
       * <pre>
       *用户名
       * </pre>
       *
       * <code>optional string user_name = 2;</code>
       */
      public String getUserName() {
        return instance.getUserName();
      }
      /**
       * <pre>
       *用户名
       * </pre>
       *
       * <code>optional string user_name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getUserNameBytes() {
        return instance.getUserNameBytes();
      }
      /**
       * <pre>
       *用户名
       * </pre>
       *
       * <code>optional string user_name = 2;</code>
       */
      public Builder setUserName(
          String value) {
        copyOnWrite();
        instance.setUserName(value);
        return this;
      }
      /**
       * <pre>
       *用户名
       * </pre>
       *
       * <code>optional string user_name = 2;</code>
       */
      public Builder clearUserName() {
        copyOnWrite();
        instance.clearUserName();
        return this;
      }
      /**
       * <pre>
       *用户名
       * </pre>
       *
       * <code>optional string user_name = 2;</code>
       */
      public Builder setUserNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setUserNameBytes(value);
        return this;
      }

      /**
       * <pre>
       *用户头像
       * </pre>
       *
       * <code>optional string user_photo = 3;</code>
       */
      public String getUserPhoto() {
        return instance.getUserPhoto();
      }
      /**
       * <pre>
       *用户头像
       * </pre>
       *
       * <code>optional string user_photo = 3;</code>
       */
      public com.google.protobuf.ByteString
          getUserPhotoBytes() {
        return instance.getUserPhotoBytes();
      }
      /**
       * <pre>
       *用户头像
       * </pre>
       *
       * <code>optional string user_photo = 3;</code>
       */
      public Builder setUserPhoto(
          String value) {
        copyOnWrite();
        instance.setUserPhoto(value);
        return this;
      }
      /**
       * <pre>
       *用户头像
       * </pre>
       *
       * <code>optional string user_photo = 3;</code>
       */
      public Builder clearUserPhoto() {
        copyOnWrite();
        instance.clearUserPhoto();
        return this;
      }
      /**
       * <pre>
       *用户头像
       * </pre>
       *
       * <code>optional string user_photo = 3;</code>
       */
      public Builder setUserPhotoBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setUserPhotoBytes(value);
        return this;
      }

      /**
       * <pre>
       *用户邀请码
       * </pre>
       *
       * <code>optional string user_uic = 4;</code>
       */
      public String getUserUic() {
        return instance.getUserUic();
      }
      /**
       * <pre>
       *用户邀请码
       * </pre>
       *
       * <code>optional string user_uic = 4;</code>
       */
      public com.google.protobuf.ByteString
          getUserUicBytes() {
        return instance.getUserUicBytes();
      }
      /**
       * <pre>
       *用户邀请码
       * </pre>
       *
       * <code>optional string user_uic = 4;</code>
       */
      public Builder setUserUic(
          String value) {
        copyOnWrite();
        instance.setUserUic(value);
        return this;
      }
      /**
       * <pre>
       *用户邀请码
       * </pre>
       *
       * <code>optional string user_uic = 4;</code>
       */
      public Builder clearUserUic() {
        copyOnWrite();
        instance.clearUserUic();
        return this;
      }
      /**
       * <pre>
       *用户邀请码
       * </pre>
       *
       * <code>optional string user_uic = 4;</code>
       */
      public Builder setUserUicBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setUserUicBytes(value);
        return this;
      }

      /**
       * <pre>
       *注册申请信息
       * </pre>
       *
       * <code>optional string apply_info = 5;</code>
       */
      public String getApplyInfo() {
        return instance.getApplyInfo();
      }
      /**
       * <pre>
       *注册申请信息
       * </pre>
       *
       * <code>optional string apply_info = 5;</code>
       */
      public com.google.protobuf.ByteString
          getApplyInfoBytes() {
        return instance.getApplyInfoBytes();
      }
      /**
       * <pre>
       *注册申请信息
       * </pre>
       *
       * <code>optional string apply_info = 5;</code>
       */
      public Builder setApplyInfo(
          String value) {
        copyOnWrite();
        instance.setApplyInfo(value);
        return this;
      }
      /**
       * <pre>
       *注册申请信息
       * </pre>
       *
       * <code>optional string apply_info = 5;</code>
       */
      public Builder clearApplyInfo() {
        copyOnWrite();
        instance.clearApplyInfo();
        return this;
      }
      /**
       * <pre>
       *注册申请信息
       * </pre>
       *
       * <code>optional string apply_info = 5;</code>
       */
      public Builder setApplyInfoBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setApplyInfoBytes(value);
        return this;
      }

      /**
       * <pre>
       *站点需实名时，提供的平台手机令牌（授权码）
       * </pre>
       *
       * <code>optional string phone_token = 6;</code>
       */
      public String getPhoneToken() {
        return instance.getPhoneToken();
      }
      /**
       * <pre>
       *站点需实名时，提供的平台手机令牌（授权码）
       * </pre>
       *
       * <code>optional string phone_token = 6;</code>
       */
      public com.google.protobuf.ByteString
          getPhoneTokenBytes() {
        return instance.getPhoneTokenBytes();
      }
      /**
       * <pre>
       *站点需实名时，提供的平台手机令牌（授权码）
       * </pre>
       *
       * <code>optional string phone_token = 6;</code>
       */
      public Builder setPhoneToken(
          String value) {
        copyOnWrite();
        instance.setPhoneToken(value);
        return this;
      }
      /**
       * <pre>
       *站点需实名时，提供的平台手机令牌（授权码）
       * </pre>
       *
       * <code>optional string phone_token = 6;</code>
       */
      public Builder clearPhoneToken() {
        copyOnWrite();
        instance.clearPhoneToken();
        return this;
      }
      /**
       * <pre>
       *站点需实名时，提供的平台手机令牌（授权码）
       * </pre>
       *
       * <code>optional string phone_token = 6;</code>
       */
      public Builder setPhoneTokenBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPhoneTokenBytes(value);
        return this;
      }

      /**
       * <pre>
       *登陆用户账号（只允许字符串开头，数字组成6～20位）（选填）
       * </pre>
       *
       * <code>optional string site_login_id = 7;</code>
       */
      public String getSiteLoginId() {
        return instance.getSiteLoginId();
      }
      /**
       * <pre>
       *登陆用户账号（只允许字符串开头，数字组成6～20位）（选填）
       * </pre>
       *
       * <code>optional string site_login_id = 7;</code>
       */
      public com.google.protobuf.ByteString
          getSiteLoginIdBytes() {
        return instance.getSiteLoginIdBytes();
      }
      /**
       * <pre>
       *登陆用户账号（只允许字符串开头，数字组成6～20位）（选填）
       * </pre>
       *
       * <code>optional string site_login_id = 7;</code>
       */
      public Builder setSiteLoginId(
          String value) {
        copyOnWrite();
        instance.setSiteLoginId(value);
        return this;
      }
      /**
       * <pre>
       *登陆用户账号（只允许字符串开头，数字组成6～20位）（选填）
       * </pre>
       *
       * <code>optional string site_login_id = 7;</code>
       */
      public Builder clearSiteLoginId() {
        copyOnWrite();
        instance.clearSiteLoginId();
        return this;
      }
      /**
       * <pre>
       *登陆用户账号（只允许字符串开头，数字组成6～20位）（选填）
       * </pre>
       *
       * <code>optional string site_login_id = 7;</code>
       */
      public Builder setSiteLoginIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSiteLoginIdBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:site.ApiSiteRegisterRequest)
    }
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.akaxin.proto.site.ApiSiteRegisterProto.ApiSiteRegisterRequest();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.akaxin.proto.site.ApiSiteRegisterProto.ApiSiteRegisterRequest other = (com.akaxin.proto.site.ApiSiteRegisterProto.ApiSiteRegisterRequest) arg1;
          userIdPubk_ = visitor.visitString(!userIdPubk_.isEmpty(), userIdPubk_,
              !other.userIdPubk_.isEmpty(), other.userIdPubk_);
          userName_ = visitor.visitString(!userName_.isEmpty(), userName_,
              !other.userName_.isEmpty(), other.userName_);
          userPhoto_ = visitor.visitString(!userPhoto_.isEmpty(), userPhoto_,
              !other.userPhoto_.isEmpty(), other.userPhoto_);
          userUic_ = visitor.visitString(!userUic_.isEmpty(), userUic_,
              !other.userUic_.isEmpty(), other.userUic_);
          applyInfo_ = visitor.visitString(!applyInfo_.isEmpty(), applyInfo_,
              !other.applyInfo_.isEmpty(), other.applyInfo_);
          phoneToken_ = visitor.visitString(!phoneToken_.isEmpty(), phoneToken_,
              !other.phoneToken_.isEmpty(), other.phoneToken_);
          siteLoginId_ = visitor.visitString(!siteLoginId_.isEmpty(), siteLoginId_,
              !other.siteLoginId_.isEmpty(), other.siteLoginId_);
          if (visitor == MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  userIdPubk_ = s;
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();

                  userName_ = s;
                  break;
                }
                case 26: {
                  String s = input.readStringRequireUtf8();

                  userPhoto_ = s;
                  break;
                }
                case 34: {
                  String s = input.readStringRequireUtf8();

                  userUic_ = s;
                  break;
                }
                case 42: {
                  String s = input.readStringRequireUtf8();

                  applyInfo_ = s;
                  break;
                }
                case 50: {
                  String s = input.readStringRequireUtf8();

                  phoneToken_ = s;
                  break;
                }
                case 58: {
                  String s = input.readStringRequireUtf8();

                  siteLoginId_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.akaxin.proto.site.ApiSiteRegisterProto.ApiSiteRegisterRequest.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:site.ApiSiteRegisterRequest)
    private static final com.akaxin.proto.site.ApiSiteRegisterProto.ApiSiteRegisterRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ApiSiteRegisterRequest();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.akaxin.proto.site.ApiSiteRegisterProto.ApiSiteRegisterRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ApiSiteRegisterRequest> PARSER;

    public static com.google.protobuf.Parser<ApiSiteRegisterRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ApiSiteRegisterResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:site.ApiSiteRegisterResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *返回用户在站点的用户ID,后期登陆以及其他情况使用。节省使用公钥的传输消费
     * </pre>
     *
     * <code>optional string site_user_id = 1;</code>
     */
    String getSiteUserId();
    /**
     * <pre>
     *返回用户在站点的用户ID,后期登陆以及其他情况使用。节省使用公钥的传输消费
     * </pre>
     *
     * <code>optional string site_user_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getSiteUserIdBytes();
  }
  /**
   * Protobuf type {@code site.ApiSiteRegisterResponse}
   */
  public  static final class ApiSiteRegisterResponse extends
      com.google.protobuf.GeneratedMessageLite<
          ApiSiteRegisterResponse, ApiSiteRegisterResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:site.ApiSiteRegisterResponse)
      ApiSiteRegisterResponseOrBuilder {
    private ApiSiteRegisterResponse() {
      siteUserId_ = "";
    }
    public static final int SITE_USER_ID_FIELD_NUMBER = 1;
    private String siteUserId_;
    /**
     * <pre>
     *返回用户在站点的用户ID,后期登陆以及其他情况使用。节省使用公钥的传输消费
     * </pre>
     *
     * <code>optional string site_user_id = 1;</code>
     */
    public String getSiteUserId() {
      return siteUserId_;
    }
    /**
     * <pre>
     *返回用户在站点的用户ID,后期登陆以及其他情况使用。节省使用公钥的传输消费
     * </pre>
     *
     * <code>optional string site_user_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSiteUserIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(siteUserId_);
    }
    /**
     * <pre>
     *返回用户在站点的用户ID,后期登陆以及其他情况使用。节省使用公钥的传输消费
     * </pre>
     *
     * <code>optional string site_user_id = 1;</code>
     */
    private void setSiteUserId(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      siteUserId_ = value;
    }
    /**
     * <pre>
     *返回用户在站点的用户ID,后期登陆以及其他情况使用。节省使用公钥的传输消费
     * </pre>
     *
     * <code>optional string site_user_id = 1;</code>
     */
    private void clearSiteUserId() {

      siteUserId_ = getDefaultInstance().getSiteUserId();
    }
    /**
     * <pre>
     *返回用户在站点的用户ID,后期登陆以及其他情况使用。节省使用公钥的传输消费
     * </pre>
     *
     * <code>optional string site_user_id = 1;</code>
     */
    private void setSiteUserIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      siteUserId_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!siteUserId_.isEmpty()) {
        output.writeString(1, getSiteUserId());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!siteUserId_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getSiteUserId());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.akaxin.proto.site.ApiSiteRegisterProto.ApiSiteRegisterResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.akaxin.proto.site.ApiSiteRegisterProto.ApiSiteRegisterResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.akaxin.proto.site.ApiSiteRegisterProto.ApiSiteRegisterResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.akaxin.proto.site.ApiSiteRegisterProto.ApiSiteRegisterResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.akaxin.proto.site.ApiSiteRegisterProto.ApiSiteRegisterResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.site.ApiSiteRegisterProto.ApiSiteRegisterResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.akaxin.proto.site.ApiSiteRegisterProto.ApiSiteRegisterResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.site.ApiSiteRegisterProto.ApiSiteRegisterResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.akaxin.proto.site.ApiSiteRegisterProto.ApiSiteRegisterResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.akaxin.proto.site.ApiSiteRegisterProto.ApiSiteRegisterResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.akaxin.proto.site.ApiSiteRegisterProto.ApiSiteRegisterResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code site.ApiSiteRegisterResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          ApiSiteRegisterResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:site.ApiSiteRegisterResponse)
        com.akaxin.proto.site.ApiSiteRegisterProto.ApiSiteRegisterResponseOrBuilder {
      // Construct using com.akaxin.proto.site.ApiSiteRegisterProto.ApiSiteRegisterResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *返回用户在站点的用户ID,后期登陆以及其他情况使用。节省使用公钥的传输消费
       * </pre>
       *
       * <code>optional string site_user_id = 1;</code>
       */
      public String getSiteUserId() {
        return instance.getSiteUserId();
      }
      /**
       * <pre>
       *返回用户在站点的用户ID,后期登陆以及其他情况使用。节省使用公钥的传输消费
       * </pre>
       *
       * <code>optional string site_user_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSiteUserIdBytes() {
        return instance.getSiteUserIdBytes();
      }
      /**
       * <pre>
       *返回用户在站点的用户ID,后期登陆以及其他情况使用。节省使用公钥的传输消费
       * </pre>
       *
       * <code>optional string site_user_id = 1;</code>
       */
      public Builder setSiteUserId(
          String value) {
        copyOnWrite();
        instance.setSiteUserId(value);
        return this;
      }
      /**
       * <pre>
       *返回用户在站点的用户ID,后期登陆以及其他情况使用。节省使用公钥的传输消费
       * </pre>
       *
       * <code>optional string site_user_id = 1;</code>
       */
      public Builder clearSiteUserId() {
        copyOnWrite();
        instance.clearSiteUserId();
        return this;
      }
      /**
       * <pre>
       *返回用户在站点的用户ID,后期登陆以及其他情况使用。节省使用公钥的传输消费
       * </pre>
       *
       * <code>optional string site_user_id = 1;</code>
       */
      public Builder setSiteUserIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSiteUserIdBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:site.ApiSiteRegisterResponse)
    }
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.akaxin.proto.site.ApiSiteRegisterProto.ApiSiteRegisterResponse();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.akaxin.proto.site.ApiSiteRegisterProto.ApiSiteRegisterResponse other = (com.akaxin.proto.site.ApiSiteRegisterProto.ApiSiteRegisterResponse) arg1;
          siteUserId_ = visitor.visitString(!siteUserId_.isEmpty(), siteUserId_,
              !other.siteUserId_.isEmpty(), other.siteUserId_);
          if (visitor == MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  siteUserId_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.akaxin.proto.site.ApiSiteRegisterProto.ApiSiteRegisterResponse.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:site.ApiSiteRegisterResponse)
    private static final com.akaxin.proto.site.ApiSiteRegisterProto.ApiSiteRegisterResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ApiSiteRegisterResponse();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.akaxin.proto.site.ApiSiteRegisterProto.ApiSiteRegisterResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ApiSiteRegisterResponse> PARSER;

    public static com.google.protobuf.Parser<ApiSiteRegisterResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
